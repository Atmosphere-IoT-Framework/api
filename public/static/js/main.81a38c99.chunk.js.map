{"version":3,"sources":["helpers/data.helpers.ts","services/http.service.ts","services/config.service.ts","components/app.context.ts","components/withContext/withContext.comp.tsx","components/loader/loader.comp.tsx","helpers/pagination.helpers.ts","components/button/button.comp.tsx","components/infiniteLoader/infiniteLoader.comp.tsx","components/pagination/pagination.comp.tsx","components/table/table.comp.tsx","components/cards/cards.comp.tsx","components/formRow/formRow.comp.tsx","components/queryParams/queryParams.comp.tsx","components/popup/popup.comp.tsx","helpers/file.helpers.ts","components/formPopup/formPopup.comp.tsx","components/filterField/filterField.comp.tsx","common/models/states.types.helper.ts","common/models/config.types.helper.ts","components/page/page.comp.tsx","components/authPage/authPage.comp.tsx","components/navigation/navigation.comp.tsx","components/customStyles/customStyles.comp.tsx","components/app.tsx","serviceWorker.ts","index.tsx","common/locale.js"],"names":["dataHelpers","data","dataPath","attr","extractedData","digProps","split","prop","field","type","arrayType","HttpService","baseUrl","unauthorizedRedirectUrl","errorMessageDataPath","loginUrl","requestHeaders","this","url","indexOf","rawData","outputUrl","Object","keys","forEach","key","urlParamName","replace","queryParams","length","replaceParamsInUrl","params","page","param","value","name","push","join","console","log","reqUrl","urlIsAbsolute","origUrl","finalUrl","buildUrl","authorization","sessionStorage","getItem","Authorization","method","toUpperCase","headers","assign","body","undefined","res","errorMessage","json","path","dataAtPath","extractDataByDataPath","status","statusText","redirectUrl","encodeURIComponent","document","location","href","Error","getErrorMessage","responseType","fetch","ok","text","handleError","buildRequest","makeRequest","httpService","HTTPService","endsWith","import","default","getRemoteConfig","config","isValid","configSchema","require","validate","Ajv","allErrors","verbose","compile","firstError","errors","message","error","AppContext","React","createContext","activePage","setError","setActivePage","withAppContext","Component","props","Consumer","context","Loader","className","paginationHelpers","parseInt","_page","_itemsPerPage","_total","Button","color","children","InfiniteLoader","Pagination","callbacks","pagination","previousTitle","customLabels","locale","previous_page","nextTitle","next_page","disabled","hasPreviousPage","onClick","previousPage","title","aria-hidden","hasNextPage","nextPage","Table","items","fields","customActions","editLabel","buttons","editItem","deleteLabel","deleteItem","actionColumnHeader","tableColumnHeaders","actions","paginationCallbacks","getNextPage","getPreviousPage","renderTableRow","item","rowIdx","map","fieldIdx","truncate","origField","origItem","src","alt","label","fieldValue","target","rel","urlLabel","style","backgroundColor","html","htmlCode","dangerouslySetInnerHTML","__html","renderTableCell","put","call","action","idx","icon","delete","renderTableContent","useEffect","clientHeight","window","innerHeight","dataLength","next","hasMore","loader","Cards","renderActions","cardIdx","renderCard","onError","e","currentTarget","Fragment","renderRow","renderCardSkeleton","duration","startingIndex","Array","from","limit","renderSkeletons","FormRow","direction","showReset","onChange","useState","optionSources","setOptionSources","pageHeaders","addArrayItemLabel","addArrayItem","clearLabel","clearInput","renderArrayItems","originalField","array","itemIdx","inputField","renderFieldInput","fieldName","updatedArray","localValue","splice","removeItemToFieldArray","aria-label","preventDefault","addItemToFieldArray","changeCallback","inputProps","defaultPlaceholder","placeholder","readonly","required","checked","optionSource","a","async","actualMethod","result","optionSourceData","option","valuePath","displayPath","display","toast","loadOptionSourceFromRemote","sortBy","finalOptions","options","sortedOptions","orderBy","placeholders","object","enter_text","number","valueAsNumber","email","password","accept","file","date","QueryParams","initialParams","paginationConfig","submitCallback","setQueryParams","submit","formChanged","submitAfterChange","updatedQueryParams","filteredParams","filter","includes","search","onSubmit","queryParam","hidden","portalRoot","getElementById","createElement","setAttribute","append","PortalPopup","el","componentDidMount","appendChild","componentWillUnmount","removeChild","ReactDOM","createPortal","Popup","_handleKeyDown","show","closeCallback","keyCode","closeLabel","closeForm","ref","refCallback","addEventListener","bind","removeEventListener","fileHelpers","fieldIndex","unflatten","FormPopup","getSingleConfig","methodConfig","fieldsCopy","JSON","parse","stringify","loading","setLoading","formFields","setFormFields","finalRawData","setFinalRawData","submitForm","finalObject","includeOriginalFields","formData","FormData","containFiles","isMultipartForm","validationError","useInUrl","checkIfFieldIsObject","fileInput","querySelector","files","firstFile","success","updatedFormFields","originalName","dataPathSplit","lookupValue","objToLookIn","pathElem","lookup","initFormFields","FilterField","toLowerCase","isQueryPaginationState","obj","source","isBodyPaginationState","isQueryPagination","isBodyPagination","buildInitQueryParamsAndPaginationState","initQueryParams","initialPagination","descending","find","previous","Page","useParams","useHistory","pageMethods","methods","getAllConfig","getAll","infiniteScroll","getSingle","postConfig","post","putConfig","deleteConfig","addItemLabel","addItem","addItemFormTitle","formTitles","editItemFormTitle","openedPopup","setOpenedPopup","setPagination","setItems","setFilter","openEditPopup","updateItem","openCustomActionPopup","performAction","fetchPageData","isArray","dataTransform","orderedItems","total","newPaginationState","getUpdatedPaginationState","getAllRequest","confirm","updatedParams","remove","submitQueryParams","reset","paramsToUrl","queryState","newState","nextPath","prevPath","countPath","nextActivePage","pages","p","pIdx","id","parsedParams","QueryString","finalQueryParams","decodeURIComponent","extractQueryParams","description","fieldsToFilter","filterable","currentCountFrom","currentCountTo","showing_result","out_of","itemsCount","renderPaginationStateLabel","filteredItems","passFilter","nothing_to_see","newPage","renderItemsUI","renderPageContent","refreshData","AuthPage","user","setUser","pwd","setPwd","tenant","setTenant","credentials","username","login_error","setItem","token","state","pathname","username_suggestion","event","password_suggenstion","tenant_suggenstion","Navigation","isOpened","setIsOpened","to","activeClassName","CustomStyles","cssVars","styles","vars","arr","defaultAppName","changeFavicon","link","oldLink","head","App","firstLoad","setFirstLoad","setConfig","appName","loadConfig","windowConfig","RESTool","remoteConfig","ConfigService","loadDefaultConfig","favicon","remoteUrl","validateConfig","Provider","customStyles","scrollDuration","cosParameter","scrollY","scrollCount","oldTimestamp","performance","now","requestAnimationFrame","step","newTimestamp","Math","PI","scrollTo","round","cos","scrollToTop","exact","component","position","POSITION","TOP_CENTER","autoClose","draggable","Boolean","hostname","match","render","navigator","serviceWorker","ready","then","registration","unregister","freeze","module","exports"],"mappings":"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","file":"static/js/main.81a38c99.chunk.js","sourcesContent":["import { IConfigInputField } from \"../common/models/config.model\";\r\n\r\nclass DataHelpers {\r\n\r\n  public extractDataByDataPath(data: any, dataPath: string, attr: string | null = null) {\r\n    if (!data || !dataPath) {\r\n      if (attr) {\r\n        return data[attr];\r\n      }\r\n      return data;\r\n    }\r\n\t\r\n    let extractedData: any = data;\r\n    const digProps: string[] = dataPath.split('.');\r\n\r\n    for (let prop of digProps) {\r\n      if (typeof extractedData[prop] !== 'undefined') {\r\n        extractedData = extractedData[prop];\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n\r\n    if (typeof extractedData === 'undefined') {\r\n      return null;\r\n    }\r\n\r\n    if (attr) {\r\n      return extractedData[attr];\r\n    }\r\n\r\n    return extractedData;\r\n  }\r\n\r\n  public checkIfFieldIsObject(field: IConfigInputField): boolean {\r\n    if (field.type === 'object') {\r\n      return true;\r\n    }\r\n\r\n    if (field.type === 'array') {\r\n      if (!field.arrayType || field.arrayType === 'object') {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n}\r\n\r\nexport const dataHelpers = new DataHelpers();","import { TConfigMethod, IQueryParam } from '../common/models/config.model';\r\nimport { dataHelpers } from '../helpers/data.helpers';\r\n\r\nexport type ResponseType = 'json' | 'text' | 'boolean' | 'status';\r\n\r\nexport interface IFetchParams {\r\n  origUrl: string\r\n  method?: TConfigMethod\r\n  headers?: any\r\n  queryParams?: IQueryParam[]\r\n  rawData?: any\r\n  body?: any\r\n  responseType?: ResponseType\r\n}\r\n\r\nclass HttpService {\r\n  public baseUrl: string;\r\n  public loginUrl: string;\r\n  public unauthorizedRedirectUrl: string;\r\n  public errorMessageDataPath: string | string[];\r\n  public requestHeaders: any;\r\n\r\n  constructor(baseUrl: string = '', unauthorizedRedirectUrl: string = '', errorMessageDataPath: string = '', loginUrl: string = '') {\r\n    this.baseUrl = baseUrl || '';\r\n    this.loginUrl = loginUrl || '';\r\n    this.unauthorizedRedirectUrl = unauthorizedRedirectUrl || '';\r\n    this.errorMessageDataPath = errorMessageDataPath || '';\r\n    this.requestHeaders = {};\r\n  }\r\n\r\n  private urlIsAbsolute(url: string) {\r\n    if (url.indexOf('http') === 0 || url.indexOf('https') === 0) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private replaceParamsInUrl(url: string, rawData?: any): string {\r\n    if (!rawData || typeof rawData !== 'object') {\r\n      return url;\r\n    }\r\n\r\n    let outputUrl = url;\r\n\r\n    Object.keys(rawData).forEach((key) => {\r\n      const urlParamName = `:${key}`;\r\n      outputUrl = outputUrl.replace(urlParamName, rawData[key] as string);\r\n    });\r\n\r\n    return outputUrl;\r\n  }\r\n\r\n  private buildUrl(url: string, queryParams: IQueryParam[] = [], rawData?: any): string {\r\n    if (!queryParams || !queryParams.length) {\r\n      return this.replaceParamsInUrl(url, rawData);\r\n    }\r\n\r\n    let outputUrl = url;\r\n    const params = [];\r\n    let page = '-1'\r\n\r\n    for (let param of queryParams) {\r\n      let value = '';\r\n      if (!param.name || typeof param.value === 'undefined') { continue; } \r\n      if (param.name === 'page') { page = param.value; continue; }\r\n      if (param.name === 'info') value = '{\"$regex\":\"' + param.value + '\",\"$options\":\"i\"}';\r\n      else value = '\"' + param.value + '\"';\r\n      //test regex\r\n      params.push(`\"${param.name}\":{\"$regex\" : ${value || ''}}`);\r\n      //params.push(`\"${param.name}\":${value || ''}`);\r\n\r\n    }\r\n\r\n    outputUrl += '?filter={' + params.join(',') + '}';\r\n    if(page != '-1') outputUrl += \"&page=\" + page;\r\n\r\n    console.log(\"Requested URL : \"+outputUrl);\r\n\r\n    return outputUrl;\r\n  }\r\n\r\n  private buildRequest(params: IFetchParams): { url: string, params: any } {\r\n    const reqUrl: string = this.urlIsAbsolute(params.origUrl) ? params.origUrl : this.baseUrl + params.origUrl;\r\n    const finalUrl: string = this.buildUrl(reqUrl, params.queryParams, params.rawData);\r\n    const authorization = sessionStorage.getItem('diten-token') ? { Authorization: sessionStorage.getItem('diten-token'), } : {};\r\n    const requestParams = {\r\n      method: params.method ? params.method.toUpperCase() : 'GET',\r\n      headers: Object.assign(authorization, this.requestHeaders, params.headers || {}),\r\n      body: params.method === 'post' || params.method === 'put' || params.method === 'patch' ? params.body : undefined\r\n    };\r\n\r\n    return {\r\n      url: finalUrl,\r\n      params: requestParams\r\n    };\r\n  }\r\n\r\n  private async getErrorMessage(res: Response | any): Promise<string> {\r\n    let errorMessage: string = '';\r\n\r\n    try {\r\n      const body = await res.json();\r\n\r\n      for (const path of this.errorMessageDataPath) {\r\n        const dataAtPath = dataHelpers.extractDataByDataPath(body, path);\r\n\r\n        if (dataAtPath) {\r\n          errorMessage = dataAtPath;\r\n        }\r\n      }\r\n    } catch { } // TODO: proper handling of errors (^.^)\r\n\r\n    return errorMessage && errorMessage.length ?\r\n      errorMessage :\r\n      `${res.status} - ${res.statusText || ''}`;\r\n  }\r\n\r\n  private async handleError(res: Response) {\r\n    // In case response status is \"Unauthorized\", redirect to relevant url\r\n    if (res.status === 401 && this.unauthorizedRedirectUrl) {\r\n      const redirectUrl: string = this.unauthorizedRedirectUrl.replace(':returnUrl', encodeURIComponent(document.location.href));\r\n      document.location.href = redirectUrl;\r\n      return;\r\n    }\r\n\r\n    throw new Error(await this.getErrorMessage(res));\r\n  }\r\n\r\n  private async makeRequest(url: string, params: any = {}, responseType: ResponseType = 'json') {\r\n    const res: Response = await fetch(url, Object.assign({}, params, {}));\r\n\r\n    if (res.ok) {\r\n      switch (responseType) {\r\n        case 'json':\r\n          return await res.json();\r\n        case 'text':\r\n          return await res.text();\r\n        case 'boolean':\r\n          return true;\r\n        default:\r\n          return true;\r\n      }\r\n    }\r\n\r\n    await this.handleError(res);\r\n  }\r\n\r\n  public async fetch({ method, origUrl, queryParams, rawData, body, headers, responseType }: IFetchParams) {\r\n    const { url, params } = this.buildRequest({ method, origUrl, queryParams, rawData, body, headers });\r\n    return await this.makeRequest(url, params, responseType);\r\n  }\r\n}\r\n\r\nexport default HttpService;\r\n","import HTTPService from './http.service';\r\nimport { IConfig } from '../common/models/config.model';\r\nimport Ajv from 'ajv';\r\n\r\nconst httpService: HTTPService = new HTTPService();\r\n\r\nclass ConfigService extends HTTPService {\r\n\r\n  public async getRemoteConfig(url: string) {\r\n    if (url.endsWith('.js')) {\r\n      return (await import(/* webpackIgnore: true */url)).default;\r\n    }\r\n    return await httpService.fetch({\r\n      origUrl: url,\r\n    });\r\n  }\r\n\r\n  public async loadDefaultConfig() { return (await this.getRemoteConfig('../../config.js')); }\r\n\r\n  public validateConfig(config: IConfig | null): { isValid: boolean, errorMessage: string | null } {\r\n    if (config === null) {\r\n      return {\r\n        isValid: true,\r\n        errorMessage: null,\r\n      }\r\n    }\r\n    const configSchema = require('../assets/schemas/config.schema.json');\r\n    const ajv = new Ajv({\r\n      allErrors: true,\r\n      verbose: true,\r\n    });\r\n    const validate = ajv.compile(configSchema);\r\n    const isValid = validate(config);\r\n    if (typeof isValid !== 'boolean') {\r\n      throw new Error('Unexpected asynchronous JSON validation');\r\n    }\r\n    if (isValid) {\r\n      return {\r\n        isValid,\r\n        errorMessage: null,\r\n      }\r\n    }\r\n    const firstError = validate.errors ? validate.errors[0] : undefined;\r\n    let errorMessage: string | null = null;\r\n    if (firstError?.message && firstError?.dataPath) {\r\n      errorMessage = `Error parsing configuration at \"${firstError.dataPath}\": ${firstError.message}`\r\n    } else if (firstError?.message) {\r\n      errorMessage = `Error parsing configuration: ${firstError.message}`\r\n    } else if (firstError?.dataPath) {\r\n      errorMessage = `Error parsing configuration at \"${firstError.dataPath}\"`\r\n    } else {\r\n      errorMessage = `Error parsing configuration`;\r\n    }\r\n    console.error(errorMessage);\r\n    console.error('All configuration errors: ', validate.errors);\r\n    return {\r\n      isValid,\r\n      errorMessage,\r\n    };\r\n  }\r\n\r\n}\r\n\r\nexport default new ConfigService();\r\n","import React from 'react';\r\nimport { IConfig, IConfigPage } from '../common/models/config.model';\r\nimport HttpService from '../services/http.service';\r\n\r\nexport interface IAppContext {\r\n  config: IConfig | null\r\n  activePage: IConfigPage | null\r\n  error: string | null\r\n  setError: (error: string | null) => void\r\n  setActivePage: (activePage: IConfigPage | null) => void\r\n  httpService: HttpService\r\n}\r\n\r\nexport const AppContext = React.createContext<IAppContext>({\r\n  config: null,\r\n  activePage: null,\r\n  error: null,\r\n  setError: () => {},\r\n  setActivePage: () => {},\r\n  httpService: new HttpService()\r\n});","import React from 'react';\r\nimport { AppContext } from '../app.context';\r\n\r\nexport const withAppContext = (Component: any) => {\r\n  return (props: any) => (\r\n    <AppContext.Consumer>    \r\n      {(context) => {\r\n        return <Component {...props} context={context} />\r\n      }}\r\n    </AppContext.Consumer>\r\n  );\r\n};","import React from 'react';\r\n\r\nimport './loader.scss';\r\n\r\nexport const Loader = () => {\r\n  return (\r\n    <div className=\"app-loader cp-spinner cp-balls small\"></div>\r\n  );\r\n};","class PaginationHelpers {\r\n  public hasPreviousPage(page: string | number | undefined): boolean {\r\n    if (page === undefined) {\r\n      return false;\r\n    }\r\n\r\n    if (typeof page === 'string') {\r\n      return parseInt(page) > 1;\r\n    }\r\n\r\n    return page > 1;\r\n  }\r\n\r\n  public hasNextPage(_page: string | number, _itemsPerPage: string | number, _total: string | number | undefined): boolean {\r\n    if (_total === undefined) {\r\n      return true;\r\n    }\r\n    const page = typeof _page === 'string' ? parseInt(_page) : _page;\r\n    const itemsPerPage = typeof _itemsPerPage === 'string' ? parseInt(_itemsPerPage) : _itemsPerPage;\r\n    const total = typeof _total === 'string' ? parseInt(_total) : _total;\r\n\r\n    return page * itemsPerPage < total;\r\n  }\r\n}\r\n\r\nexport const paginationHelpers = new PaginationHelpers();","import React from 'react';\r\n\r\nimport './button.scss';\r\n\r\ninterface IProps {\r\n  children: any\r\n  type?: 'submit' | 'button' | 'reset'\r\n  title?: string\r\n  className?: string\r\n  onClick?: (e: any) => void\r\n  color?: 'gray' | 'blue' | 'green' | 'red'\r\n  disabled?: boolean\r\n}\r\n\r\nexport const Button = (props: IProps) => {\r\n  return (\r\n    <button {...props} className={`button ${props.className || ''} ${props.color || ''}`}>{props.children}</button>\r\n  );\r\n};","import React from 'react';\r\n\r\nimport './infiniteLoader.scss';\r\n\r\nexport const InfiniteLoader = () => {\r\n  return (\r\n    <div className=\"app-infinite-loader cp-spinner cp-balls small\"></div>\r\n  );\r\n};","import React from 'react';\r\nimport { ICustomLabels } from '../../common/models/config.model';\r\nimport { IPaginationState } from '../../common/models/states.model';\r\nimport { Button } from '../button/button.comp';\r\nimport locale from '../../common/locale.js';\r\n\r\nimport './pagination.scss';\r\n\r\ninterface IProps {\r\n  pagination: IPaginationState\r\n  callbacks: {\r\n    previousPage: () => void,\r\n    nextPage: () => void,\r\n  }\r\n  customLabels?: ICustomLabels\r\n}\r\n\r\nexport const Pagination = ({ callbacks, pagination, customLabels }: IProps) => {\r\n  const previousTitle = locale.previous_page;\r\n  const nextTitle = locale.next_page;\r\n  return (\r\n    <div className=\"pagination-wrapper\">\r\n      <Button disabled={!pagination.hasPreviousPage} onClick={() => callbacks.previousPage()} title={previousTitle}>\r\n        <i className=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n      </Button>\r\n      <Button disabled={!pagination.hasNextPage} onClick={() => callbacks.nextPage()} title={nextTitle}>\r\n        <i className=\"fa fa-arrow-right\" aria-hidden=\"true\" ></i>\r\n      </Button>\r\n    </div>\r\n  );\r\n};","import React, { useEffect } from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\n\r\nimport { IConfigDisplayField, IConfigCustomAction, ICustomLabels } from '../../common/models/config.model';\r\nimport { dataHelpers } from '../../helpers/data.helpers';\r\nimport { Button } from '../button/button.comp';\r\nimport { InfiniteLoader } from '../infiniteLoader/infiniteLoader.comp';\r\nimport { IPaginationState } from '../../common/models/states.model';\r\nimport { Pagination } from '../pagination/pagination.comp';\r\n\r\nimport './table.scss';\r\n\r\ninterface IProps {\r\n  items: any[]\r\n  pagination?: IPaginationState\r\n  callbacks: {\r\n    delete: ((item: any) => void) | null\r\n    put: ((item: any) => void) | null\r\n    action: (item: any, action: IConfigCustomAction) => void\r\n    getPreviousPage: (() => void) | null\r\n    getNextPage: (() => void) | null\r\n  }\r\n  fields: IConfigDisplayField[]\r\n  customActions?: IConfigCustomAction[]\r\n  customLabels?: ICustomLabels\r\n}\r\n\r\nexport const Table = ({ items, fields, pagination, callbacks, customActions, customLabels }: IProps) => {\r\n  const editLabel = customLabels?.buttons?.editItem || 'Edit';\r\n  const deleteLabel = customLabels?.buttons?.deleteItem || 'Delete';\r\n  const actionColumnHeader = customLabels?.tableColumnHeaders?.actions || 'Actions';\r\n  const paginationCallbacks = {\r\n    nextPage: callbacks.getNextPage || (() => { return; }),\r\n    previousPage: callbacks.getPreviousPage || (() => { return; }),\r\n  };\r\n\r\n  function renderTableCell(origField: IConfigDisplayField, origItem: any, value: any) {\r\n    if (origField.type === 'boolean') {\r\n      value = value ? true : false;\r\n    }\r\n\r\n    if (value && typeof value === 'object') {\r\n      return 'object';\r\n    }\r\n\r\n    switch (origField.type) {\r\n      case 'text':\r\n        return <span>{value}</span>;\r\n      case 'boolean':\r\n        return <div className={`bool ${value ? 'true' : 'false'}`}></div>;\r\n      case 'image':\r\n        return <img src={value || ''} alt={value || origField.label || origField.name} />;\r\n      case 'url':\r\n        let url: string = origField.url || value || '';\r\n\r\n        // Replace all url vars\r\n        fields.forEach((field) => {\r\n          const fieldValue = dataHelpers.extractDataByDataPath(origItem, field.dataPath, field.name);\r\n          url = url.replace(`:${field.name}`, fieldValue);\r\n        });\r\n\r\n        return <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{origField.urlLabel || value}</a>;\r\n      case 'colorbox':\r\n        return <div className=\"colorbox\" style={{ backgroundColor: value }}></div>;\r\n      case 'html':\r\n        const htmlCode = origField.htmlCode || '<span>{value}</span>';\r\n        const html =  htmlCode.replace('{value}', value);\r\n        return <div dangerouslySetInnerHTML={{__html: html}}></div>\r\n      default:\r\n        return value;\r\n    }\r\n  }\r\n\r\n  function renderTableRow(item: any, rowIdx: number) {\r\n    return (\r\n      <tr key={`tr_${rowIdx}`}>\r\n        {\r\n          fields.map((field, fieldIdx) => {\r\n            const value = dataHelpers.extractDataByDataPath(item, field.dataPath, field.name);\r\n            return (\r\n              <td className={field.truncate ? 'truncate' : ''} key={`td_${rowIdx}_${fieldIdx}`}>\r\n                {renderTableCell(field, item, value)}\r\n              </td>\r\n            );\r\n          })\r\n        }\r\n        <td>\r\n          <div className=\"actions-wrapper\">\r\n            {\r\n              callbacks.put &&\r\n              <Button onClick={() => callbacks.put?.(item)} title={editLabel}>\r\n                <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i>\r\n              </Button>\r\n            }\r\n            {\r\n              (customActions && customActions.length > 0) &&\r\n              customActions.map((action, idx) => (\r\n                <Button key={`action_${rowIdx}_${idx}`} onClick={() => callbacks.action(item, action)} title={action.name}>\r\n                  <i className={`fa fa-${action.icon || 'cogs'}`} aria-hidden=\"true\"></i>\r\n                </Button>\r\n              ))\r\n            }\r\n            {\r\n              callbacks.delete &&\r\n              <Button onClick={() => callbacks.delete?.(item)} title={deleteLabel}>\r\n                <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n              </Button>\r\n            }\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n\r\n  function renderTableContent() {\r\n    return (\r\n      <table className=\"pure-table\">\r\n        <thead>\r\n          <tr>\r\n            {\r\n              fields.map((field) => {\r\n                return <th key={`th_${field.name}`}>{field.label || field.name}</th>;\r\n              })\r\n            }\r\n            <th>{actionColumnHeader}</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n            items.map(renderTableRow)\r\n          }\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (\r\n      pagination?.type === 'infinite-scroll'\r\n      && document.body.clientHeight <= window.innerHeight\r\n      && pagination?.hasNextPage\r\n    ) {\r\n      paginationCallbacks.nextPage();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  if (pagination?.type === 'infinite-scroll') {\r\n    return (\r\n      <InfiniteScroll\r\n        dataLength={items.length}\r\n        next={callbacks.getNextPage || (() => null)}\r\n        hasMore={pagination?.hasNextPage || false}\r\n        loader={<InfiniteLoader />}\r\n      >\r\n        {renderTableContent()}\r\n      </InfiniteScroll>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"table-wrapper\">\r\n      {renderTableContent()}\r\n      {\r\n        pagination &&\r\n        pagination.type === 'buttons' &&\r\n        <Pagination\r\n          callbacks={paginationCallbacks}\r\n          pagination={pagination}\r\n          customLabels={customLabels}\r\n        ></Pagination>\r\n      }\r\n    </div >\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport Skeleton from 'react-loading-skeleton';\r\n\r\nimport { IConfigDisplayField, IConfigCustomAction, ICustomLabels } from '../../common/models/config.model';\r\nimport { IPaginationState } from '../../common/models/states.model';\r\nimport { dataHelpers } from '../../helpers/data.helpers';\r\nimport { Button } from '../button/button.comp';\r\nimport { Pagination } from '../pagination/pagination.comp';\r\n\r\nimport './cards.scss';\r\n\r\ninterface IProps {\r\n  items: any[]\r\n  pagination?: IPaginationState\r\n  callbacks: {\r\n    delete: ((item: any) => void) | null\r\n    put: ((item: any) => void) | null\r\n    action: (item: any, action: IConfigCustomAction) => void\r\n    getNextPage: (() => void) | null\r\n    getPreviousPage: (() => void) | null\r\n  }\r\n  fields: IConfigDisplayField[]\r\n  customActions?: IConfigCustomAction[]\r\n  customLabels?: ICustomLabels\r\n}\r\n\r\nexport const Cards = ({ items, fields, callbacks, customActions, customLabels, pagination }: IProps) => {\r\n  const editLabel: string = customLabels?.buttons?.editItem || 'Edit';\r\n  const deleteLabel: string = customLabels?.buttons?.deleteItem || 'Delete';\r\n  const paginationCallbacks = {\r\n    nextPage: callbacks.getNextPage || (() => { return; }),\r\n    previousPage: callbacks.getPreviousPage || (() => { return; }),\r\n  };\r\n\r\n  function renderRow(origField: IConfigDisplayField, origItem: any, value: any) {\r\n    if (origField.type === 'boolean') {\r\n      value = value ? true : false;\r\n    }\r\n\r\n    if (value && typeof value === 'object') {\r\n      return 'object';\r\n    }\r\n\r\n    switch (origField.type) {\r\n      case 'text':\r\n        return <span>{value}</span>;\r\n      case 'boolean':\r\n        return <div className={`bool ${value ? 'true' : 'false'}`}></div>;\r\n      case 'image':\r\n        if (!value) {\r\n          return <React.Fragment></React.Fragment>;\r\n        }\r\n        return <img src={value || ''} alt={value || origField.label || origField.name} onError={(e) => e.currentTarget.src = '/avatar.png' }/>;\r\n      case 'url':\r\n        let url: string = origField.url || value || '';\r\n\r\n        // Replace all url vars\r\n        fields.forEach((field) => {\r\n          const fieldValue = dataHelpers.extractDataByDataPath(origItem, field.dataPath, field.name);\r\n          url = url.replace(`:${field.name}`, fieldValue);\r\n        });\r\n\r\n        return <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{origField.urlLabel || value}</a>;\r\n      case 'colorbox':\r\n        return <div className=\"colorbox\" style={{ backgroundColor: value }}></div>;\r\n      case 'html':\r\n        const htmlCode = origField.htmlCode || '<span>{value}</span>';\r\n        const html =  htmlCode.replace('{value}', value);\r\n        return <div dangerouslySetInnerHTML={{__html: html}}></div>\r\n      default:\r\n        return value;\r\n    }\r\n  }\r\n\r\n  function renderActions(item: any, cardIdx: number) {\r\n    return (\r\n      <div className=\"actions-wrapper\">\r\n        {\r\n          callbacks.put &&\r\n          <Button onClick={() => callbacks.put?.(item)} title={editLabel}>\r\n            <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i>\r\n          </Button>\r\n        }\r\n        {\r\n          (customActions && customActions.length > 0) &&\r\n          customActions.map((action, idx) => (\r\n            <Button key={`action_${cardIdx}_${idx}`} onClick={() => callbacks.action(item, action)} title={action.name}>\r\n              <i className={`fa fa-${action.icon || 'cogs'}`} aria-hidden=\"true\"></i>\r\n            </Button>\r\n          ))\r\n        }\r\n        {\r\n          callbacks.delete &&\r\n          <Button onClick={() => callbacks.delete?.(item)} title={deleteLabel}>\r\n            <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n          </Button>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function renderCard(item: any, cardIdx: number) {\r\n    return (\r\n      <div className=\"card\" key={`card_${cardIdx}`}>\r\n        {\r\n          fields.map((field, fieldIdx) => {\r\n            const value = dataHelpers.extractDataByDataPath(item, field.dataPath, field.name);\r\n            return (\r\n              <div className={`card-row ${field.type}`} key={`card_${cardIdx}_${fieldIdx}`}>\r\n                {\r\n                  field.type !== 'image' &&\r\n                  <label>{field.label || field.name}: </label>\r\n                }\r\n                {renderRow(field, item, value)}\r\n              </div>\r\n            );\r\n          })\r\n        }\r\n        {renderActions(item, cardIdx)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function renderCardSkeleton(cardIdx: number) {\r\n    return (\r\n      <div className=\"card\" key={`card_${cardIdx}`}>\r\n        {\r\n          fields.map((field, fieldIdx) => {\r\n            return (\r\n              <div className={`card-row ${field.type}`} key={`card_${cardIdx}_${fieldIdx}`}>\r\n                {\r\n                  field.type !== 'image' &&\r\n                  <label>{field.label || field.name}: </label>\r\n                }\r\n                <Skeleton duration={0.6} />\r\n              </div>\r\n            );\r\n          })\r\n        }\r\n        {renderActions({}, cardIdx)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function renderSkeletons() {\r\n    const startingIndex = items.length;\r\n    const skeletonsIndexes = Array.from(Array(pagination?.limit).keys()).map(value => value + startingIndex);\r\n    return skeletonsIndexes.map(renderCardSkeleton);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (\r\n      pagination?.type === 'infinite-scroll'\r\n      && document.body.clientHeight <= window.innerHeight\r\n      && callbacks.getNextPage\r\n      && pagination?.hasNextPage\r\n    ) {\r\n      callbacks.getNextPage();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  if (pagination?.type === 'infinite-scroll') {\r\n    return (\r\n      <InfiniteScroll className=\"cards-wrapper\"\r\n        dataLength={items.length}\r\n        next={callbacks.getNextPage || (() => null)}\r\n        hasMore={pagination?.hasNextPage || false}\r\n        loader={renderSkeletons()}\r\n      >\r\n        {items.map(renderCard)}\r\n      </InfiniteScroll>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"cards-wrapper\">\r\n        {items.map(renderCard)}\r\n      </div>\r\n      {\r\n        pagination &&\r\n        pagination.type === 'buttons' &&\r\n        <Pagination\r\n          callbacks={paginationCallbacks}\r\n          pagination={pagination}\r\n        ></Pagination>\r\n      }\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { orderBy } from 'natural-orderby';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { IConfigInputField, IConfigOptionSource, ICustomLabels } from '../../common/models/config.model';\r\nimport { Button } from '../button/button.comp';\r\nimport { withAppContext } from '../withContext/withContext.comp';\r\nimport { IAppContext } from '../app.context';\r\nimport { dataHelpers } from '../../helpers/data.helpers';\r\nimport locale from '../../common/locale.js';\r\n\r\nimport './formRow.scss';\r\n\r\ninterface IProps {\r\n  context: IAppContext\r\n  field: IConfigInputField\r\n  onChange: (fieldName: string, value: any, submitAfterChange?: boolean) => void\r\n  showReset?: boolean\r\n  direction?: 'row' | 'column'\r\n}\r\n\r\nexport const FormRow = withAppContext(({ context, field, direction, showReset, onChange }: IProps) => {\r\n  const [optionSources, setOptionSources] = useState<any>({});\r\n  const { httpService, activePage, config } = context;\r\n  const pageHeaders: any = activePage?.requestHeaders || {};\r\n  const customLabels: ICustomLabels | undefined = { ...config?.customLabels, ...activePage?.customLabels };\r\n  const addArrayItemLabel = customLabels?.buttons?.addArrayItem || 'Add Item';\r\n  const clearLabel = customLabels?.buttons?.clearInput || 'Clear';\r\n\r\n  async function loadOptionSourceFromRemote(fieldName: string, optionSource: IConfigOptionSource) {\r\n    try {\r\n      const { url, dataPath, actualMethod, requestHeaders } = optionSource;\r\n\r\n      if (!url) {\r\n        throw new Error(`URL option source (for field \"${fieldName}\") is empty.`);\r\n      }\r\n\r\n      const result = await httpService.fetch({\r\n        method: actualMethod || 'get',\r\n        origUrl: url,\r\n        queryParams: [],\r\n        headers: Object.assign({}, pageHeaders, requestHeaders || {}),\r\n      });\r\n\r\n      const extractedData = dataHelpers.extractDataByDataPath(result, dataPath);\r\n\r\n      if (!extractedData || !extractedData.length) {\r\n        throw new Error(`Option source data is empty (for field \"${fieldName}\")`);\r\n      }\r\n\r\n      // Map option source to fields\r\n      const optionSourceData = extractedData.map((option: any, idx: number) => {\r\n        const { valuePath, displayPath } = optionSource;\r\n\r\n        if (typeof option === 'string') {\r\n          return option;\r\n        }\r\n\r\n        return {\r\n          display: displayPath && option[displayPath] ? option[displayPath] : `Option ${idx + 1}`,\r\n          value: valuePath && option[valuePath] ? option[valuePath] : `${idx}`,\r\n        };\r\n      });\r\n\r\n      setOptionSources({\r\n        ...optionSources,\r\n        [fieldName]: optionSourceData\r\n      });\r\n    } catch (e) {\r\n      toast.error(e.message);\r\n    }\r\n  }\r\n\r\n  function addItemToFieldArray(e: any, originalField: IConfigInputField) {\r\n    e.preventDefault();\r\n\r\n    onChange(field.name, [\r\n      ...(originalField.value || []),\r\n      ''\r\n    ]);\r\n  }\r\n\r\n  function removeItemToFieldArray(originalField: IConfigInputField, idx: number) {\r\n    const updatedArray = [\r\n      ...(originalField.value || [])\r\n    ];\r\n\r\n    updatedArray.splice(idx, 1);\r\n\r\n    onChange(field.name, updatedArray);\r\n  }\r\n\r\n  function renderArrayItems(originalField: IConfigInputField) {\r\n    const array: any[] = originalField.value || [];\r\n\r\n    return (\r\n      <div className=\"array-form\">\r\n        {\r\n          array.map((item, itemIdx) => {\r\n            const inputField = renderFieldInput({\r\n              value: item,\r\n              name: `${originalField.name}.${itemIdx}`,\r\n            } as IConfigInputField, (fieldName, value) => {\r\n              const updatedArray = (originalField.value || []).map((localValue: any, idx: number) => {\r\n                if (idx === itemIdx) {\r\n                  return value;\r\n                }\r\n                return localValue;\r\n              });\r\n\r\n              onChange(originalField.name, updatedArray);\r\n            });\r\n\r\n            return (\r\n              <div className=\"array-form-item\" key={`array_form_${itemIdx}`}>\r\n                {inputField}\r\n                <i title={clearLabel} onClick={() => removeItemToFieldArray(originalField, itemIdx)} aria-label=\"Remove\" className=\"clear-input fa fa-times\"></i>\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n        <Button className=\"add-array-item\" onClick={(e) => addItemToFieldArray(e, originalField)} title={addArrayItemLabel}>\r\n          <i className=\"fa fa-plus\" aria-hidden=\"true\"></i>\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function renderFieldInput(field: IConfigInputField, changeCallback: (fieldName: string, value: any, submitAfterChange?: boolean) => void) {\r\n    const inputProps = (defaultPlaceholder: string = '') => {\r\n      return {\r\n        value: field.value,\r\n        placeholder: field.placeholder || defaultPlaceholder,\r\n        disabled: field.readonly,\r\n        required: field.required,\r\n        onChange: (e: any) => changeCallback(field.name, e.target.value),\r\n      };\r\n    };\r\n\r\n    switch (field.type) {\r\n      case 'boolean':\r\n        return <input type=\"checkbox\" {...inputProps()} checked={field.value} onChange={(e) => changeCallback(field.name, e.target.checked, true)} />;\r\n      case 'select':\r\n        {\r\n          const { optionSource } = field;\r\n\r\n          if (optionSource && !optionSources[field.name]) {\r\n            loadOptionSourceFromRemote(field.name, optionSource);\r\n            return <select {...inputProps()}><option>-- Loading Options... --</option></select>\r\n          }\r\n\r\n          const sortBy = field.optionSource?.sortBy;\r\n          const finalOptions: { value: string, display: string }[] = optionSources[field.name] || field.options || [];\r\n          const sortedOptions = orderBy(finalOptions, typeof sortBy === 'string' ? [sortBy] : (sortBy || []));\r\n\r\n          return (\r\n            <select {...inputProps()}>\r\n              <option>-- Select --</option>\r\n              {\r\n                sortedOptions.map((option, idx) => {\r\n                  const key = `option_${idx}_`;\r\n                  if (typeof option !== 'object') {\r\n                    return <option key={`${key}_${option}`} value={option}>{option}</option>\r\n                  }\r\n                  return <option key={`${key}_${option.value}`} value={option.value}>{option.display || option.value}</option>\r\n                })\r\n              }\r\n            </select>\r\n          );\r\n        };\r\n      case 'object':\r\n        return <textarea {...inputProps(customLabels?.placeholders?.object || 'Enter JSON...')}></textarea>;\r\n      case 'array': {\r\n        const { arrayType, value } = field;\r\n        if (!value || !arrayType || arrayType === 'object') {\r\n          return <textarea {...inputProps(customLabels?.placeholders?.array || 'Enter JSON array...')}></textarea>;\r\n        }\r\n        return renderArrayItems(field);\r\n      }\r\n      case 'long-text':\r\n        return <textarea {...inputProps(customLabels?.placeholders?.text || locale.enter_text)}></textarea>;\r\n      case 'number':\r\n      case 'integer':\r\n        return <input type=\"number\" {...inputProps(customLabels?.placeholders?.number || '0')} onChange={(e) => changeCallback(field.name, e.target.valueAsNumber)} />;\r\n      case 'color':\r\n        return <input type=\"color\" {...inputProps(customLabels?.placeholders?.color || 'Enter color...')} />;\r\n      case 'email':\r\n        return <input type=\"email\" {...inputProps(customLabels?.placeholders?.email || 'Enter email...')} />;\r\n      case 'password':\r\n        return <input type=\"password\" {...inputProps(customLabels?.placeholders?.password || 'Enter password...')} />;\r\n      case 'hidden':\r\n        return <input type=\"hidden\" value={field.value} />;\r\n      case 'file':\r\n        return <input type=\"file\" accept={field.accept || '*'} placeholder={field.placeholder || customLabels?.placeholders?.file || 'Select file...'} name={field.name || 'file'} disabled={field.readonly} required={field.required} />;\r\n      case 'note':\r\n        return <p className=\"note\">{field.value}</p>;\r\n      case 'date':\r\n        return <input type=\"date\" {...inputProps(customLabels?.placeholders?.date || 'Enter date...')} />;\r\n      case 'text':\r\n      default:\r\n        return <input type=\"text\" {...inputProps(customLabels?.placeholders?.text || locale.enter_text)} />;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={`form-row ${direction || 'row'}`}>\r\n      {\r\n        field.type !== 'hidden'\r\n      }\r\n      {renderFieldInput(field, onChange)}\r\n      {\r\n        (showReset && !field.readonly && field.value && field.value.length > 0) &&\r\n        <i title={clearLabel} onClick={() => onChange(field.name, '', true)} aria-label=\"Clear\" className=\"clear-input fa fa-times\"></i>\r\n      }\r\n    </div>\r\n  );\r\n});\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { IConfigInputField, IConfigPagination } from '../../common/models/config.model';\r\nimport { FormRow } from '../formRow/formRow.comp';\r\nimport { Button } from '../button/button.comp';\r\nimport locale from '../../common/locale.js';\r\n\r\nimport './queryParams.scss';\r\n\r\ninterface IProps {\r\n  initialParams: IConfigInputField[]\r\n  paginationConfig?: IConfigPagination\r\n  submitCallback: (queryParams: IConfigInputField[], reset?: boolean) => void\r\n}\r\n\r\nexport const QueryParams = ({ initialParams, paginationConfig, submitCallback }: IProps) => {\r\n  const [queryParams, setQueryParams] = useState<IConfigInputField[]>(initialParams);\r\n\r\n  function submit(e?: any) {\r\n    if (e) { e.preventDefault(); }\r\n    if (paginationConfig && paginationConfig.type === 'infinite-scroll') { submitCallback(queryParams, true); } \r\n    else { submitCallback(queryParams); }\r\n  }\r\n\r\n  function formChanged(fieldName: string, value: any, submitAfterChange?: boolean) {\r\n    const updatedQueryParams: IConfigInputField[] = [...queryParams].map((field) => {\r\n      if (field.name === fieldName) { field.value = value; }\r\n      return field;\r\n    });\r\n    setQueryParams(updatedQueryParams);\r\n    if (submitAfterChange) { submit(); }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (paginationConfig && paginationConfig.type === 'infinite-scroll') {\r\n      const filteredParams = initialParams.filter(param => !['page', 'limit'].includes(param.name));\r\n      setQueryParams(filteredParams);\r\n    } else { setQueryParams(initialParams); }\r\n  }, [paginationConfig, initialParams]);\r\n  if (!queryParams.length) { return <React.Fragment></React.Fragment>; }\r\n\r\n  return (\r\n    <section className=\"query-params-form\">\r\n      <h5>{locale.search}</h5>\r\n      <form onSubmit={submit}>\r\n        {\r\n          queryParams.map((queryParam, idx) => {\r\n            if(queryParam.name == 'page') return \"\";\r\n            if(queryParam.hidden) return \"\";\r\n            return (\r\n              <FormRow\r\n                key={`query_param_${idx}`}\r\n                field={queryParam}\r\n                onChange={formChanged}\r\n                showReset={!queryParam.type || queryParam.type === 'text'}\r\n              />\r\n            );\r\n          })\r\n        }\r\n        <Button type=\"submit\" onClick={submit}>{locale.submit}</Button>\r\n      </form>\r\n    </section>\r\n  );\r\n};","import React, { Component, RefObject, ReactChild } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './popup.scss';\r\nimport { ICustomLabels } from '../../common/models/config.model';\r\n\r\ninterface IPopupProps {\r\n  className?: string\r\n  style?: any\r\n  show: boolean\r\n  closeCallback: any\r\n  children: ReactChild\r\n  refCallback?: string | ((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null | undefined\r\n  customLabels?: ICustomLabels\r\n}\r\n\r\nlet portalRoot: HTMLDivElement = document.getElementById('popup-portal') as HTMLDivElement;\r\nif (!portalRoot) {\r\n  portalRoot = document.createElement('div');\r\n  portalRoot.setAttribute('id', 'popup-portal');\r\n  document.body.append(portalRoot);\r\n}\r\n\r\nclass PortalPopup extends Component {\r\n  private el: HTMLElement;\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.el = document.createElement('div');\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    portalRoot.appendChild(this.el);\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    portalRoot.removeChild(this.el);\r\n  }\r\n\r\n  render() {\r\n    return ReactDOM.createPortal(this.props.children, this.el);\r\n  }\r\n}\r\n\r\nexport class Popup extends Component<IPopupProps> {\r\n  render() {\r\n    const style: any = Object.assign({}, { display: this.props.show ? 'block' : 'none' }, this.props.style || {});\r\n    const closeLabel = this.props.customLabels?.buttons?.closeForm || 'Close';\r\n\r\n    return (\r\n      <PortalPopup>\r\n        {\r\n          this.props.show ?\r\n            <div className={`popup ${this.props.className || ''}`} style={style}>\r\n              <div className=\"overlay\" onClick={(e: any) => this.props.closeCallback(e)}></div>\r\n              <div className=\"popup-content\" ref={this.props.refCallback}>\r\n                {this.props.children}\r\n                <button title={closeLabel} className=\"close-popup\" onClick={(e: any) => this.props.closeCallback(e)}>\r\n                  <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n                </button>\r\n              </div>\r\n            </div> :\r\n            null\r\n        }\r\n      </PortalPopup>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('keydown', this._handleKeyDown.bind(this));\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('keydown', this._handleKeyDown.bind(this));\r\n  }\r\n\r\n  _handleKeyDown = (e: KeyboardEvent) => {\r\n    const { show, closeCallback } = this.props;\r\n\r\n    if (show && e.keyCode === 27) {\r\n      closeCallback(e);\r\n    }\r\n  }\r\n};","import { IConfigInputField } from '../common/models/config.model';\r\n\r\nclass FileHelpers {\r\n\r\n  public isMultipartForm(fields: IConfigInputField[]): boolean {\r\n    for (const fieldIndex in fields) {\r\n      let field = fields[fieldIndex];\r\n\r\n      if (field.type === 'file') {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  \r\n}\r\n\r\nexport const fileHelpers = new FileHelpers();","import React, { useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { Popup } from '../popup/popup.comp';\r\nimport {\r\n  IConfigInputField,\r\n  IConfigGetSingleMethod,\r\n  IConfigPostMethod,\r\n  IConfigPutMethod,\r\n  ICustomLabels,\r\n  IQueryParam\r\n} from '../../common/models/config.model';\r\nimport { FormRow } from '../formRow/formRow.comp';\r\nimport { Button } from '../button/button.comp';\r\nimport { Loader } from '../loader/loader.comp';\r\nimport { dataHelpers } from '../../helpers/data.helpers';\r\nimport { fileHelpers } from '../../helpers/file.helpers';\r\nimport { IAppContext } from '../app.context';\r\nimport { withAppContext } from '../withContext/withContext.comp';\r\n\r\nimport './formPopup.scss';\r\n\r\nconst unflatten = require('flat').unflatten;\r\n\r\ninterface IProps {\r\n  context: IAppContext\r\n  title: string\r\n  fields: IConfigInputField[]\r\n  rawData?: any\r\n  getSingleConfig?: IConfigGetSingleMethod\r\n  methodConfig: IConfigPostMethod | IConfigPutMethod\r\n  closeCallback: (reloadData: boolean) => void\r\n  submitCallback: (body: any, containFiles: boolean, queryParams: IQueryParam[]) => void\r\n}\r\n\r\nexport const FormPopup = withAppContext(({ context, title, fields, rawData, getSingleConfig, methodConfig, submitCallback, closeCallback }: IProps) => {\r\n  const fieldsCopy: IConfigInputField[] = JSON.parse(JSON.stringify(fields));\r\n  const { httpService, activePage, config } = context;\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [formFields, setFormFields] = useState<IConfigInputField[]>([]);\r\n  const [finalRawData, setFinalRawData] = useState<any>(null);\r\n  const pageHeaders: any = activePage?.requestHeaders || {};\r\n  const customLabels: ICustomLabels | undefined = { ...config?.customLabels, ...activePage?.customLabels };\r\n\r\n  async function initFormFields() {\r\n    let finalRawData: any = rawData || {};\r\n\r\n    if (getSingleConfig && getSingleConfig.url) {\r\n      try {\r\n        const { url, requestHeaders, actualMethod, dataPath, queryParams, responseType } = getSingleConfig;\r\n        const result = await httpService.fetch({\r\n          method: actualMethod || 'get',\r\n          origUrl: url,\r\n          queryParams,\r\n          headers: Object.assign({}, pageHeaders,  requestHeaders || {}),\r\n          rawData,\r\n          responseType\r\n        });\r\n\r\n        const extractedData = dataHelpers.extractDataByDataPath(result, dataPath);\r\n\r\n        if (extractedData && (typeof extractedData === 'object' || typeof extractedData === 'string')) {\r\n          finalRawData = extractedData;\r\n        }\r\n      } catch (e) {\r\n        console.error('Could not load single item\\'s data.', e);\r\n        toast.error('Could not load single item\\'s data.');\r\n      }\r\n    }\r\n\r\n    setFinalRawData(finalRawData); // Store the raw data for later.\r\n\r\n    setFormFields(fieldsCopy.map((field) => {\r\n      let key = field.name;\r\n\r\n      field.originalName = field.name;\r\n\r\n      let dataPathSplit: string[] = [];\r\n\r\n      if (field.dataPath) {\r\n        dataPathSplit = field.dataPath.split('.');\r\n        key = `${field.dataPath}.${field.name}`;\r\n      }\r\n\r\n      const lookup = () => {\r\n        let objToLookIn = finalRawData;\r\n        for(const pathElem of dataPathSplit) {\r\n          if(objToLookIn[pathElem] !== undefined && objToLookIn[pathElem] !== null) {\r\n            objToLookIn = objToLookIn[pathElem];\r\n          } else {\r\n            return undefined;\r\n          }\r\n        }\r\n        return objToLookIn[field.name];\r\n      }\r\n\r\n      const lookupValue = lookup();\r\n\r\n      // Changing field name to include datapath\r\n      // This will use us later for unflatten the final object\r\n      field.name = key;\r\n\r\n      if (dataHelpers.checkIfFieldIsObject(field)) {\r\n        if (lookupValue || field.value) {\r\n          field.value = JSON.stringify(lookupValue || field.value, null, '  ') || '';\r\n        }\r\n        return field;\r\n      }\r\n\r\n      if (field.type === 'array') {\r\n        field.value = lookupValue || field.value || [];\r\n        return field;\r\n      }\r\n\r\n      if (typeof lookupValue !== 'undefined') {\r\n        field.value = lookupValue;\r\n      } else {\r\n        // important in order to prevent controlled / uncontrolled components error\r\n        field.value = typeof field.value === 'undefined' ? '' : field.value;\r\n      }\r\n\r\n      if ((field.type === 'long-text' || field.type === 'text') && typeof finalRawData === 'string') {\r\n        field.value = finalRawData;\r\n      }\r\n\r\n      return field;\r\n    }));\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  async function submitForm(e: any) {\r\n    e.preventDefault();\r\n\r\n    const finalObject: any = (methodConfig as IConfigPutMethod).includeOriginalFields ? Object.assign({}, finalRawData) : {};\r\n    const formData = new FormData();\r\n    const containFiles: boolean = fileHelpers.isMultipartForm(formFields);\r\n    let validationError = null;\r\n\r\n    var queryParams: IQueryParam[] = [];\r\n\r\n    formFields.forEach((field) => {\r\n      if (field.type === 'file') {\r\n        const fileInput: any = document.querySelector(`input[name=\"${field.name || 'file'}\"]`) as HTMLInputElement;\r\n\r\n        if (fileInput.files.length > 0) {\r\n          const firstFile = fileInput.files[0];\r\n          formData.append(field.name || 'file', firstFile, firstFile.name);\r\n        }\r\n        return;\r\n      }\r\n\r\n      finalObject[field.name] = field.value;\r\n\r\n      if (containFiles && !field.useInUrl) {\r\n        formData.append(field.name, field.value);\r\n      }\r\n\r\n      // eslint-disable-next-line eqeqeq\r\n      if (field.required && field.type !== 'boolean' && !field.value && field.value != 0) {\r\n        validationError = 'Please fill up all required fields.';\r\n      }\r\n\r\n      if (dataHelpers.checkIfFieldIsObject(field) && field.value) {\r\n        try {\r\n          finalObject[field.name] = JSON.parse(field.value);\r\n        } catch (e) {\r\n          validationError = `Invalid JSON for field \"${field.name}\".`;\r\n        }\r\n      }\r\n\r\n      if (field.type === 'boolean') {\r\n        finalObject[field.name] = field.value || false;\r\n      }\r\n\r\n      if (field.type === 'encode') {\r\n        finalObject[field.name] = encodeURIComponent(field.value);\r\n      }\r\n\r\n      if (field.useInUrl) {\r\n        queryParams.push({ name: field.name, value: field.value });\r\n      }\r\n\r\n    });\r\n\r\n    if (validationError) {\r\n      toast.error(validationError);\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const body = containFiles ? formData : unflatten(finalObject);\r\n      await submitCallback(body, containFiles, queryParams);\r\n\r\n      toast.success('Great Success!');\r\n\r\n      closeCallback(true);\r\n    } catch (e) {\r\n      toast.error(e.message);\r\n    }\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  function formChanged(fieldName: string, value: any) {\r\n    let updatedFormFields: IConfigInputField[] = JSON.parse(JSON.stringify(formFields));\r\n\r\n    updatedFormFields = updatedFormFields.map((field: IConfigInputField) => {\r\n      if (field.name === fieldName) {\r\n        field.value = value;\r\n      }\r\n\r\n      return field;\r\n    });\r\n\r\n    setFormFields(updatedFormFields);\r\n  }\r\n\r\n  useEffect(() => {\r\n    initFormFields();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <Popup\r\n      show={true}\r\n      className=\"form-popup\"\r\n      closeCallback={() => closeCallback(false)}\r\n      customLabels={customLabels}\r\n    >\r\n      <React.Fragment>\r\n        <h2>{title}</h2>\r\n        <section>\r\n          {\r\n            loading ?\r\n            <Loader /> :\r\n            <form onSubmit={submitForm}>\r\n              {\r\n                formFields.map((field, idx) => {\r\n                  return (\r\n                    <FormRow\r\n                      key={`field_${idx}`}\r\n                      field={field}\r\n                      onChange={formChanged}\r\n                      showReset={!field.type || field.type === 'text'}\r\n                    />\r\n                  );\r\n                })\r\n              }\r\n              <div className=\"buttons-wrapper center\">\r\n                <Button type=\"submit\" onClick={submitForm} color=\"green\">Submit</Button>\r\n              </div>\r\n            </form>\r\n          }\r\n        </section>\r\n      </React.Fragment>\r\n    </Popup>\r\n  );\r\n});","import React from 'react';\r\n\r\nimport './filterField.scss';\r\n\r\ninterface IProps {\r\n  onChange: (filter: string) => void\r\n}\r\n\r\nexport const FilterField = ({ onChange }: IProps) => {\r\n  return (\r\n    <section className=\"filter-wrapper\">\r\n      <h5>Filter:</h5>\r\n      <div className=\"form-row\">\r\n        <input type=\"text\" placeholder=\"Search...\" onChange={(e) => onChange(e.target.value.toLowerCase())} />\r\n      </div>\r\n    </section>\r\n  );\r\n};","import { IPaginationState, IQueryPaginationState, IBodyPaginationState } from \"./states.model\";\r\n\r\nexport const isQueryPaginationState = (obj: IPaginationState): obj is IQueryPaginationState => {\r\n    return obj.source === 'query';\r\n}\r\n\r\nexport const isBodyPaginationState = (obj: IPaginationState): obj is IBodyPaginationState => {\r\n    return obj.source === 'body';\r\n}","import { IConfigPagination, IConfigBodyPagination, IConfigQueryPagination } from \"./config.model\";\r\n\r\nexport const isQueryPagination = (obj: IConfigPagination): obj is IConfigQueryPagination => {\r\n    return obj.source === 'query';\r\n}\r\n\r\nexport const isBodyPagination = (obj: IConfigPagination): obj is IConfigBodyPagination => {\r\n    return obj.source === 'body';\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport * as QueryString from 'query-string';\r\nimport { toast } from 'react-toastify';\r\nimport { orderBy } from 'natural-orderby';\r\nimport { find, remove } from 'lodash';\r\n\r\nimport { IAppContext } from '../app.context';\r\nimport { IConfigPage, IConfigMethods, IConfigGetAllMethod, IConfigPostMethod, IConfigPutMethod, IConfigDeleteMethod, IConfigInputField, IConfigCustomAction, IConfigGetSingleMethod, ICustomLabels, IConfigPagination } from '../../common/models/config.model';\r\nimport { IPaginationState, IQueryPaginationState, IBodyPaginationState } from '../../common/models/states.model';\r\nimport { withAppContext } from '../withContext/withContext.comp';\r\nimport { Loader } from '../loader/loader.comp';\r\nimport { dataHelpers } from '../../helpers/data.helpers';\r\nimport { paginationHelpers } from '../../helpers/pagination.helpers';\r\nimport { Table } from '../table/table.comp';\r\nimport { Cards } from '../cards/cards.comp';\r\nimport { QueryParams } from '../queryParams/queryParams.comp';\r\nimport { Button } from '../button/button.comp';\r\nimport { FormPopup } from '../formPopup/formPopup.comp';\r\nimport { FilterField } from '../filterField/filterField.comp';\r\nimport { isQueryPaginationState, isBodyPaginationState } from '../../common/models/states.types.helper';\r\nimport { isQueryPagination, isBodyPagination } from '../../common/models/config.types.helper';\r\nimport locale from '../../common/locale.js';\r\n\r\nimport './page.scss';\r\n\r\ninterface IProps {\r\n  context: IAppContext\r\n}\r\n\r\ninterface IPopupProps {\r\n  type: 'add' | 'update' | 'action'\r\n  title: string\r\n  config: IConfigPostMethod | IConfigPutMethod\r\n  submitCallback: (body: any, containFiles: boolean) => void\r\n  getSingleConfig?: IConfigGetSingleMethod\r\n  rawData?: {}\r\n}\r\n\r\nconst buildInitQueryParamsAndPaginationState = (\r\n  initQueryParams: IConfigInputField[],\r\n  paginationConfig?: IConfigPagination,\r\n): {\r\n  initQueryParams: IConfigInputField[],\r\n  initialPagination?: IPaginationState,\r\n} => {\r\n    let initialPagination: IPaginationState | undefined = undefined;\r\n\r\n    if (paginationConfig) {\r\n      if(isQueryPagination(paginationConfig)) {\r\n        initialPagination = {\r\n          source: paginationConfig.source,\r\n          type: paginationConfig.type,\r\n          page: parseInt(paginationConfig.params?.page?.value || '1'),\r\n          limit: parseInt(paginationConfig.params?.limit?.value || '10'),\r\n          descending: paginationConfig.params?.descending?.value === 'true' || false,\r\n          hasPreviousPage: false,\r\n          hasNextPage: false,\r\n          sortBy: paginationConfig.params?.sortBy?.value,\r\n        };\r\n\r\n        if (!find(initQueryParams, { name: 'page' })) {\r\n          initQueryParams.push({\r\n            name: paginationConfig?.params?.page?.name,\r\n            label: paginationConfig?.params?.page?.label || 'Page',\r\n            value: initialPagination?.page\r\n          });\r\n        }\r\n\r\n        if (paginationConfig?.params?.limit && !find(initQueryParams, { name: 'limit' })) {\r\n          initQueryParams.push({\r\n            name: paginationConfig.params.limit.name,\r\n            label: paginationConfig.params.limit.label || 'Limit',\r\n            value: initialPagination?.limit\r\n          });\r\n        }\r\n\r\n        if (paginationConfig?.params?.descending && !find(initQueryParams, { name: 'descending' })) {\r\n          initQueryParams.push({\r\n            name: paginationConfig.params.descending.name,\r\n            label: paginationConfig.params.descending.label || 'Descending',\r\n            value: initialPagination?.descending\r\n          });\r\n        }\r\n\r\n        if (paginationConfig?.params?.sortBy && !find(initQueryParams, { name: 'sortBy' })) {\r\n          initQueryParams.push({\r\n            name: paginationConfig.params.sortBy.name,\r\n            label: 'Sort by',\r\n            value: initialPagination?.sortBy\r\n          });\r\n        }\r\n      } else if(isBodyPagination(paginationConfig)) {\r\n        initialPagination = {\r\n          source: 'body',\r\n          type: paginationConfig.type,\r\n          hasNextPage: false,\r\n          hasPreviousPage: false,\r\n          next: null,\r\n          previous: null,\r\n          limit: parseInt(paginationConfig.params?.limit?.value || '10')\r\n        }\r\n\r\n        if (paginationConfig?.params?.limit && !find(initQueryParams, { name: 'limit' })) {\r\n          initQueryParams.push({\r\n            name: paginationConfig.params.limit.name,\r\n            label: paginationConfig.params.limit.label || 'Limit',\r\n            value: initialPagination?.limit\r\n          });\r\n        }\r\n\r\n      } else {\r\n        throw new Error('unrecognized pagination');\r\n      }\r\n    }\r\n\r\n    return {\r\n      initQueryParams,\r\n      initialPagination\r\n    };\r\n};\r\n\r\nconst PageComp = ({ context }: IProps) => {\r\n  const { page } : any = useParams();\r\n  const { push, location } = useHistory();\r\n  const { activePage, error, setError, httpService, config } = context;\r\n  const pageHeaders: any = activePage?.requestHeaders || {};\r\n  const pageMethods: IConfigMethods | undefined = activePage?.methods;\r\n  const customActions: IConfigCustomAction[] = activePage?.customActions || [];\r\n  const getAllConfig: IConfigGetAllMethod | undefined = pageMethods?.getAll;\r\n  const paginationConfig = getAllConfig?.pagination;\r\n  const infiniteScroll = paginationConfig?.type === 'infinite-scroll';\r\n  const getSingleConfig: IConfigGetSingleMethod | undefined = pageMethods?.getSingle;\r\n  const postConfig: IConfigPostMethod | undefined = pageMethods?.post;\r\n  const putConfig: IConfigPutMethod | undefined = pageMethods?.put;\r\n  const deleteConfig: IConfigDeleteMethod | undefined = pageMethods?.delete;\r\n  const customLabels: ICustomLabels | undefined = { ...config?.customLabels, ...activePage?.customLabels };\r\n  const addItemLabel = customLabels?.buttons?.addItem || '+ Add Item';\r\n  const addItemFormTitle = customLabels?.formTitles?.addItem || 'Add Item';\r\n  const editItemFormTitle = customLabels?.formTitles?.editItem || 'Update Item';\r\n  const { initQueryParams, initialPagination } = buildInitQueryParamsAndPaginationState(getAllConfig?.queryParams || [], paginationConfig);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [openedPopup, setOpenedPopup] = useState<null | IPopupProps>(null);\r\n  const [queryParams, setQueryParams] = useState<IConfigInputField[]>(initQueryParams);\r\n  const [pagination, setPagination] = useState<IPaginationState | undefined>(initialPagination);\r\n  const [items, setItems] = useState<any[]>([]);\r\n  const [filter, setFilter] = useState<string>('');\r\n\r\n  function closeFormPopup(refreshData: boolean = false) {\r\n    setOpenedPopup(null);\r\n\r\n    if (refreshData === true) {\r\n      if (pagination?.type === 'infinite-scroll') {\r\n        setItems([]);\r\n        const updatedParams = [...queryParams];\r\n        remove(updatedParams, param => ['page', 'limit'].includes(param.name));\r\n        setQueryParams(buildInitQueryParamsAndPaginationState(updatedParams, paginationConfig).initQueryParams);\r\n      } else {\r\n        getAllRequest();\r\n      }\r\n    }\r\n  }\r\n\r\n  async function openEditPopup(rawData: any) {\r\n    const params: IPopupProps = {\r\n      rawData,\r\n      type: 'update',\r\n      title: editItemFormTitle,\r\n      config: putConfig as IConfigPutMethod,\r\n      getSingleConfig,\r\n      submitCallback: async (body: any, containFiles: boolean) => {\r\n        return await updateItem(body, rawData, containFiles);\r\n      }\r\n    };\r\n\r\n    setOpenedPopup(params);\r\n  }\r\n\r\n  function openCustomActionPopup(rawData: any, action: IConfigCustomAction) {\r\n    const params: IPopupProps = {\r\n      rawData,\r\n      type: 'action',\r\n      title: action.name || 'Custom Action',\r\n      config: action as IConfigCustomAction,\r\n      submitCallback: async (body: any, containFiles: boolean) => {\r\n        return await performAction(body, rawData, action, containFiles);\r\n      }\r\n    };\r\n\r\n    setOpenedPopup(params);\r\n  }\r\n\r\n  async function performAction(body: any, rawData: any, action: IConfigCustomAction, containFiles: boolean) {\r\n    const { url, requestHeaders, actualMethod } = action;\r\n\r\n    return await httpService.fetch({\r\n      method: actualMethod || 'put',\r\n      origUrl: url,\r\n      rawData,\r\n      body: containFiles ? body : JSON.stringify(body),\r\n      headers: {\r\n        ...pageHeaders,\r\n        ...(requestHeaders || {}),\r\n        ...(containFiles ? {} : { 'content-type': 'application/json' })\r\n      },\r\n      responseType: 'boolean'\r\n    });\r\n  }\r\n\r\n  function extractQueryParams(params: IConfigInputField[]): IConfigInputField[] {\r\n    if(!paginationConfig || isQueryPagination(paginationConfig)) {\r\n      const parsedParams = QueryString.parse(location.search);\r\n      const finalQueryParams = params.map((queryParam) => {\r\n        if (typeof parsedParams[queryParam.name] !== 'undefined') {\r\n          queryParam.value = queryParam.type === 'boolean' ? (parsedParams[queryParam.name] === 'true') : decodeURIComponent(parsedParams[queryParam.name] as any);\r\n        } else {\r\n          queryParam.value = queryParam.value || '';\r\n        }\r\n        return queryParam;\r\n      });\r\n\r\n      setPagination(getUpdatedPaginationState(finalQueryParams, null))\r\n\r\n      return finalQueryParams;\r\n    } else {\r\n      return params;\r\n    }\r\n  }\r\n\r\n  async function fetchPageData(params: {\r\n    actualMethod: 'get' | 'put' | 'post' | 'patch' | 'delete', \r\n    url: string,\r\n    requestHeaders?: any,\r\n    dataPath: string,\r\n    dataTransform: any,\r\n    sortBy: any\r\n  }) {\r\n\r\n\r\n    const result = await httpService.fetch({\r\n      method: params.actualMethod || 'get',\r\n      origUrl: params.url,\r\n      queryParams,\r\n      headers: Object.assign({}, pageHeaders, params.requestHeaders || {})\r\n    });\r\n    let extractedData = dataHelpers.extractDataByDataPath(result, params.dataPath);\r\n\r\n    if (!extractedData) {\r\n      throw new Error('Could not extract data from response.');\r\n    }\r\n\r\n    if (!Array.isArray(extractedData)) {\r\n      throw new Error('Extracted data is invalid.');\r\n    }\r\n\r\n    if (typeof params.dataTransform === 'function') {\r\n      extractedData = await params.dataTransform(extractedData);\r\n    }\r\n\r\n    const orderedItems = orderBy(extractedData, typeof params.sortBy === 'string' ? [params.sortBy] : (params.sortBy || []));\r\n\r\n    if (paginationConfig) {\r\n      const total = paginationConfig.fields?.total ? dataHelpers.extractDataByDataPath(result, paginationConfig.fields.total.dataPath) : undefined;\r\n      const newPaginationState = getUpdatedPaginationState(queryParams, result, total);\r\n      if (newPaginationState) {\r\n        setPagination(newPaginationState);\r\n      }\r\n    }\r\n\r\n    if (infiniteScroll) {\r\n      setItems([...items, ...orderedItems]);\r\n    } else {\r\n      setItems(orderedItems);\r\n    }\r\n  }\r\n\r\n  async function getAllRequest() {\r\n    if (infiniteScroll) {\r\n      if(pagination) {\r\n        if(isQueryPaginationState(pagination)) {\r\n          if(pagination?.page !== 1) {\r\n            setLoading(false);\r\n          }\r\n        } else if( isBodyPaginationState(pagination)) {\r\n          if(pagination.previous) {\r\n            setLoading(false);\r\n          }\r\n        } else {\r\n          throw new Error('unrecognized pagination source');\r\n        }\r\n      }\r\n    } else {\r\n      setLoading(true);\r\n    }\r\n\r\n    setError(null);\r\n\r\n    try {\r\n      if (!getAllConfig) {\r\n        throw new Error('Get all method is not defined.');\r\n      }\r\n\r\n      if (paginationConfig && !pagination) {\r\n        throw new Error('Pagination not initialized.');\r\n      }\r\n\r\n      const { url, requestHeaders, actualMethod, dataPath, sortBy, dataTransform } = getAllConfig;\r\n      await fetchPageData({\r\n        actualMethod: actualMethod,\r\n        url: url,\r\n        requestHeaders: requestHeaders,\r\n        dataPath: dataPath,\r\n        dataTransform: dataTransform,\r\n        sortBy: sortBy\r\n      });\r\n    } catch (e) {\r\n      setError(e.message);\r\n    }\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  async function addItem(body: any, containFiles?: boolean, queryParams?: []) {\r\n    if (!postConfig) {\r\n      throw new Error('Post method is not defined.');\r\n    }\r\n\r\n    const { url, requestHeaders, actualMethod } = postConfig;\r\n\r\n    return await httpService.fetch({\r\n      method: actualMethod || 'post',\r\n      origUrl: url,\r\n      queryParams,\r\n      body: containFiles ? body : JSON.stringify(body),\r\n      headers: {\r\n        ...pageHeaders,\r\n        ...(requestHeaders || {}),\r\n        ...(containFiles ? {} : { 'content-type': 'application/json' })\r\n      },\r\n      responseType: 'boolean'\r\n    });\r\n  }\r\n\r\n  async function updateItem(body: any, rawData: any, containFiles?: boolean) {\r\n    if (!putConfig) {\r\n      throw new Error('Put method is not defined.');\r\n    }\r\n\r\n    const { url, requestHeaders, actualMethod } = putConfig;\r\n\r\n    return await httpService.fetch({\r\n      method: actualMethod || 'put',\r\n      origUrl: url,\r\n      rawData,\r\n      body: containFiles ? body : JSON.stringify(body),\r\n      headers: {\r\n        ...pageHeaders,\r\n        ...(requestHeaders || {}),\r\n        ...(containFiles ? {} : { 'content-type': 'application/json' })\r\n      },\r\n      responseType: 'boolean'\r\n    });\r\n  }\r\n\r\n  async function deleteItem(item: any) {\r\n    const approved: boolean = window.confirm('Are you sure you want to delete this item?');\r\n\r\n    if (!approved) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      if (!deleteConfig) {\r\n        throw new Error('Delete method is not defined.');\r\n      }\r\n\r\n      const { url, requestHeaders, actualMethod } = deleteConfig;\r\n      const success = await httpService.fetch({\r\n        method: actualMethod || 'delete',\r\n        origUrl: url,\r\n        rawData: item,\r\n        headers: Object.assign({}, pageHeaders, requestHeaders || {}),\r\n        responseType: 'boolean'\r\n      });\r\n\r\n      if (success) {\r\n        if (pagination?.type === 'infinite-scroll') {\r\n          setItems([]);\r\n          const updatedParams = [...queryParams];\r\n          remove(updatedParams, param => ['page', 'limit'].includes(param.name));\r\n          setQueryParams(buildInitQueryParamsAndPaginationState(updatedParams, paginationConfig).initQueryParams);\r\n        } else {\r\n          getAllRequest();\r\n        }\r\n      }\r\n    } catch (e) {\r\n      toast.error(e.message);\r\n    }\r\n  }\r\n\r\n  function submitQueryParams(updatedParams: IConfigInputField[], reset?: boolean) {\r\n    if (loading) {\r\n      return;\r\n    }\r\n    \r\n    if (reset) {\r\n      setItems([]);\r\n      remove(updatedParams, param => ['page', 'limit'].includes(param.name));\r\n      updatedParams = buildInitQueryParamsAndPaginationState(updatedParams, paginationConfig).initQueryParams;\r\n    }\r\n\r\n    updatedParams.map((queryParam, idx) => {\r\n        if (queryParam.type === 'select' && queryParam.value === '-- Select --') {\r\n            // default value means nothing was selected and thus we explicitly\r\n            // empty out the value in this case; otherwise the string '-- Select --'\r\n            // is used as the value for the given queryParams\r\n            queryParam.value = '';\r\n        }\r\n    });\r\n\r\n    setQueryParams(updatedParams);\r\n    setPagination(getUpdatedPaginationState(updatedParams, null));\r\n\r\n    let paramsToUrl = [...updatedParams];\r\n\r\n    if (paginationConfig?.type === 'infinite-scroll') {\r\n      paramsToUrl = paramsToUrl.filter(param => !['page', 'limit'].includes(param.name));\r\n    }\r\n\r\n    // Building query string\r\n    const queryState: string = paramsToUrl.map((queryParam, idx) => {\r\n      return `${idx === 0 ? '?' : ''}${queryParam.name}=${encodeURIComponent(queryParam.value || '')}`;\r\n    }).join('&');\r\n\r\n    // Pushing query state to url\r\n    if (page && queryState) {\r\n      push(queryState);\r\n    }\r\n  }\r\n\r\n  function getUpdatedPaginationState(updatedParams: IConfigInputField[], result: any, total?: number): IPaginationState | undefined {\r\n    if (!paginationConfig) {\r\n      return;\r\n    }\r\n\r\n    if(isQueryPagination(paginationConfig)) {\r\n      if(pagination && !isQueryPaginationState(pagination)) {\r\n        throw new Error('unexpected pagination source ' + pagination.source)\r\n      }\r\n      const newState: IQueryPaginationState = pagination ? pagination : {\r\n        source: 'query',\r\n        type: paginationConfig.type,\r\n        page: parseInt(paginationConfig.params?.page?.value || '1'),\r\n        limit: parseInt(paginationConfig.params?.limit?.value || '10'),\r\n        descending: paginationConfig.params?.descending?.value === 'true' || false,\r\n        hasPreviousPage: false,\r\n        hasNextPage: false,\r\n        sortBy: paginationConfig.params?.sortBy?.value,\r\n      };\r\n\r\n      newState.total = total || pagination?.total;\r\n      newState.page = parseInt(updatedParams.find(param => param.name === paginationConfig?.params?.page?.name)?.value) || newState.page;\r\n      newState.limit = parseInt(updatedParams.find(param => param.name === paginationConfig?.params?.limit?.name)?.value) || newState.limit;\r\n      newState.descending = updatedParams.find(param => param.name === paginationConfig?.params?.descending?.name)?.value === 'true' || newState.descending;\r\n      newState.sortBy = updatedParams.find(param => param.name === paginationConfig?.params?.sortBy?.name)?.value || newState.sortBy;\r\n      newState.hasPreviousPage = paginationHelpers.hasPreviousPage(newState.page);\r\n      newState.hasNextPage = paginationHelpers.hasNextPage(newState.page, newState.limit, newState.total);\r\n      return newState;\r\n    } else if(isBodyPagination(paginationConfig)) {\r\n      if(pagination && !isBodyPaginationState(pagination)) {\r\n        throw new Error('unexpected pagination source ' + pagination.source)\r\n      }\r\n      const newState: IBodyPaginationState = pagination ? pagination : {\r\n        source: 'body',\r\n        type: paginationConfig.type,\r\n        next: result[paginationConfig.params.nextPath || locale.next],\r\n        previous: result[paginationConfig.params.prevPath || locale.previous],\r\n        hasNextPage: !!result[paginationConfig.params.nextPath || locale.next],\r\n        hasPreviousPage: !!result[paginationConfig.params.prevPath || locale.previous],\r\n        limit: parseInt(paginationConfig.params?.limit?.value || '10'),\r\n        total: result[paginationConfig.params.countPath || 'count']\r\n      };\r\n      if(result) {\r\n        newState.next = result[paginationConfig.params.nextPath || locale.next];\r\n        newState.previous = result[paginationConfig.params.prevPath || locale.previous];\r\n        newState.hasNextPage = !!result[paginationConfig.params.nextPath || locale.next];\r\n        newState.hasPreviousPage = !!result[paginationConfig.params.prevPath || locale.previous];\r\n        newState.total = result[paginationConfig.params.countPath || 'count'];\r\n      }\r\n      newState.limit = parseInt(updatedParams.find(param => param.name === paginationConfig?.params?.limit?.name)?.value) || newState.limit;\r\n      return newState;\r\n    } else {\r\n      throw new Error('unrecognized pagination source');\r\n    }\r\n  }\r\n\r\n  function renderItemsUI() {\r\n    if (loading) {\r\n      return <Loader />;\r\n    }\r\n\r\n    const fields = getAllConfig?.fields || getAllConfig?.display?.fields || [];\r\n    const fieldsToFilter = fields.filter((field) => (field.filterable)).map((field) => field.name);\r\n    let filteredItems = items;\r\n\r\n    if (filter && fieldsToFilter.length) {\r\n      filteredItems = items.filter((item) => {\r\n        let passFilter = false;\r\n        fieldsToFilter.forEach((fieldName) => {\r\n          const value = item[fieldName];\r\n          if (typeof value === 'string' && value.toLowerCase().indexOf(filter) >= 0) {\r\n            passFilter = true;\r\n          }\r\n        })\r\n        return passFilter;\r\n      });\r\n    }\r\n\r\n    if (!filteredItems.length) {\r\n      return <div className=\"app-error\">{locale.nothing_to_see}</div>;\r\n    }\r\n\r\n    const getNextPage = paginationConfig ? () => {\r\n      if(isQueryPagination(paginationConfig)) {\r\n        if(pagination && !isQueryPaginationState(pagination)) {\r\n          throw new Error('unexpected pagination source ' + pagination.source)\r\n        }\r\n        if (pagination?.page && queryParams.length > 0) {\r\n          const newPage = pagination?.page + 1;\r\n          const updatedParams = queryParams.map((param) => {\r\n            if (param.name === paginationConfig.params?.page?.name) {\r\n              return {\r\n                ...param,\r\n                value: newPage\r\n              }\r\n            }\r\n            return param;\r\n          });\r\n          submitQueryParams(updatedParams);\r\n        }\r\n      } else if(isBodyPagination(paginationConfig)) {\r\n        if(pagination && !isBodyPaginationState(pagination)) {\r\n          throw new Error('unexpected pagination source ' + pagination.source)\r\n        }\r\n        if(!getAllConfig || !pagination?.next) {\r\n          return;\r\n        }\r\n        const { requestHeaders, actualMethod, dataPath, sortBy, dataTransform } = getAllConfig;\r\n        fetchPageData(\r\n          {\r\n            actualMethod: actualMethod,\r\n            url: pagination.next,\r\n            requestHeaders: requestHeaders,\r\n            dataPath: dataPath,\r\n            dataTransform: dataTransform,\r\n            sortBy: sortBy\r\n          }\r\n        )\r\n      } else {\r\n        throw new Error('unrecognized pagination source');\r\n      }\r\n    } : null;\r\n\r\n    const getPreviousPage = paginationConfig ? () => {\r\n      if(isQueryPagination(paginationConfig)) {\r\n        if(pagination && !isQueryPaginationState(pagination)) {\r\n          throw new Error('unexpected pagination source ' + pagination.source)\r\n        }\r\n        if (pagination?.page && pagination.page > 1 && queryParams.length > 0) {\r\n          const newPage = pagination?.page - 1;\r\n          const updatedParams = queryParams.map((param) => {\r\n            if (param.name === paginationConfig.params?.page?.name) {\r\n              return {\r\n                ...param,\r\n                value: newPage\r\n              }\r\n            }\r\n            return param;\r\n          });\r\n          submitQueryParams(updatedParams);\r\n        }\r\n      } else if(isBodyPagination(paginationConfig)) {\r\n        if(pagination && !isBodyPaginationState(pagination)) {\r\n          throw new Error('unexpected pagination source ' + pagination.source)\r\n        }\r\n        if(!getAllConfig || !pagination?.previous) {\r\n          return;\r\n        }\r\n        const { requestHeaders, actualMethod, dataPath, sortBy, dataTransform } = getAllConfig;\r\n        fetchPageData(\r\n          {\r\n            actualMethod: actualMethod,\r\n            url: pagination.previous,\r\n            requestHeaders: requestHeaders,\r\n            dataPath: dataPath,\r\n            dataTransform: dataTransform,\r\n            sortBy: sortBy\r\n          }\r\n        )\r\n      } else {\r\n        throw new Error('unrecognized pagination source');\r\n      }\r\n    } : null;\r\n\r\n    const callbacks = {\r\n      delete: deleteConfig ? deleteItem : null,\r\n      put: putConfig ? openEditPopup : null,\r\n      action: customActions.length ? openCustomActionPopup : () => { },\r\n      getNextPage,\r\n      getPreviousPage,\r\n    };\r\n\r\n    if (getAllConfig?.display.type === 'cards') {\r\n      return (\r\n        <Cards\r\n          pagination={pagination}\r\n          callbacks={callbacks}\r\n          fields={fields}\r\n          items={filteredItems}\r\n          customActions={customActions}\r\n          customLabels={customLabels}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Table\r\n        pagination={pagination}\r\n        callbacks={callbacks}\r\n        fields={fields}\r\n        items={filteredItems}\r\n        customActions={customActions}\r\n        customLabels={customLabels}\r\n      />\r\n    );\r\n  }\r\n\r\n  function renderPaginationStateLabel() {\r\n    if (loading || !items.length) {\r\n      return;\r\n    }\r\n    \r\n    if(!pagination || isQueryPaginationState(pagination)) {\r\n      const currentCountFrom = (((pagination?.page || 1) - 1) * (pagination?.limit || 10)) + 1;\r\n      const currentCountTo = currentCountFrom + items.length - 1;\r\n      let label: string = `${locale.showing_result} ${currentCountFrom}-${currentCountTo} ${locale.out_of} ${pagination?.total} ${locale.items}`;\r\n\r\n      if (pagination?.type === 'infinite-scroll') {\r\n        label = `Showing ${pagination?.total} items`;\r\n      }\r\n\r\n      if (customLabels?.pagination?.itemsCount) {\r\n        label = customLabels?.pagination?.itemsCount\r\n                .replace(':currentCountFrom', currentCountFrom as any)\r\n                .replace(':currentCountTo', currentCountFrom as any)\r\n                .replace(':totalCount', pagination?.total as any);\r\n      }\r\n\r\n      return (\r\n        <p className=\"center pagination-state\">\r\n          {label}\r\n        </p>\r\n      );\r\n    }\r\n    if(isBodyPaginationState(pagination)) {\r\n      // TODO: extract start end end in a meaningful manner from the API\r\n      // this is not something that id based pagination APIs support generally\r\n      let label: string = `Total Results: ${pagination?.total}`;\r\n      if (pagination?.type === 'infinite-scroll') {\r\n        label = `Showing ${pagination?.total} items`;\r\n      }\r\n\r\n      if (customLabels?.pagination?.itemsCount) {\r\n        label = customLabels?.pagination?.itemsCount\r\n                .replace(':totalCount', pagination?.total as any);\r\n      }\r\n\r\n      return (\r\n        <p className=\"center pagination-state\">\r\n          {label}\r\n        </p>\r\n      );\r\n    }\r\n  }\r\n\r\n  function renderPageContent() {\r\n    const fields = getAllConfig?.fields || getAllConfig?.display?.fields || [];\r\n    const fieldsToFilter = fields.filter((field) => (field.filterable)).map((field) => field.name);\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <QueryParams\r\n          initialParams={queryParams}\r\n          paginationConfig={paginationConfig}\r\n          submitCallback={submitQueryParams}\r\n        />\r\n        {\r\n          fieldsToFilter.length > 0 &&\r\n          <FilterField onChange={setFilter} />\r\n        }\r\n        {\r\n          pagination?.total &&\r\n          renderPaginationStateLabel()\r\n        }\r\n        {\r\n          error ?\r\n          <div className=\"app-error\">{error}</div> :\r\n          renderItemsUI()\r\n        }\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    const nextActivePage: IConfigPage | null = context?.config?.pages?.filter((p, pIdx) => p.id === page || (pIdx + 1) === parseInt(page || ''))[0] || null;\r\n    context.setActivePage(nextActivePage);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [page]);\r\n\r\n  useEffect(() => {\r\n    const { initQueryParams, initialPagination } = buildInitQueryParamsAndPaginationState(getAllConfig?.queryParams || [], paginationConfig);\r\n\r\n    setItems([]);\r\n    setQueryParams(extractQueryParams(initQueryParams));\r\n    setPagination(initialPagination);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [activePage]);\r\n\r\n  useEffect(() => {\r\n    // Load data when query params \r\n    getAllRequest();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [queryParams]);\r\n\r\n  return (\r\n    <div className=\"app-page\">\r\n      <header className=\"app-page-header\">\r\n        <hgroup>\r\n          <h2>{activePage?.name}</h2>\r\n          {\r\n            activePage?.description &&\r\n            <h4>{activePage?.description}</h4>\r\n          }\r\n        </hgroup>\r\n        {\r\n          postConfig &&\r\n          <Button className=\"add-item\" color=\"green\" onClick={() => setOpenedPopup({ type: 'add', title: addItemFormTitle, config: postConfig, submitCallback: addItem })}>{addItemLabel}</Button>\r\n        }\r\n      </header>\r\n      <main className=\"app-page-content\">\r\n        {renderPageContent()}\r\n      </main>\r\n      {\r\n        openedPopup &&\r\n        <FormPopup\r\n          title={openedPopup.title}\r\n          closeCallback={closeFormPopup}\r\n          submitCallback={openedPopup.submitCallback}\r\n          fields={openedPopup.config?.fields || []}\r\n          rawData={openedPopup.rawData}\r\n          getSingleConfig={openedPopup.getSingleConfig}\r\n          methodConfig={openedPopup.config}\r\n        />\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const Page = withAppContext(PageComp);\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Button } from '../button/button.comp';\r\nimport { toast } from 'react-toastify';\r\nimport { withAppContext } from '../withContext/withContext.comp';\r\nimport locale from '../../common/locale.js';\r\nimport { IAppContext } from '../app.context';\r\n\r\nimport './authPage.scss';\r\n\r\ninterface IProps { context: IAppContext }\r\n\r\nconst AuthPageComp = ({ context }: IProps) => {\r\n  const { location, replace } = useHistory();\r\n  const [user, setUser] = useState<string>('');\r\n  const [pwd, setPwd] = useState<string>('');\r\n  const [tenant, setTenant] = useState<string>('');\r\n  const { setError, httpService } = context;\r\n\r\n  async function submitForm(e: any) {\r\n    e.preventDefault();\r\n    try {\r\n        const credentials = { username: `${user}`, password: `${pwd}`, tenant: `${tenant}`}\r\n        const result = await httpService.fetch({\r\n            method: 'post',\r\n            origUrl: httpService.loginUrl,\r\n            body: JSON.stringify(credentials),\r\n            headers: { 'content-type': 'application/json' }\r\n        });\r\n        if (!result) { throw new Error(locale.login_error) };\r\n        sessionStorage.setItem('diten-token', result.token);\r\n        const { from } = location.state || { from: { pathname: '/' } };\r\n        replace(from);\r\n    } \r\n    catch (e) { \r\n        setError(e.message); \r\n        toast.error(e.message);\r\n    }\r\n  }\r\n\r\n  function handleUserChange(event: any) {\r\n    setUser(event.target.value);\r\n  }\r\n\r\n  function handlePwdChange(event: any) {\r\n    setPwd(event.target.value);\r\n  }\r\n\r\n  function handleTenantChange(event: any) {\r\n    setTenant(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className=\"auth-page\">\r\n      <form className='form-content' onSubmit={submitForm}>\r\n        <div className='form-row row'>\r\n          <label>{locale.username}</label>\r\n          <input type=\"text\" placeholder={locale.username_suggestion} onChange={handleUserChange} />\r\n        </div>\r\n        <div className='form-row row'>\r\n          <label>{locale.password}</label>\r\n          <input type=\"password\" placeholder={locale.password_suggenstion} onChange={handlePwdChange} />\r\n        </div>\r\n        <div className='form-row row'>\r\n          <label>{locale.tenant}</label>\r\n          <input type=\"text\" placeholder={locale.tenant_suggenstion} onChange={handleTenantChange} />\r\n        </div>\r\n        <div className=\"buttons-wrapper center\">\r\n          <Button type=\"submit\" onClick={submitForm} color=\"green\">{locale.submit}</Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const AuthPage = withAppContext(AuthPageComp);","import React, { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { IAppContext } from '../app.context';\r\nimport { withAppContext } from '../withContext/withContext.comp';\r\nimport { Button } from '../button/button.comp';\r\n\r\nimport './navigation.scss';\r\n\r\ninterface IProps {\r\n  context: IAppContext\r\n}\r\n\r\nconst NavigationComp = ({ context: { config } }: IProps) => {\r\n  const [isOpened, setIsOpened] = useState<boolean>(false);\r\n\r\n  return (\r\n    <nav className=\"app-nav\">\r\n      <Button className=\"app-nav-opener\" onClick={() => setIsOpened(!isOpened)}>\r\n        {\r\n          isOpened ? \r\n          <i className=\"fa fa-times\" aria-hidden=\"true\"></i> : \r\n          <i className=\"fa fa-bars\" aria-hidden=\"true\"></i>\r\n        }\r\n      </Button>\r\n      <div className={`app-nav-wrapper ${isOpened ? 'opened' : ''}`}>\r\n        <div className=\"app-nav-links\">\r\n          {\r\n            (config?.pages || []).map((page, idx) => (\r\n              <NavLink to={`/${page.id || idx + 1}`} activeClassName=\"active\" key={`page_${idx}`} onClick={() => setIsOpened(false)}>{page.name}</NavLink>\r\n            ))\r\n          }\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport const Navigation = withAppContext(NavigationComp);","import React from 'react';\r\nimport { ICustomStyles } from '../../common/models/config.model';\r\n\r\ninterface IProps {\r\n  styles: ICustomStyles\r\n}\r\n\r\nexport const CustomStyles = ({ styles }: IProps) => {\r\n  const cssVars = styles.vars || {};\r\n  const arr = [];\r\n  \r\n  for (const key in cssVars) {\r\n    arr.push(`--${key}: ${(cssVars as any)[key]}`);\r\n  }\r\n\r\n  return (\r\n    <style dangerouslySetInnerHTML={{ __html: `\r\n      :root {\r\n        ${arr.join(';')}\r\n      }\r\n    ` }}>\r\n    </style>\r\n  );\r\n};","import React, { useEffect, useState } from 'react';\r\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport ConfigService from '../services/config.service';\r\nimport { IConfig, IConfigPage } from '../common/models/config.model';\r\nimport { Page } from '../components/page/page.comp';\r\nimport { AuthPage } from '../components/authPage/authPage.comp';\r\nimport { Navigation } from '../components/navigation/navigation.comp';\r\nimport { AppContext } from './app.context';\r\nimport HttpService from '../services/http.service';\r\nimport { CustomStyles } from './customStyles/customStyles.comp';\r\n\r\nimport './app.scss';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst httpService = new HttpService();\r\nconst defaultAppName: string = 'RESTool App';\r\n\r\nfunction changeFavicon(src: string) {\r\n  const link = document.createElement('link');\r\n  const oldLink = document.getElementById('favicon');\r\n  link.id = 'favicon';\r\n  link.rel = 'shortcut icon';\r\n  link.href = src;\r\n  if (oldLink) {\r\n   document.head.removeChild(oldLink);\r\n  }\r\n  document.head.appendChild(link);\r\n }\r\n\r\nfunction App() {\r\n  const [firstLoad, setFirstLoad] = useState<boolean>(true);\r\n  const [config, setConfig] = useState<IConfig | null>(null);\r\n  const [activePage, setActivePage] = useState<IConfigPage | null>(config?.pages?.[0] || null);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const appName: string = config?.name || defaultAppName;\r\n  \r\n  async function loadConfig(url?: string): Promise<void> {\r\n    try {\r\n      const windowConfig = (window as any).RESTool?.config;\r\n      let remoteConfig: IConfig; \r\n      // Try to load config from window object first\r\n      if (!url && windowConfig) {\r\n        remoteConfig = Object.assign({}, windowConfig, {});\r\n      } else {\r\n        remoteConfig = url ? await ConfigService.getRemoteConfig(url) : await ConfigService.loadDefaultConfig();\r\n      }\r\n\r\n      // Setting global config for httpService\r\n      httpService.baseUrl = remoteConfig.baseUrl || '';\r\n      httpService.loginUrl = remoteConfig.loginUrl || '';\r\n      httpService.errorMessageDataPath = remoteConfig.errorMessageDataPath || '';\r\n      httpService.unauthorizedRedirectUrl = remoteConfig.unauthorizedRedirectUrl || '';\r\n      httpService.requestHeaders = remoteConfig.requestHeaders || {};\r\n      document.title = remoteConfig.name || defaultAppName;\r\n\r\n      if (remoteConfig?.favicon) {\r\n        changeFavicon(remoteConfig.favicon);\r\n      }\r\n\r\n      if (remoteConfig?.remoteUrl) {\r\n        return await loadConfig(remoteConfig.remoteUrl);\r\n      }\r\n\r\n      setConfig(remoteConfig);\r\n    } catch (e) {\r\n      console.error('Could not load config file', e);\r\n    }\r\n\r\n    setFirstLoad(false);\r\n  }\r\n\r\n  function scrollToTop(scrollDuration: number = 250) {\r\n    var cosParameter = window.scrollY / 2,\r\n    scrollCount = 0,\r\n    oldTimestamp = performance.now();\r\n\r\n    function step (newTimestamp: number) {\r\n      scrollCount += Math.PI / (scrollDuration / (newTimestamp - oldTimestamp));\r\n\r\n      if (scrollCount >= Math.PI) {\r\n        window.scrollTo(0, 0);\r\n      }\r\n\r\n      if (window.scrollY === 0) {\r\n        return;\r\n      }\r\n\r\n      window.scrollTo(0, Math.round(cosParameter + cosParameter * Math.cos(scrollCount)));\r\n      oldTimestamp = newTimestamp;\r\n      window.requestAnimationFrame(step);\r\n    }\r\n\r\n    window.requestAnimationFrame(step);\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadConfig();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const { isValid, errorMessage } = ConfigService.validateConfig(config);\r\n\r\n    if (!isValid) {\r\n      setError(errorMessage);\r\n      toast.error(errorMessage);\r\n      return;\r\n    }\r\n  }, [config]);\r\n\r\n  return (\r\n    <div className=\"restool-app\">\r\n      {\r\n        !config ?\r\n        <div className=\"app-error\">\r\n          {firstLoad ? 'Loading Configuration...' : 'Could not find config file.'}\r\n        </div> :\r\n        \r\n        <AppContext.Provider value={{ config, activePage, setActivePage, error, setError, httpService }}>\r\n          {\r\n            config.customStyles &&\r\n            <CustomStyles\r\n              styles={config.customStyles}\r\n            />\r\n          }\r\n          <Router>\r\n          \r\n            <aside>\r\n              <h1 title={appName} onClick={() => scrollToTop()}>{appName}</h1>\r\n              {\r\n                <Navigation />\r\n              }\r\n            </aside>\r\n            {\r\n              config &&\r\n              <Switch>\r\n                <Route exact path='/login' component={AuthPage} />\r\n                <Route exact path=\"/:page\" component={Page} />\r\n                <Redirect path=\"/\" to={`/${config?.pages?.[0]?.id || '1'}`} />\r\n              </Switch>\r\n               \r\n            }\r\n            <ToastContainer\r\n              position={toast.POSITION.TOP_CENTER}\r\n              autoClose={4000}\r\n              draggable={false}\r\n            />\r\n            \r\n          </Router>\r\n        </AppContext.Provider>\r\n        \r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config: any) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config: any) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config: any) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport './index.scss';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nserviceWorker.unregister();\r\n","const locale = Object.freeze({\r\n    username: 'Nome utente',\r\n    password: 'Password',\r\n    tenant: 'Organizzazione',\r\n    username_suggestion: 'Inserisci il nome utente',\r\n    password_suggenstion: 'Inserisci la password',\r\n    tenant_suggenstion: 'Inserisci la tua organizzazione',\r\n    submit: 'Invio',\r\n    login_error: 'Login errata!',\r\n    search: 'Cerca',\r\n    previous_page: 'Pagina precedente',\r\n    next_page: 'Prossima pagina',\r\n    showing_result: \"Risultati\",\r\n    out_of: \"di\",\r\n    items: \"totali\",\r\n    nothing_to_see: \"Nessun risultato\",\r\n    enter_text: \"inserisci testo\",\r\n    next : \"Successivo\",\r\n    previous : \"Precedente\"\r\n\r\n});\r\n\r\nmodule.exports = locale;"],"sourceRoot":""}