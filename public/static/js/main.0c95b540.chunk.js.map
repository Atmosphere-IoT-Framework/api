{"version":3,"sources":["helpers/data.helpers.ts","services/http.service.ts","services/config.service.ts","components/app.context.ts","components/withContext/withContext.comp.tsx","components/loader/loader.comp.tsx","helpers/pagination.helpers.ts","components/button/button.comp.tsx","components/infiniteLoader/infiniteLoader.comp.tsx","components/pagination/pagination.comp.tsx","components/table/table.comp.tsx","components/cards/cards.comp.tsx","components/formRow/formRow.comp.tsx","components/queryParams/queryParams.comp.tsx","components/popup/popup.comp.tsx","helpers/file.helpers.ts","components/formPopup/formPopup.comp.tsx","components/filterField/filterField.comp.tsx","common/models/states.types.helper.ts","common/models/config.types.helper.ts","components/graphHolder/graphHolder.tsx","components/graphPopup/graphPopup.comp.tsx","components/page/page.comp.tsx","components/authPage/authPage.comp.tsx","components/navigation/navigation.comp.tsx","components/customStyles/customStyles.comp.tsx","components/app.tsx","serviceWorker.ts","index.tsx","common/locale.js"],"names":["dataHelpers","data","dataPath","attr","extractedData","digProps","split","prop","field","type","arrayType","objArray","array","JSON","parse","str","Object","keys","map","value","join","reduce","next","values","HttpService","baseUrl","unauthorizedRedirectUrl","errorMessageDataPath","loginUrl","requestHeaders","this","url","indexOf","rawData","outputUrl","forEach","key","urlParamName","replace","queryParams","exactMatch","length","replaceParamsInUrl","params","page","limit","param","name","push","console","log","reqUrl","urlIsAbsolute","origUrl","finalUrl","buildUrl","authorization","sessionStorage","getItem","Authorization","method","toUpperCase","headers","assign","body","undefined","res","errorMessage","json","path","dataAtPath","extractDataByDataPath","status","statusText","clear","redirectUrl","encodeURIComponent","document","location","href","Error","getErrorMessage","responseType","fetch","ok","text","handleError","buildRequest","makeRequest","httpService","HTTPService","endsWith","import","default","getRemoteConfig","config","isValid","configSchema","require","validate","Ajv","allErrors","verbose","compile","firstError","errors","message","error","AppContext","React","createContext","activePage","setError","setActivePage","withAppContext","Component","props","Consumer","context","Loader","className","paginationHelpers","parseInt","_page","_itemsPerPage","_total","Button","color","children","InfiniteLoader","Pagination","callbacks","pagination","customLabels","previousTitle","previousPageTitle","nextTitle","nextPageTitle","disabled","hasPreviousPage","onClick","previousPage","title","aria-hidden","hasNextPage","nextPage","Table","items","fields","customActions","editLabel","buttons","editItem","deleteLabel","deleteItem","actionColumnHeader","tableColumnHeaders","actions","paginationCallbacks","getNextPage","getPreviousPage","renderTableRow","item","rowIdx","fieldIdx","truncate","origField","origItem","src","alt","label","fieldValue","target","rel","urlLabel","style","backgroundColor","html","htmlCode","dangerouslySetInnerHTML","__html","renderTableCell","put","call","action","idx","icon","delete","renderTableContent","useEffect","clientHeight","window","innerHeight","dataLength","hasMore","loader","Cards","renderActions","cardIdx","renderCard","Fragment","renderRow","renderCardSkeleton","duration","startingIndex","Array","from","renderSkeletons","FormRow","direction","showReset","onChange","useState","optionSources","setOptionSources","pageHeaders","addArrayItemLabel","addArrayItem","clearLabel","clearInput","renderArrayItems","originalField","itemIdx","inputField","renderFieldInput","fieldName","updatedArray","localValue","splice","removeItemToFieldArray","aria-label","e","preventDefault","addItemToFieldArray","changeCallback","inputProps","defaultPlaceholder","placeholder","readonly","required","checked","optionSource","a","async","actualMethod","result","optionSourceData","option","valuePath","displayPath","display","toast","position","POSITION","TOP_CENTER","loadOptionSourceFromRemote","sortBy","finalOptions","options","sortedOptions","orderBy","locale","select","placeholders","object","enter_text","number","valueAsNumber","enter_color","email","enter_email","password","enter_password","accept","file","date","enter_date","originalName","QueryParams","initialParams","paginationConfig","submitCallback","setQueryParams","submit","formChanged","submitAfterChange","updatedQueryParams","filteredParams","filter","includes","search","onSubmit","queryParam","portalRoot","getElementById","createElement","setAttribute","append","PortalPopup","el","componentDidMount","appendChild","componentWillUnmount","removeChild","ReactDOM","createPortal","Popup","_handleKeyDown","show","closeCallback","keyCode","closeLabel","closeForm","ref","refCallback","addEventListener","bind","removeEventListener","fileHelpers","fieldIndex","unflatten","FormPopup","getSingleConfig","methodConfig","fieldsCopy","stringify","loading","setLoading","formFields","setFormFields","finalRawData","setFinalRawData","submitForm","finalObject","includeOriginalFields","formData","FormData","containFiles","isMultipartForm","validationError","useInUrl","checkIfFieldIsObject","fileInput","querySelector","files","firstFile","success","updatedFormFields","dataTransform","dataPathSplit","lookupValue","objToLookIn","pathElem","lookup","initFormFields","FilterField","toLowerCase","isQueryPaginationState","obj","source","isBodyPaginationState","isQueryPagination","isBodyPagination","GraphHolder","dataMat","prev","prevCallback","nextCallback","zoomIn","zoomInCallback","zoomOut","zoomOutCallback","setHintData","fill","y","setHoverData","hoverData","hintData","setHoverDataWithIndex","index","previous_page","next_page","nameStruct","width","height","xType","onMouseLeave","tickTotal","tickFormat","d","Date","toString","substr","unitMeasure","dataStruct","onValueMouseOver","setHintDataWithIndex","x","background","GraphPopup","graphConfig","doneQuery","setDoneQuery","showGraph","setShowGraph","titleState","setTitleState","graphData","setGraphData","prevGraphData","setPrevGraphData","nextGraphData","setNextGraphData","setNext","setPrev","setZoomIn","setZoomOut","pageNum","setPageNum","totalPages","setTotalPages","setFetchedData","fetchedFeature","setFetchedFeature","setTotalDocs","setLimit","graphChanged","submitGraph","fetchFeatureData","resultsData","fF","f","resultsFeature","pG","tP","tD","fD","fetchedData","totalDocs","buildData","goodFeatures","dataFeatName","dataFeatUnit","ft","comp","dimension","unit","i","sample","feature","indexFeat","finalData","reverse","buildPrev","tempField","prData","pPage","buildNext","nxData","nPage","wrong_feature_error","no_data_error","graph","_id","buildMain","prPage","nxPage","buildInitQueryParamsAndPaginationState","initQueryParams","initialPagination","descending","find","previous","Page","useParams","useHistory","pageMethods","methods","getAllConfig","getAll","infiniteScroll","getSingle","postConfig","post","putConfig","deleteConfig","addItemLabel","addItem","add","itemName","openGraphLabel","addItemFormTitle","formTitles","editItemFormTitle","update","graphTitle","openedPopup","setOpenedPopup","openedGraph","setOpenedGraph","setPagination","setItems","setFilter","openEditPopup","updateItem","openCustomActionPopup","performAction","fetchPageData","isArray","orderedItems","total","newPaginationState","getUpdatedPaginationState","getAllRequest","confirm","updatedParams","remove","submitQueryParams","reset","paramsToUrl","queryState","newState","nextPath","prevPath","countPath","nextActivePage","pages","p","pIdx","id","parsedParams","QueryString","finalQueryParams","decodeURIComponent","extractQueryParams","description","openGraphPopup","fieldsToFilter","filterable","currentCountFrom","currentCountTo","showing_result","out_of","itemsCount","renderPaginationStateLabel","filteredItems","passFilter","nothing_to_see","newPage","renderItemsUI","renderPageContent","refreshData","AuthPage","user","setUser","pwd","setPwd","tenant","setTenant","openedAddTenant","setOpenedAddTenant","credentials","username","login_error","login_unauthorised_user","setItem","token","addTenant","tokenHead","login","username_suggestion","event","password_suggenstion","tenant_suggenstion","add_tenant","Navigation","isOpened","setIsOpened","to","activeClassName","logout","CustomStyles","cssVars","styles","vars","arr","defaultAppName","changeFavicon","link","oldLink","head","App","firstLoad","setFirstLoad","setConfig","appName","loadConfig","windowConfig","RESTool","remoteConfig","ConfigService","loadDefaultConfig","favicon","remoteUrl","validateConfig","Provider","exact","component","customStyles","scrollDuration","cosParameter","scrollY","scrollCount","oldTimestamp","performance","now","requestAnimationFrame","step","newTimestamp","Math","PI","scrollTo","round","cos","scrollToTop","autoClose","draggable","Boolean","hostname","match","render","navigator","serviceWorker","ready","then","registration","unregister","freeze","session_expired","module","exports"],"mappings":"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","file":"static/js/main.0c95b540.chunk.js","sourcesContent":["import { IConfigInputField } from \"../common/models/config.model\";\r\n\r\nclass DataHelpers {\r\n  public extractDataByDataPath(\r\n    data: any,\r\n    dataPath: string,\r\n    attr: string | null = null\r\n  ) {\r\n    if (!data || !dataPath) {\r\n      if (attr) {\r\n        return data[attr];\r\n      }\r\n      return data;\r\n    }\r\n\r\n    let extractedData: any = data;\r\n    const digProps: string[] = dataPath.split(\".\");\r\n\r\n    for (let prop of digProps) {\r\n      if (typeof extractedData[prop] !== \"undefined\") {\r\n        extractedData = extractedData[prop];\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n\r\n    if (typeof extractedData === \"undefined\") {\r\n      return null;\r\n    }\r\n\r\n    if (attr) {\r\n      return extractedData[attr];\r\n    }\r\n\r\n    return extractedData;\r\n  }\r\n\r\n  public checkIfFieldIsObject(field: IConfigInputField): boolean {\r\n    if (field.type === \"object\") {\r\n      return true;\r\n    }\r\n\r\n    if (field.type === \"array\") {\r\n      if (!field.arrayType || field.arrayType === \"object\") {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  public arrayToCSV(objArray: any) {\r\n    const array =\r\n      typeof objArray !== \"object\" ? JSON.parse(objArray) : objArray;\r\n    let str =\r\n      `${Object.keys(array[0])\r\n        .map((value) => `\"${value}\"`)\r\n        .join(\",\")}` + \"\\r\\n\";\r\n\r\n    return array.reduce((str: any, next: any) => {\r\n      str +=\r\n        `${Object.values(next)\r\n          .map((value) => `\"${value}\"`)\r\n          .join(\",\")}` + \"\\r\\n\";\r\n      return str;\r\n    }, str);\r\n  }\r\n}\r\n\r\nexport const dataHelpers = new DataHelpers();","import locale from '../common/locale';\r\nimport { TConfigMethod, IQueryParam } from '../common/models/config.model';\r\nimport { dataHelpers } from '../helpers/data.helpers';\r\n\r\nexport type ResponseType = 'json' | 'text' | 'boolean' | 'status';\r\n\r\nexport interface IFetchParams {\r\n  origUrl: string\r\n  method?: TConfigMethod\r\n  headers?: any\r\n  queryParams?: IQueryParam[]\r\n  exactMatch?: boolean\r\n  rawData?: any\r\n  body?: any\r\n  responseType?: ResponseType\r\n}\r\n\r\nclass HttpService {\r\n  public baseUrl: string;\r\n  public loginUrl: string;\r\n  public unauthorizedRedirectUrl: string;\r\n  public errorMessageDataPath: string | string[];\r\n  public requestHeaders: any;\r\n\r\n  constructor(baseUrl: string = '', unauthorizedRedirectUrl: string = '', errorMessageDataPath: string = '', loginUrl: string = '') {\r\n    this.baseUrl = baseUrl || '';\r\n    this.loginUrl = loginUrl || '';\r\n    this.unauthorizedRedirectUrl = unauthorizedRedirectUrl || '';\r\n    this.errorMessageDataPath = errorMessageDataPath || '';\r\n    this.requestHeaders = {};\r\n  }\r\n\r\n  private urlIsAbsolute(url: string) {\r\n    if (url.indexOf('http') === 0 || url.indexOf('https') === 0) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private replaceParamsInUrl(url: string, rawData?: any): string {\r\n    if (!rawData || typeof rawData !== 'object') {\r\n      return url;\r\n    }\r\n\r\n    let outputUrl = url;\r\n\r\n    Object.keys(rawData).forEach((key) => {\r\n      const urlParamName = `:${key}`;\r\n      outputUrl = outputUrl.replace(urlParamName, rawData[key] as string);\r\n    });\r\n\r\n    return outputUrl;\r\n  }\r\n\r\n  private buildUrl(url: string, queryParams: IQueryParam[] = [], exactMatch : boolean = false, rawData?: any): string {\r\n    if (!queryParams || !queryParams.length) {\r\n      return this.replaceParamsInUrl(url, rawData);\r\n    }\r\n\r\n    let outputUrl = url;\r\n    const params = [];\r\n    let page = '-1'\r\n    let limit = '10'\r\n\r\n    for (let param of queryParams) {\r\n      let value = '';\r\n      if (!param.name || typeof param.value === 'undefined') { continue; } \r\n      if (param.name === 'page') { page = param.value; continue; }\r\n      if (param.name === 'limit') { limit = param.value; continue; }\r\n      if (param.name === 'tags' && param.value === \"\") { continue; }\r\n      if (param.name === 'info') value = '{\"$regex\":\"' + param.value + '\",\"$options\":\"i\"}';\r\n      else value = '\"' + param.value + '\"';\r\n      \r\n      if(exactMatch === true)\r\n      {\r\n        params.push(`\"${param.name}\":${value || ''}`);\r\n      }\r\n      else\r\n      {\r\n        params.push(`\"${param.name}\":{\"$regex\" : ${value || ''}}`);\r\n      }\r\n      \r\n      \r\n\r\n    }\r\n\r\n    outputUrl += '?filter={' + params.join(',') + '}';\r\n    if(page != '-1') outputUrl += \"&page=\" + page;\r\n    outputUrl += \"&limit=\" + limit;\r\n\r\n    console.log(\"Requested URL : \"+outputUrl);\r\n\r\n    return outputUrl;\r\n  }\r\n\r\n  private buildRequest(params: IFetchParams): { url: string, params: any } {\r\n    const reqUrl: string = this.urlIsAbsolute(params.origUrl) ? params.origUrl : this.baseUrl + params.origUrl;\r\n    const finalUrl: string = this.buildUrl(reqUrl, params.queryParams,params.exactMatch, params.rawData);\r\n    const authorization = sessionStorage.getItem('diten-token') ? { Authorization: sessionStorage.getItem('diten-token'), } : {};\r\n    const requestParams = {\r\n      method: params.method ? params.method.toUpperCase() : 'GET',\r\n      headers: Object.assign(authorization, this.requestHeaders, params.headers || {}),\r\n      body: params.method === 'post' || params.method === 'put' || params.method === 'patch' ? params.body : undefined\r\n    };\r\n\r\n    return {\r\n      url: finalUrl,\r\n      params: requestParams\r\n    };\r\n  }\r\n\r\n  private async getErrorMessage(res: Response | any): Promise<string> {\r\n    let errorMessage: string = '';\r\n\r\n    try {\r\n      const body = await res.json();\r\n\r\n      for (const path of this.errorMessageDataPath) {\r\n        const dataAtPath = dataHelpers.extractDataByDataPath(body, path);\r\n\r\n        if (dataAtPath) {\r\n          errorMessage = dataAtPath;\r\n        }\r\n      }\r\n    } catch { } // TODO: proper handling of errors (^.^)\r\n\r\n    return errorMessage && errorMessage.length ?\r\n      errorMessage :\r\n      `${res.status} - ${res.statusText || ''}`;\r\n  }\r\n\r\n  private async handleError(res: Response) {\r\n    // In case response status is \"Unauthorized\", redirect to relevant url\r\n\r\n    if (res.status === 401 && this.unauthorizedRedirectUrl) {\r\n      //test\r\n      \r\n      sessionStorage.clear();\r\n\r\n      \r\n\r\n      const redirectUrl: string = this.unauthorizedRedirectUrl.replace(':returnUrl', encodeURIComponent(document.location.href));\r\n      document.location.replace(redirectUrl);\r\n      return;\r\n    }\r\n\r\n    throw new Error(await this.getErrorMessage(res));\r\n  }\r\n\r\n  private async makeRequest(url: string, params: any = {}, responseType: ResponseType = 'json') {\r\n    const res: Response = await fetch(url, Object.assign({}, params, {}));\r\n\r\n    if (res.ok) {\r\n      switch (responseType) {\r\n        case 'json':\r\n          return await res.json();\r\n        case 'text':\r\n          return await res.text();\r\n        case 'boolean':\r\n          return true;\r\n        default:\r\n          return true;\r\n      }\r\n    }\r\n\r\n    await this.handleError(res);\r\n  }\r\n\r\n  public async fetch({ method, origUrl, queryParams, exactMatch, rawData, body, headers, responseType }: IFetchParams) {\r\n    const { url, params } = this.buildRequest({ method, origUrl, queryParams,exactMatch, rawData, body, headers });\r\n    return await this.makeRequest(url, params, responseType);\r\n  }\r\n}\r\n\r\nexport default HttpService;\r\n","import HTTPService from './http.service';\r\nimport { IConfig } from '../common/models/config.model';\r\nimport Ajv from 'ajv';\r\n\r\nconst httpService: HTTPService = new HTTPService();\r\n\r\nclass ConfigService extends HTTPService {\r\n\r\n  public async getRemoteConfig(url: string) {\r\n    if (url.endsWith('.js')) {\r\n      return (await import(/* webpackIgnore: true */url)).default;\r\n    }\r\n    return await httpService.fetch({\r\n      origUrl: url,\r\n    });\r\n  }\r\n\r\n  public async loadDefaultConfig() { return (await this.getRemoteConfig('../../config.js')); }\r\n\r\n  public validateConfig(config: IConfig | null): { isValid: boolean, errorMessage: string | null } {\r\n    if (config === null) {\r\n      return {\r\n        isValid: true,\r\n        errorMessage: null,\r\n      }\r\n    }\r\n    const configSchema = require('../assets/schemas/config.schema.json');\r\n    const ajv = new Ajv({\r\n      allErrors: true,\r\n      verbose: true,\r\n    });\r\n    const validate = ajv.compile(configSchema);\r\n    const isValid = validate(config);\r\n    if (typeof isValid !== 'boolean') {\r\n      throw new Error('Unexpected asynchronous JSON validation');\r\n    }\r\n    if (isValid) {\r\n      return {\r\n        isValid,\r\n        errorMessage: null,\r\n      }\r\n    }\r\n    const firstError = validate.errors ? validate.errors[0] : undefined;\r\n    let errorMessage: string | null = null;\r\n    if (firstError?.message && firstError?.dataPath) {\r\n      errorMessage = `Error parsing configuration at \"${firstError.dataPath}\": ${firstError.message}`\r\n    } else if (firstError?.message) {\r\n      errorMessage = `Error parsing configuration: ${firstError.message}`\r\n    } else if (firstError?.dataPath) {\r\n      errorMessage = `Error parsing configuration at \"${firstError.dataPath}\"`\r\n    } else {\r\n      errorMessage = `Error parsing configuration`;\r\n    }\r\n    console.error(errorMessage);\r\n    console.error('All configuration errors: ', validate.errors);\r\n    return {\r\n      isValid,\r\n      errorMessage,\r\n    };\r\n  }\r\n\r\n}\r\n\r\nexport default new ConfigService();\r\n","import React from 'react';\r\nimport { IConfig, IConfigPage } from '../common/models/config.model';\r\nimport HttpService from '../services/http.service';\r\n\r\nexport interface IAppContext {\r\n  config: IConfig | null\r\n  activePage: IConfigPage | null\r\n  error: string | null\r\n  setError: (error: string | null) => void\r\n  setActivePage: (activePage: IConfigPage | null) => void\r\n  httpService: HttpService\r\n}\r\n\r\nexport const AppContext = React.createContext<IAppContext>({\r\n  config: null,\r\n  activePage: null,\r\n  error: null,\r\n  setError: () => {},\r\n  setActivePage: () => {},\r\n  httpService: new HttpService()\r\n});","import React from 'react';\r\nimport { AppContext } from '../app.context';\r\n\r\nexport const withAppContext = (Component: any) => {\r\n  return (props: any) => (\r\n    <AppContext.Consumer>    \r\n      {(context) => {\r\n        return <Component {...props} context={context} />\r\n      }}\r\n    </AppContext.Consumer>\r\n  );\r\n};","import React from 'react';\r\n\r\nimport './loader.scss';\r\n\r\nexport const Loader = () => {\r\n  return (\r\n    <div className=\"app-loader cp-spinner cp-balls small\"></div>\r\n  );\r\n};","class PaginationHelpers {\r\n  public hasPreviousPage(page: string | number | undefined): boolean {\r\n    if (page === undefined) {\r\n      return false;\r\n    }\r\n\r\n    if (typeof page === 'string') {\r\n      return parseInt(page) > 1;\r\n    }\r\n\r\n    return page > 1;\r\n  }\r\n\r\n  public hasNextPage(_page: string | number, _itemsPerPage: string | number, _total: string | number | undefined): boolean {\r\n    if (_total === undefined) {\r\n      return true;\r\n    }\r\n    const page = typeof _page === 'string' ? parseInt(_page) : _page;\r\n    const itemsPerPage = typeof _itemsPerPage === 'string' ? parseInt(_itemsPerPage) : _itemsPerPage;\r\n    const total = typeof _total === 'string' ? parseInt(_total) : _total;\r\n\r\n    return page * itemsPerPage < total;\r\n  }\r\n}\r\n\r\nexport const paginationHelpers = new PaginationHelpers();","import React from 'react';\r\n\r\nimport './button.scss';\r\n\r\ninterface IProps {\r\n  children: any\r\n  type?: 'submit' | 'button' | 'reset'\r\n  title?: string\r\n  className?: string\r\n  onClick?: (e: any) => void\r\n  color?: 'gray' | 'blue' | 'green' | 'red'\r\n  disabled?: boolean\r\n}\r\n\r\nexport const Button = (props: IProps) => {\r\n  return (\r\n    <button {...props} className={`button ${props.className || ''} ${props.color || ''}`}>{props.children}</button>\r\n  );\r\n};","import React from 'react';\r\n\r\nimport './infiniteLoader.scss';\r\n\r\nexport const InfiniteLoader = () => {\r\n  return (\r\n    <div className=\"app-infinite-loader cp-spinner cp-balls small\"></div>\r\n  );\r\n};","import React from 'react';\r\nimport { ICustomLabels } from '../../common/models/config.model';\r\nimport { IPaginationState } from '../../common/models/states.model';\r\nimport { Button } from '../button/button.comp';\r\n\r\nimport './pagination.scss';\r\n\r\ninterface IProps {\r\n  pagination: IPaginationState\r\n  callbacks: {\r\n    previousPage: () => void,\r\n    nextPage: () => void,\r\n  }\r\n  customLabels?: ICustomLabels\r\n}\r\n\r\nexport const Pagination = ({ callbacks, pagination, customLabels }: IProps) => {\r\n  const previousTitle = customLabels?.pagination?.previousPageTitle || 'Previous page';\r\n  const nextTitle = customLabels?.pagination?.nextPageTitle || 'Next page';\r\n  return (\r\n    <div className=\"pagination-wrapper\">\r\n      <Button disabled={!pagination.hasPreviousPage} onClick={() => callbacks.previousPage()} title={previousTitle}>\r\n        <i className=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n      </Button>\r\n      <Button disabled={!pagination.hasNextPage} onClick={() => callbacks.nextPage()} title={nextTitle}>\r\n        <i className=\"fa fa-arrow-right\" aria-hidden=\"true\" ></i>\r\n      </Button>\r\n    </div>\r\n  );\r\n};","import React, { useEffect } from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\n\r\nimport { IConfigDisplayField, IConfigCustomAction, ICustomLabels } from '../../common/models/config.model';\r\nimport { dataHelpers } from '../../helpers/data.helpers';\r\nimport { Button } from '../button/button.comp';\r\nimport { InfiniteLoader } from '../infiniteLoader/infiniteLoader.comp';\r\nimport { IPaginationState } from '../../common/models/states.model';\r\nimport { Pagination } from '../pagination/pagination.comp';\r\n\r\nimport './table.scss';\r\n\r\ninterface IProps {\r\n  items: any[]\r\n  pagination?: IPaginationState\r\n  callbacks: {\r\n    delete: ((item: any) => void) | null\r\n    put: ((item: any) => void) | null\r\n    action: (item: any, action: IConfigCustomAction) => void\r\n    getPreviousPage: (() => void) | null\r\n    getNextPage: (() => void) | null\r\n  }\r\n  fields: IConfigDisplayField[]\r\n  customActions?: IConfigCustomAction[]\r\n  customLabels?: ICustomLabels\r\n}\r\n\r\nexport const Table = ({ items, fields, pagination, callbacks, customActions, customLabels }: IProps) => {\r\n  const editLabel = customLabels?.buttons?.editItem || 'Edit';\r\n  const deleteLabel = customLabels?.buttons?.deleteItem || 'Delete';\r\n  const actionColumnHeader = customLabels?.tableColumnHeaders?.actions || 'Actions';\r\n  const paginationCallbacks = {\r\n    nextPage: callbacks.getNextPage || (() => { return; }),\r\n    previousPage: callbacks.getPreviousPage || (() => { return; }),\r\n  };\r\n\r\n  function renderTableCell(origField: IConfigDisplayField, origItem: any, value: any) {\r\n    if (origField.type === 'boolean') {\r\n      value = value ? true : false;\r\n    }\r\n\r\n    if (value && typeof value === 'object') {\r\n      return 'object';\r\n    }\r\n\r\n    switch (origField.type) {\r\n      case 'text':\r\n        return <span>{value}</span>;\r\n      case 'boolean':\r\n        return <div className={`bool ${value ? 'true' : 'false'}`}></div>;\r\n      case 'image':\r\n        return <img src={value || ''} alt={value || origField.label || origField.name} />;\r\n      case 'url':\r\n        let url: string = origField.url || value || '';\r\n\r\n        // Replace all url vars\r\n        fields.forEach((field) => {\r\n          const fieldValue = dataHelpers.extractDataByDataPath(origItem, field.dataPath, field.name);\r\n          url = url.replace(`:${field.name}`, fieldValue);\r\n        });\r\n\r\n        return <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{origField.urlLabel || value}</a>;\r\n      case 'colorbox':\r\n        return <div className=\"colorbox\" style={{ backgroundColor: value }}></div>;\r\n      case 'html':\r\n        const htmlCode = origField.htmlCode || '<span>{value}</span>';\r\n        const html =  htmlCode.replace('{value}', value);\r\n        return <div dangerouslySetInnerHTML={{__html: html}}></div>\r\n      default:\r\n        return value;\r\n    }\r\n  }\r\n\r\n  function renderTableRow(item: any, rowIdx: number) {\r\n    return (\r\n      <tr key={`tr_${rowIdx}`}>\r\n        {\r\n          fields.map((field, fieldIdx) => {\r\n            const value = dataHelpers.extractDataByDataPath(item, field.dataPath, field.name);\r\n            return (\r\n              <td className={field.truncate ? 'truncate' : ''} key={`td_${rowIdx}_${fieldIdx}`}>\r\n                {renderTableCell(field, item, value)}\r\n              </td>\r\n            );\r\n          })\r\n        }\r\n        <td>\r\n          <div className=\"actions-wrapper\">\r\n            {\r\n              callbacks.put &&\r\n              <Button onClick={() => callbacks.put?.(item)} title={editLabel}>\r\n                <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i>\r\n              </Button>\r\n            }\r\n            {\r\n              (customActions && customActions.length > 0) &&\r\n              customActions.map((action, idx) => (\r\n                <Button key={`action_${rowIdx}_${idx}`} onClick={() => callbacks.action(item, action)} title={action.name}>\r\n                  <i className={`fa fa-${action.icon || 'cogs'}`} aria-hidden=\"true\"></i>\r\n                </Button>\r\n              ))\r\n            }\r\n            {\r\n              callbacks.delete &&\r\n              <Button onClick={() => callbacks.delete?.(item)} title={deleteLabel}>\r\n                <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n              </Button>\r\n            }\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n\r\n  function renderTableContent() {\r\n    return (\r\n      <table className=\"pure-table\">\r\n        <thead>\r\n          <tr>\r\n            {\r\n              fields.map((field) => {\r\n                return <th key={`th_${field.name}`}>{field.label || field.name}</th>;\r\n              })\r\n            }\r\n            <th>{actionColumnHeader}</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n            items.map(renderTableRow)\r\n          }\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (\r\n      pagination?.type === 'infinite-scroll'\r\n      && document.body.clientHeight <= window.innerHeight\r\n      && pagination?.hasNextPage\r\n    ) {\r\n      paginationCallbacks.nextPage();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  if (pagination?.type === 'infinite-scroll') {\r\n    return (\r\n      <InfiniteScroll\r\n        dataLength={items.length}\r\n        next={callbacks.getNextPage || (() => null)}\r\n        hasMore={pagination?.hasNextPage || false}\r\n        loader={<InfiniteLoader />}\r\n      >\r\n        {renderTableContent()}\r\n      </InfiniteScroll>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"table-wrapper\">\r\n      {renderTableContent()}\r\n      {\r\n        pagination &&\r\n        pagination.type === 'buttons' &&\r\n        <Pagination\r\n          callbacks={paginationCallbacks}\r\n          pagination={pagination}\r\n          customLabels={customLabels}\r\n        ></Pagination>\r\n      }\r\n    </div >\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport Skeleton from 'react-loading-skeleton';\r\n\r\nimport { IConfigDisplayField, IConfigCustomAction, ICustomLabels } from '../../common/models/config.model';\r\nimport { IPaginationState } from '../../common/models/states.model';\r\nimport { dataHelpers } from '../../helpers/data.helpers';\r\nimport { Button } from '../button/button.comp';\r\nimport { Pagination } from '../pagination/pagination.comp';\r\n\r\nimport './cards.scss';\r\n\r\ninterface IProps {\r\n  items: any[]\r\n  pagination?: IPaginationState\r\n  callbacks: {\r\n    delete: ((item: any) => void) | null\r\n    put: ((item: any) => void) | null\r\n    action: (item: any, action: IConfigCustomAction) => void\r\n    getNextPage: (() => void) | null\r\n    getPreviousPage: (() => void) | null\r\n  }\r\n  fields: IConfigDisplayField[]\r\n  customActions?: IConfigCustomAction[]\r\n  customLabels?: ICustomLabels\r\n}\r\n\r\nexport const Cards = ({ items, fields, callbacks, customActions, customLabels, pagination }: IProps) => {\r\n  const editLabel: string = customLabels?.buttons?.editItem || 'Edit';\r\n  const deleteLabel: string = customLabels?.buttons?.deleteItem || 'Delete';\r\n  const paginationCallbacks = {\r\n    nextPage: callbacks.getNextPage || (() => { return; }),\r\n    previousPage: callbacks.getPreviousPage || (() => { return; }),\r\n  };\r\n\r\n  function renderRow(origField: IConfigDisplayField, origItem: any, value: any) {\r\n    if (origField.type === 'boolean') {\r\n      value = value ? true : false;\r\n    }\r\n\r\n    if (value && typeof value === 'object') {\r\n      return 'object';\r\n    }\r\n\r\n    switch (origField.type) {\r\n      case 'text':\r\n        return <span>{value}</span>;\r\n      case 'boolean':\r\n        return <div className={`bool ${value ? 'true' : 'false'}`}></div>;\r\n      case 'image':\r\n        if (!value) {\r\n          return <React.Fragment></React.Fragment>;\r\n        }\r\n        return <img src={value || ''} alt={value || origField.label || origField.name} />;\r\n      case 'url':\r\n        let url: string = origField.url || value || '';\r\n\r\n        // Replace all url vars\r\n        fields.forEach((field) => {\r\n          const fieldValue = dataHelpers.extractDataByDataPath(origItem, field.dataPath, field.name);\r\n          url = url.replace(`:${field.name}`, fieldValue);\r\n        });\r\n\r\n        return <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{origField.urlLabel || value}</a>;\r\n      case 'colorbox':\r\n        return <div className=\"colorbox\" style={{ backgroundColor: value }}></div>;\r\n      case 'html':\r\n        const htmlCode = origField.htmlCode || '<span>{value}</span>';\r\n        const html =  htmlCode.replace('{value}', value);\r\n        return <div dangerouslySetInnerHTML={{__html: html}}></div>\r\n      default:\r\n        return value;\r\n    }\r\n  }\r\n\r\n  function renderActions(item: any, cardIdx: number) {\r\n    return (\r\n      <div className=\"actions-wrapper\">\r\n        {\r\n          callbacks.put &&\r\n          <Button onClick={() => callbacks.put?.(item)} title={editLabel}>\r\n            <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i>\r\n          </Button>\r\n        }\r\n        {\r\n          (customActions && customActions.length > 0) &&\r\n          customActions.map((action, idx) => (\r\n            <Button key={`action_${cardIdx}_${idx}`} onClick={() => callbacks.action(item, action)} title={action.name}>\r\n              <i className={`fa fa-${action.icon || 'cogs'}`} aria-hidden=\"true\"></i>\r\n            </Button>\r\n          ))\r\n        }\r\n        {\r\n          callbacks.delete &&\r\n          <Button onClick={() => callbacks.delete?.(item)} title={deleteLabel}>\r\n            <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n          </Button>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function renderCard(item: any, cardIdx: number) {\r\n    return (\r\n      <div className=\"card\" key={`card_${cardIdx}`}>\r\n        {\r\n          fields.map((field, fieldIdx) => {\r\n            const value = dataHelpers.extractDataByDataPath(item, field.dataPath, field.name);\r\n            return (\r\n              <div className={`card-row ${field.type}`} key={`card_${cardIdx}_${fieldIdx}`}>\r\n                {\r\n                  field.type !== 'image' &&\r\n                  <label>{field.label || field.name}: </label>\r\n                }\r\n                {renderRow(field, item, value)}\r\n              </div>\r\n            );\r\n          })\r\n        }\r\n        {renderActions(item, cardIdx)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function renderCardSkeleton(cardIdx: number) {\r\n    return (\r\n      <div className=\"card\" key={`card_${cardIdx}`}>\r\n        {\r\n          fields.map((field, fieldIdx) => {\r\n            return (\r\n              <div className={`card-row ${field.type}`} key={`card_${cardIdx}_${fieldIdx}`}>\r\n                {\r\n                  field.type !== 'image' &&\r\n                  <label>{field.label || field.name}: </label>\r\n                }\r\n                <Skeleton duration={0.6} />\r\n              </div>\r\n            );\r\n          })\r\n        }\r\n        {renderActions({}, cardIdx)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function renderSkeletons() {\r\n    const startingIndex = items.length;\r\n    const skeletonsIndexes = Array.from(Array(pagination?.limit).keys()).map(value => value + startingIndex);\r\n    return skeletonsIndexes.map(renderCardSkeleton);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (\r\n      pagination?.type === 'infinite-scroll'\r\n      && document.body.clientHeight <= window.innerHeight\r\n      && callbacks.getNextPage\r\n      && pagination?.hasNextPage\r\n    ) {\r\n      callbacks.getNextPage();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  if (pagination?.type === 'infinite-scroll') {\r\n    return (\r\n      <InfiniteScroll className=\"cards-wrapper\"\r\n        dataLength={items.length}\r\n        next={callbacks.getNextPage || (() => null)}\r\n        hasMore={pagination?.hasNextPage || false}\r\n        loader={renderSkeletons()}\r\n      >\r\n        {items.map(renderCard)}\r\n      </InfiniteScroll>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"cards-wrapper\">\r\n        {items.map(renderCard)}\r\n      </div>\r\n      {\r\n        pagination &&\r\n        pagination.type === 'buttons' &&\r\n        <Pagination\r\n          callbacks={paginationCallbacks}\r\n          pagination={pagination}\r\n        ></Pagination>\r\n      }\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { orderBy } from \"natural-orderby\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nimport {\r\n  IConfigInputField,\r\n  IConfigOptionSource,\r\n  ICustomLabels,\r\n} from \"../../common/models/config.model\";\r\nimport { Button } from \"../button/button.comp\";\r\nimport { withAppContext } from \"../withContext/withContext.comp\";\r\nimport { IAppContext } from \"../app.context\";\r\nimport { dataHelpers } from \"../../helpers/data.helpers\";\r\nimport locale from \"../../common/locale.js\";\r\n\r\nimport \"./formRow.scss\";\r\n\r\ninterface IProps {\r\n  context: IAppContext;\r\n  field: IConfigInputField;\r\n  onChange: (\r\n    fieldName: string,\r\n    value: any,\r\n    submitAfterChange?: boolean\r\n  ) => void;\r\n  showReset?: boolean;\r\n  direction?: \"row\" | \"column\";\r\n}\r\n\r\nexport const FormRow = withAppContext(\r\n  ({ context, field, direction, showReset, onChange }: IProps) => {\r\n    const [optionSources, setOptionSources] = useState<any>({});\r\n    const { httpService, activePage, config } = context;\r\n    const pageHeaders: any = activePage?.requestHeaders || {};\r\n    const customLabels: ICustomLabels | undefined = {\r\n      ...config?.customLabels,\r\n      ...activePage?.customLabels,\r\n    };\r\n    const addArrayItemLabel = customLabels?.buttons?.addArrayItem || \"Add Item\";\r\n    const clearLabel = customLabels?.buttons?.clearInput || \"Clear\";\r\n\r\n    async function loadOptionSourceFromRemote(\r\n      fieldName: string,\r\n      optionSource: IConfigOptionSource\r\n    ) {\r\n      try {\r\n        const { url, dataPath, actualMethod, requestHeaders } = optionSource;\r\n\r\n        if (!url) {\r\n          throw new Error(\r\n            `URL option source (for field \"${fieldName}\") is empty.`\r\n          );\r\n        }\r\n\r\n        const result = await httpService.fetch({\r\n          method: actualMethod || \"get\",\r\n          origUrl: url,\r\n          queryParams: [],\r\n          headers: Object.assign({}, pageHeaders, requestHeaders || {}),\r\n        });\r\n\r\n        const extractedData = dataHelpers.extractDataByDataPath(\r\n          result,\r\n          dataPath\r\n        );\r\n\r\n        if (!extractedData || !extractedData.length) {\r\n          throw new Error(\r\n            `Option source data is empty (for field \"${fieldName}\")`\r\n          );\r\n        }\r\n\r\n        // Map option source to fields\r\n        const optionSourceData = extractedData.map(\r\n          (option: any, idx: number) => {\r\n            const { valuePath, displayPath } = optionSource;\r\n\r\n            if (typeof option === \"string\") {\r\n              return option;\r\n            }\r\n\r\n            return {\r\n              display:\r\n                displayPath && option[displayPath]\r\n                  ? option[displayPath]\r\n                  : `Option ${idx + 1}`,\r\n              value:\r\n                valuePath && option[valuePath] ? option[valuePath] : `${idx}`,\r\n            };\r\n          }\r\n        );\r\n\r\n        setOptionSources({\r\n          ...optionSources,\r\n          [fieldName]: optionSourceData,\r\n        });\r\n      } catch (e) {\r\n        toast.error(e.message, {\r\n          position: toast.POSITION.TOP_CENTER,\r\n        });\r\n      }\r\n    }\r\n\r\n    function addItemToFieldArray(e: any, originalField: IConfigInputField) {\r\n      e.preventDefault();\r\n\r\n      onChange(field.name, [...(originalField.value || []), \"\"]);\r\n    }\r\n\r\n    function removeItemToFieldArray(\r\n      originalField: IConfigInputField,\r\n      idx: number\r\n    ) {\r\n      const updatedArray = [...(originalField.value || [])];\r\n\r\n      updatedArray.splice(idx, 1);\r\n\r\n      onChange(field.name, updatedArray);\r\n    }\r\n\r\n    function renderArrayItems(originalField: IConfigInputField) {\r\n      const array: any[] = originalField.value || [];\r\n\r\n      return (\r\n        <div className=\"array-form\">\r\n          {array.map((item, itemIdx) => {\r\n            const inputField = renderFieldInput(\r\n              {\r\n                value: item,\r\n                name: `${originalField.name}.${itemIdx}`,\r\n              } as IConfigInputField,\r\n              (fieldName, value) => {\r\n                const updatedArray = (originalField.value || []).map(\r\n                  (localValue: any, idx: number) => {\r\n                    if (idx === itemIdx) {\r\n                      return value;\r\n                    }\r\n                    return localValue;\r\n                  }\r\n                );\r\n\r\n                onChange(originalField.name, updatedArray);\r\n              }\r\n            );\r\n\r\n            return (\r\n              <div className=\"array-form-item\" key={`array_form_${itemIdx}`}>\r\n                {inputField}\r\n                <i\r\n                  title={clearLabel}\r\n                  onClick={() => removeItemToFieldArray(originalField, itemIdx)}\r\n                  aria-label=\"Remove\"\r\n                  className=\"clear-input fa fa-times\"\r\n                ></i>\r\n              </div>\r\n            );\r\n          })}\r\n          <Button\r\n            className=\"add-array-item\"\r\n            onClick={(e) => addItemToFieldArray(e, originalField)}\r\n            title={addArrayItemLabel}\r\n          >\r\n            <i className=\"fa fa-plus\" aria-hidden=\"true\"></i>\r\n          </Button>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    function renderFieldInput(\r\n      field: IConfigInputField,\r\n      changeCallback: (\r\n        fieldName: string,\r\n        value: any,\r\n        submitAfterChange?: boolean\r\n      ) => void\r\n    ) {\r\n      const inputProps = (defaultPlaceholder: string = \"\") => {\r\n        return {\r\n          value: field.value,\r\n          placeholder: field.placeholder || defaultPlaceholder,\r\n          disabled: field.readonly,\r\n          required: field.required,\r\n          onChange: (e: any) => changeCallback(field.name, e.target.value),\r\n        };\r\n      };\r\n\r\n      switch (field.type) {\r\n        case \"boolean\":\r\n          return (\r\n            <input\r\n              type=\"checkbox\"\r\n              {...inputProps()}\r\n              checked={field.value}\r\n              onChange={(e) =>\r\n                changeCallback(field.name, e.target.checked, true)\r\n              }\r\n            />\r\n          );\r\n        case \"select\": {\r\n          const { optionSource } = field;\r\n\r\n          if (optionSource && !optionSources[field.name]) {\r\n            loadOptionSourceFromRemote(field.name, optionSource);\r\n            return (\r\n              <select {...inputProps()}>\r\n                <option>-- Loading Options... --</option>\r\n              </select>\r\n            );\r\n          }\r\n\r\n          const sortBy = field.optionSource?.sortBy;\r\n          const finalOptions: { value: string; display: string }[] =\r\n            optionSources[field.name] || field.options || [];\r\n          const sortedOptions = orderBy(\r\n            finalOptions,\r\n            typeof sortBy === \"string\" ? [sortBy] : sortBy || []\r\n          );\r\n\r\n          return (\r\n            <select {...inputProps()}>\r\n              <option>{locale.select}</option>\r\n              {sortedOptions.map((option, idx) => {\r\n                const key = `option_${idx}_`;\r\n                if (typeof option !== \"object\") {\r\n                  return (\r\n                    <option key={`${key}_${option}`} value={option}>\r\n                      {option}\r\n                    </option>\r\n                  );\r\n                }\r\n                return (\r\n                  <option key={`${key}_${option.value}`} value={option.value}>\r\n                    {option.display || option.value}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          );\r\n        }\r\n        case \"object\":\r\n          return (\r\n            <textarea\r\n              {...inputProps(\r\n                customLabels?.placeholders?.object || \"Enter JSON...\"\r\n              )}\r\n            ></textarea>\r\n          );\r\n        case \"array\": {\r\n          const { arrayType, value } = field;\r\n          if (!value || !arrayType || arrayType === \"object\") {\r\n            return (\r\n              <textarea\r\n                {...inputProps(\r\n                  customLabels?.placeholders?.array || \"Enter JSON array...\"\r\n                )}\r\n              ></textarea>\r\n            );\r\n          }\r\n          return renderArrayItems(field);\r\n        }\r\n        case \"long-text\":\r\n          return (\r\n            <textarea\r\n              {...inputProps(\r\n                customLabels?.placeholders?.text || locale.enter_text\r\n              )}\r\n            ></textarea>\r\n          );\r\n        case \"number\":\r\n        case \"integer\":\r\n          return (\r\n            <input\r\n              type=\"number\"\r\n              {...inputProps(customLabels?.placeholders?.number || \"0\")}\r\n              onChange={(e) =>\r\n                changeCallback(field.name, e.target.valueAsNumber)\r\n              }\r\n            />\r\n          );\r\n        case \"color\":\r\n          return (\r\n            <input\r\n              type=\"color\"\r\n              {...inputProps(\r\n                customLabels?.placeholders?.color || locale.enter_color\r\n              )}\r\n            />\r\n          );\r\n        case \"email\":\r\n          return (\r\n            <input\r\n              type=\"email\"\r\n              {...inputProps(\r\n                customLabels?.placeholders?.email || locale.enter_email\r\n              )}\r\n            />\r\n          );\r\n        case \"password\":\r\n          return (\r\n            <input\r\n              type=\"password\"\r\n              {...inputProps(\r\n                customLabels?.placeholders?.password || locale.enter_password\r\n              )}\r\n            />\r\n          );\r\n        case \"hidden\":\r\n          return <input type=\"hidden\" value={field.value} />;\r\n        case \"file\":\r\n          return (\r\n            <input\r\n              type=\"file\"\r\n              accept={field.accept || \"*\"}\r\n              placeholder={\r\n                field.placeholder ||\r\n                customLabels?.placeholders?.file ||\r\n                \"Select file...\"\r\n              }\r\n              name={field.name || \"file\"}\r\n              disabled={field.readonly}\r\n              required={field.required}\r\n            />\r\n          );\r\n        case \"note\":\r\n          return <p className=\"note\">{field.value}</p>;\r\n        case \"date\":\r\n          return (\r\n            <input\r\n              type=\"date\"\r\n              {...inputProps(\r\n                customLabels?.placeholders?.date || locale.enter_date\r\n              )}\r\n            />\r\n          );\r\n        case \"text\":\r\n        default:\r\n          return (\r\n            <input\r\n              type=\"text\"\r\n              {...inputProps(\r\n                customLabels?.placeholders?.text || locale.enter_text\r\n              )}\r\n            />\r\n          );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className={`form-row ${direction || \"row\"}`}>\r\n        {field.type !== \"hidden\" && (\r\n          <label>\r\n            {field.label || field.originalName}\r\n            {field.required ? \" *\" : \"\"}\r\n          </label>\r\n        )}\r\n        {renderFieldInput(field, onChange)}\r\n        {showReset &&\r\n          !field.readonly &&\r\n          field.value &&\r\n          field.value.length > 0 && (\r\n            <i\r\n              title={clearLabel}\r\n              onClick={() => onChange(field.name, \"\", true)}\r\n              aria-label=\"Clear\"\r\n              className=\"clear-input fa fa-times\"\r\n            ></i>\r\n          )}\r\n        <ToastContainer />\r\n      </div>\r\n    );\r\n  }\r\n);\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport {\r\n  IConfigInputField,\r\n  IConfigPagination,\r\n} from \"../../common/models/config.model\";\r\nimport { FormRow } from \"../formRow/formRow.comp\";\r\nimport { Button } from \"../button/button.comp\";\r\nimport locale from \"../../common/locale.js\";\r\n\r\nimport \"./queryParams.scss\";\r\n\r\ninterface IProps {\r\n  initialParams: IConfigInputField[];\r\n  paginationConfig?: IConfigPagination;\r\n  submitCallback: (queryParams: IConfigInputField[], reset?: boolean) => void;\r\n}\r\n\r\nexport const QueryParams = ({\r\n  initialParams,\r\n  paginationConfig,\r\n  submitCallback,\r\n}: IProps) => {\r\n  const [queryParams, setQueryParams] = useState<IConfigInputField[]>(\r\n    initialParams\r\n  );\r\n\r\n  function submit(e?: any) {\r\n    if (e) {\r\n      e.preventDefault();\r\n    }\r\n    if (paginationConfig && paginationConfig.type === \"infinite-scroll\") {\r\n      submitCallback(queryParams, true);\r\n    } else {\r\n      submitCallback(queryParams);\r\n    }\r\n  }\r\n\r\n  function formChanged(\r\n    fieldName: string,\r\n    value: any,\r\n    submitAfterChange?: boolean\r\n  ) {\r\n    const updatedQueryParams: IConfigInputField[] = [...queryParams].map(\r\n      (field) => {\r\n        if (field.name === fieldName) {\r\n          field.value = value;\r\n        }\r\n        return field;\r\n      }\r\n    );\r\n    setQueryParams(updatedQueryParams);\r\n    if (submitAfterChange) {\r\n      submit();\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (paginationConfig && paginationConfig.type === \"infinite-scroll\") {\r\n      const filteredParams = initialParams.filter(\r\n        (param) => ![\"page\", \"limit\"].includes(param.name)\r\n      );\r\n      setQueryParams(filteredParams);\r\n    } else {\r\n      setQueryParams(initialParams);\r\n    }\r\n  }, [paginationConfig, initialParams]);\r\n  if (!queryParams.length) {\r\n    return <React.Fragment></React.Fragment>;\r\n  }\r\n\r\n  return (\r\n    <section className=\"query-params-form\">\r\n      <h5>{locale.search}</h5>\r\n      <form onSubmit={submit}>\r\n        {queryParams.map((queryParam, idx) => {\r\n          if (queryParam.name == \"page\") return \"\";\r\n          //if (queryParam.hidden) return \"\";\r\n          return (\r\n            <FormRow\r\n              key={`query_param_${idx}`}\r\n              field={queryParam}\r\n              onChange={formChanged}\r\n              showReset={!queryParam.type || queryParam.type === \"text\"}\r\n            />\r\n          );\r\n        })}\r\n        <Button type=\"submit\" onClick={submit}>\r\n          {locale.submit}\r\n        </Button>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n","import React, { Component, RefObject, ReactChild } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './popup.scss';\r\nimport { ICustomLabels } from '../../common/models/config.model';\r\n\r\ninterface IPopupProps {\r\n  className?: string\r\n  style?: any\r\n  show: boolean\r\n  closeCallback: any\r\n  children: ReactChild\r\n  refCallback?: string | ((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null | undefined\r\n  customLabels?: ICustomLabels\r\n}\r\n\r\nlet portalRoot: HTMLDivElement = document.getElementById('popup-portal') as HTMLDivElement;\r\nif (!portalRoot) {\r\n  portalRoot = document.createElement('div');\r\n  portalRoot.setAttribute('id', 'popup-portal');\r\n  document.body.append(portalRoot);\r\n}\r\n\r\nclass PortalPopup extends Component {\r\n  private el: HTMLElement;\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.el = document.createElement('div');\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    portalRoot.appendChild(this.el);\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    portalRoot.removeChild(this.el);\r\n  }\r\n\r\n  render() {\r\n    return ReactDOM.createPortal(this.props.children, this.el);\r\n  }\r\n}\r\n\r\nexport class Popup extends Component<IPopupProps> {\r\n  render() {\r\n    const style: any = Object.assign({}, { display: this.props.show ? 'block' : 'none' }, this.props.style || {});\r\n    const closeLabel = this.props.customLabels?.buttons?.closeForm || 'Close';\r\n\r\n    return (\r\n      <PortalPopup>\r\n        {\r\n          this.props.show ?\r\n            <div className={`popup ${this.props.className || ''}`} style={style}>\r\n              <div className=\"overlay\" onClick={(e: any) => this.props.closeCallback(e)}></div>\r\n              <div className=\"popup-content\" ref={this.props.refCallback}>\r\n                {this.props.children}\r\n                <button title={closeLabel} className=\"close-popup\" onClick={(e: any) => this.props.closeCallback(e)}>\r\n                  <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n                </button>\r\n              </div>\r\n            </div> :\r\n            null\r\n        }\r\n      </PortalPopup>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('keydown', this._handleKeyDown.bind(this));\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('keydown', this._handleKeyDown.bind(this));\r\n  }\r\n\r\n  _handleKeyDown = (e: KeyboardEvent) => {\r\n    const { show, closeCallback } = this.props;\r\n\r\n    if (show && e.keyCode === 27) {\r\n      closeCallback(e);\r\n    }\r\n  }\r\n};","import { IConfigInputField } from '../common/models/config.model';\r\n\r\nclass FileHelpers {\r\n\r\n  public isMultipartForm(fields: IConfigInputField[]): boolean {\r\n    for (const fieldIndex in fields) {\r\n      let field = fields[fieldIndex];\r\n\r\n      if (field.type === 'file') {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  \r\n}\r\n\r\nexport const fileHelpers = new FileHelpers();","import React, { useState, useEffect } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nimport { Popup } from \"../popup/popup.comp\";\r\nimport {\r\n  IConfigInputField,\r\n  IConfigGetSingleMethod,\r\n  IConfigPostMethod,\r\n  IConfigPutMethod,\r\n  ICustomLabels,\r\n  IQueryParam,\r\n} from \"../../common/models/config.model\";\r\nimport { FormRow } from \"../formRow/formRow.comp\";\r\nimport { Button } from \"../button/button.comp\";\r\nimport { Loader } from \"../loader/loader.comp\";\r\nimport { dataHelpers } from \"../../helpers/data.helpers\";\r\nimport { fileHelpers } from \"../../helpers/file.helpers\";\r\nimport { IAppContext } from \"../app.context\";\r\nimport { withAppContext } from \"../withContext/withContext.comp\";\r\nimport locale from \"../../common/locale\";\r\n\r\nimport \"./formPopup.scss\";\r\n\r\nconst unflatten = require(\"flat\").unflatten;\r\n\r\ninterface IProps {\r\n  context: IAppContext;\r\n  title: string;\r\n  fields: IConfigInputField[];\r\n  rawData?: any;\r\n  getSingleConfig?: IConfigGetSingleMethod;\r\n  methodConfig: IConfigPostMethod | IConfigPutMethod;\r\n  closeCallback: (reloadData: boolean) => void;\r\n  submitCallback: (\r\n    body: any,\r\n    containFiles: boolean,\r\n    queryParams: IQueryParam[]\r\n  ) => void;\r\n}\r\n\r\nexport const FormPopup = withAppContext(\r\n  ({\r\n    context,\r\n    title,\r\n    fields,\r\n    rawData,\r\n    getSingleConfig,\r\n    methodConfig,\r\n    submitCallback,\r\n    closeCallback,\r\n  }: IProps) => {\r\n    const fieldsCopy: IConfigInputField[] = JSON.parse(JSON.stringify(fields));\r\n    const { httpService, activePage, config } = context;\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const [formFields, setFormFields] = useState<IConfigInputField[]>([]);\r\n    const [finalRawData, setFinalRawData] = useState<any>(null);\r\n    const pageHeaders: any = activePage?.requestHeaders || {};\r\n    const customLabels: ICustomLabels | undefined = {\r\n      ...config?.customLabels,\r\n      ...activePage?.customLabels,\r\n    };\r\n\r\n    async function initFormFields() {\r\n      let finalRawData: any = rawData || {};\r\n\r\n      if (getSingleConfig && getSingleConfig.url) {\r\n        try {\r\n          const {\r\n            url,\r\n            requestHeaders,\r\n            actualMethod,\r\n            dataPath,\r\n            queryParams,\r\n            responseType,\r\n            dataTransform,\r\n          } = getSingleConfig;\r\n          const result = await httpService.fetch({\r\n            method: actualMethod || \"get\",\r\n            origUrl: url,\r\n            queryParams,\r\n            headers: Object.assign({}, pageHeaders, requestHeaders || {}),\r\n            rawData,\r\n            responseType,\r\n          });\r\n\r\n          let extractedData = dataHelpers.extractDataByDataPath(\r\n            result,\r\n            dataPath\r\n          );\r\n\r\n          if (typeof dataTransform === \"function\") {\r\n            extractedData = await dataTransform(extractedData);\r\n          }\r\n\r\n          if (\r\n            extractedData &&\r\n            (typeof extractedData === \"object\" ||\r\n              typeof extractedData === \"string\")\r\n          ) {\r\n            finalRawData = extractedData;\r\n          }\r\n        } catch (e) {\r\n          console.error(\"Could not load single item's data.\", e);\r\n          toast.error(\"Could not load single item's data.\", {\r\n            position: toast.POSITION.TOP_CENTER,\r\n          });\r\n        }\r\n      }\r\n\r\n      setFinalRawData(finalRawData); // Store the raw data for later.\r\n\r\n      setFormFields(\r\n        fieldsCopy.map((field) => {\r\n          let key = field.name;\r\n\r\n          field.originalName = field.name;\r\n\r\n          let dataPathSplit: string[] = [];\r\n\r\n          if (field.dataPath) {\r\n            dataPathSplit = field.dataPath.split(\".\");\r\n            key = `${field.dataPath}.${field.name}`;\r\n          }\r\n\r\n          const lookup = () => {\r\n            let objToLookIn = finalRawData;\r\n            for (const pathElem of dataPathSplit) {\r\n              if (\r\n                objToLookIn[pathElem] !== undefined &&\r\n                objToLookIn[pathElem] !== null\r\n              ) {\r\n                objToLookIn = objToLookIn[pathElem];\r\n              } else {\r\n                return undefined;\r\n              }\r\n            }\r\n            return objToLookIn[field.name];\r\n          };\r\n\r\n          const lookupValue = lookup();\r\n\r\n          // Changing field name to include datapath\r\n          // This will use us later for unflatten the final object\r\n          field.name = key;\r\n\r\n          if (dataHelpers.checkIfFieldIsObject(field)) {\r\n            if (lookupValue || field.value) {\r\n              field.value =\r\n                JSON.stringify(lookupValue || field.value, null, \"  \") || \"\";\r\n            }\r\n            return field;\r\n          }\r\n\r\n          if (field.type === \"array\") {\r\n            field.value = lookupValue || field.value || [];\r\n            return field;\r\n          }\r\n\r\n          if (typeof lookupValue !== \"undefined\") {\r\n            field.value = lookupValue;\r\n          } else {\r\n            // important in order to prevent controlled / uncontrolled components error\r\n            field.value = typeof field.value === \"undefined\" ? \"\" : field.value;\r\n          }\r\n\r\n          if (\r\n            (field.type === \"long-text\" || field.type === \"text\") &&\r\n            typeof finalRawData === \"string\"\r\n          ) {\r\n            field.value = finalRawData;\r\n          }\r\n\r\n          return field;\r\n        })\r\n      );\r\n\r\n      setLoading(false);\r\n    }\r\n\r\n    async function submitForm(e: any) {\r\n      e.preventDefault();\r\n\r\n      const finalObject: any = (methodConfig as IConfigPutMethod)\r\n        .includeOriginalFields\r\n        ? Object.assign({}, finalRawData)\r\n        : {};\r\n      const formData = new FormData();\r\n      const containFiles: boolean = fileHelpers.isMultipartForm(formFields);\r\n      let validationError = null;\r\n\r\n      var queryParams: IQueryParam[] = [];\r\n\r\n      formFields.forEach((field) => {\r\n        if (field.type === \"file\") {\r\n          const fileInput: any = document.querySelector(\r\n            `input[name=\"${field.name || \"file\"}\"]`\r\n          ) as HTMLInputElement;\r\n\r\n          if (fileInput.files.length > 0) {\r\n            const firstFile = fileInput.files[0];\r\n            formData.append(field.name || \"file\", firstFile, firstFile.name);\r\n          }\r\n          return;\r\n        }\r\n\r\n        finalObject[field.name] = field.value;\r\n\r\n        if (containFiles && !field.useInUrl) {\r\n          formData.append(field.name, field.value);\r\n        }\r\n\r\n        // eslint-disable-next-line eqeqeq\r\n        if (\r\n          field.required &&\r\n          field.type !== \"boolean\" &&\r\n          !field.value &&\r\n          field.value != 0\r\n        ) {\r\n          validationError = \"Please fill up all required fields.\";\r\n        }\r\n\r\n        if (dataHelpers.checkIfFieldIsObject(field) && field.value) {\r\n          try {\r\n            finalObject[field.name] = JSON.parse(field.value);\r\n          } catch (e) {\r\n            validationError = `Invalid JSON for field \"${field.name}\".`;\r\n          }\r\n        }\r\n\r\n        if (field.type === \"boolean\") {\r\n          finalObject[field.name] = field.value || false;\r\n        }\r\n\r\n        if (field.type === \"encode\") {\r\n          finalObject[field.name] = encodeURIComponent(field.value);\r\n        }\r\n\r\n        if (field.useInUrl) {\r\n          queryParams.push({ name: field.name, value: field.value });\r\n        }\r\n      });\r\n\r\n      if (validationError) {\r\n        toast.error(validationError, {\r\n          position: toast.POSITION.TOP_CENTER,\r\n        });\r\n        return;\r\n      }\r\n\r\n      setLoading(true);\r\n\r\n      try {\r\n        const body = containFiles ? formData : unflatten(finalObject);\r\n        await submitCallback(body, containFiles, queryParams);\r\n\r\n        toast.success(\"Great Success!\", {\r\n          position: toast.POSITION.TOP_CENTER,\r\n        });\r\n\r\n        closeCallback(true);\r\n      } catch (e) {\r\n        toast.error(e.message, {\r\n          position: toast.POSITION.TOP_CENTER,\r\n        });\r\n      }\r\n\r\n      setLoading(false);\r\n    }\r\n\r\n    function formChanged(fieldName: string, value: any) {\r\n      let updatedFormFields: IConfigInputField[] = JSON.parse(\r\n        JSON.stringify(formFields)\r\n      );\r\n\r\n      updatedFormFields = updatedFormFields.map((field: IConfigInputField) => {\r\n        if (field.name === fieldName) {\r\n          field.value = value;\r\n        }\r\n\r\n        return field;\r\n      });\r\n\r\n      setFormFields(updatedFormFields);\r\n    }\r\n\r\n    useEffect(() => {\r\n      initFormFields();\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n      <Popup\r\n        show={true}\r\n        className=\"form-popup\"\r\n        closeCallback={() => closeCallback(false)}\r\n        customLabels={customLabels}\r\n      >\r\n        <React.Fragment>\r\n          <h2>{title}</h2>\r\n          <section>\r\n            {loading ? (\r\n              <Loader />\r\n            ) : (\r\n              <form onSubmit={submitForm}>\r\n                {formFields.map((field, idx) => {\r\n                  return (\r\n                    <div>\r\n                      <FormRow\r\n                        key={`field_${idx}`}\r\n                        field={field}\r\n                        onChange={formChanged}\r\n                        showReset={!field.type || field.type === \"text\"}\r\n                      />\r\n                      <br />\r\n                      <hr />\r\n                    </div>\r\n                  );\r\n                })}\r\n                <div className=\"buttons-wrapper center\">\r\n                  <Button type=\"submit\" onClick={submitForm} color=\"green\">\r\n                    {locale.submit}\r\n                  </Button>\r\n                </div>\r\n              </form>\r\n            )}\r\n          </section>\r\n          <ToastContainer />\r\n        </React.Fragment>\r\n      </Popup>\r\n    );\r\n  }\r\n);\r\n","import React from 'react';\r\n\r\nimport './filterField.scss';\r\n\r\ninterface IProps {\r\n  onChange: (filter: string) => void\r\n}\r\n\r\nexport const FilterField = ({ onChange }: IProps) => {\r\n  return (\r\n    <section className=\"filter-wrapper\">\r\n      <h5>Filter:</h5>\r\n      <div className=\"form-row\">\r\n        <input type=\"text\" placeholder=\"Search...\" onChange={(e) => onChange(e.target.value.toLowerCase())} />\r\n      </div>\r\n    </section>\r\n  );\r\n};","import { IPaginationState, IQueryPaginationState, IBodyPaginationState } from \"./states.model\";\r\n\r\nexport const isQueryPaginationState = (obj: IPaginationState): obj is IQueryPaginationState => {\r\n    return obj.source === 'query';\r\n}\r\n\r\nexport const isBodyPaginationState = (obj: IPaginationState): obj is IBodyPaginationState => {\r\n    return obj.source === 'body';\r\n}","import { IConfigPagination, IConfigBodyPagination, IConfigQueryPagination } from \"./config.model\";\r\n\r\nexport const isQueryPagination = (obj: IConfigPagination): obj is IConfigQueryPagination => {\r\n    return obj.source === 'query';\r\n}\r\n\r\nexport const isBodyPagination = (obj: IConfigPagination): obj is IConfigBodyPagination => {\r\n    return obj.source === 'body';\r\n}\r\n","import React, { Component, useState, useEffect } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport {\r\n  XYPlot,\r\n  XAxis,\r\n  YAxis,\r\n  VerticalGridLines,\r\n  HorizontalGridLines,\r\n  LineMarkSeries,\r\n  Hint,\r\n} from \"react-vis\";\r\nimport \"react-vis/dist/style.css\";\r\n\r\nimport { FormRow } from \"../formRow/formRow.comp\";\r\nimport { Button } from \"../button/button.comp\";\r\nimport { Loader } from \"../loader/loader.comp\";\r\nimport { dataHelpers } from \"../../helpers/data.helpers\";\r\nimport { fileHelpers } from \"../../helpers/file.helpers\";\r\nimport { IAppContext } from \"../app.context\";\r\nimport { withAppContext } from \"../withContext/withContext.comp\";\r\n\r\nimport locale, { previous_page } from \"../../common/locale\";\r\n\r\nimport \"./graphHolder.scss\";\r\n//import \"../node_modules/react-vis/dist/style.css\";\r\n\r\ninterface IGraphData {\r\n  nameStruct: string;\r\n  unitMeasure: string;\r\n  dataStruct: any;\r\n}\r\n\r\ninterface IHintData {\r\n  x: string;\r\n  y: string;\r\n}\r\n\r\ninterface IProps {\r\n  dataMat: IGraphData[];\r\n  prev: boolean;\r\n  prevCallback: () => void;\r\n  next: boolean;\r\n  nextCallback: () => void;\r\n  zoomIn: boolean;\r\n  zoomInCallback: () => void;\r\n  zoomOut: boolean;\r\n  zoomOutCallback: () => void;\r\n}\r\n\r\nexport const GraphHolder = withAppContext(\r\n  ({\r\n    dataMat,\r\n    prev,\r\n    prevCallback,\r\n    next,\r\n    nextCallback,\r\n    zoomIn,\r\n    zoomInCallback,\r\n    zoomOut,\r\n    zoomOutCallback,\r\n  }: IProps) => {\r\n    useEffect(() => {\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      setHintData(Array(dataMat.length).fill({ date: \"\", y: \"\" }));\r\n      setHoverData(Array(dataMat.length).fill(false));\r\n    }, []);\r\n\r\n    const [hoverData, setHoverData] = useState<boolean[]>(Array(1).fill(false));\r\n    const [hintData, setHintData] = useState<IHintData[]>(Array(0));\r\n\r\n    function setHoverDataWithIndex(index: number, value: boolean) {\r\n      // 1. Make a shallow copy of the items\r\n      let items = [...hoverData];\r\n      // 2. Make a shallow copy of the item you want to mutate\r\n      let item = items[index];\r\n      // 3. Replace the property you're intested in\r\n      item = value;\r\n      // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\r\n      items[index] = item;\r\n      // 5. Set the state to our new copy\r\n      setHoverData(items);\r\n    }\r\n\r\n    function setHintDataWithIndex(index: number, value: IHintData) {\r\n      // 1. Make a shallow copy of the items\r\n      let items = [...hintData];\r\n      // 2. Make a shallow copy of the item you want to mutate\r\n      let item = items[index];\r\n      // 3. Replace the property you're intested in\r\n      item = value;\r\n      // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\r\n      items[index] = item;\r\n      // 5. Set the state to our new copy\r\n      setHintData(items);\r\n    }\r\n\r\n    return (\r\n      <div className=\"graphHolder\">\r\n        <br />\r\n        <hr />\r\n        <div>\r\n          <Button\r\n            className=\"button-margin\"\r\n            title={locale.previous_page}\r\n            onClick={() => prevCallback()}\r\n            disabled={!prev}\r\n          >\r\n            <i className=\"fa fa-backward\" aria-hidden=\"true\"></i>\r\n          </Button>\r\n\r\n          <Button\r\n            className=\"button-margin\"\r\n            title={locale.next_page}\r\n            onClick={() => nextCallback()}\r\n            disabled={!next}\r\n          >\r\n            <i className=\"fa fa-forward\" aria-hidden=\"true\"></i>\r\n          </Button>\r\n\r\n          <Button\r\n            className=\"button-margin\"\r\n            title={locale.zoomIn}\r\n            onClick={() => zoomInCallback()}\r\n            disabled={!zoomIn}\r\n          >\r\n            <i className=\"fa fa-search-plus\" aria-hidden=\"true\"></i>\r\n          </Button>\r\n\r\n          <Button\r\n            className=\"button-margin\"\r\n            title={locale.zoomOut}\r\n            onClick={() => zoomOutCallback()}\r\n            disabled={!zoomOut}\r\n          >\r\n            <i className=\"fa fa-search-minus\" aria-hidden=\"true\"></i>\r\n          </Button>\r\n        </div>\r\n        <br />\r\n        {dataMat.map((data, index) => {\r\n          return (\r\n            <div>\r\n              <h2>{data.nameStruct}</h2>\r\n              <br />\r\n              <XYPlot\r\n                width={1600}\r\n                height={600}\r\n                xType=\"ordinal\"\r\n                onMouseLeave={() => setHoverDataWithIndex(index, false)}\r\n              >\r\n                <VerticalGridLines />\r\n                <HorizontalGridLines />\r\n                <XAxis\r\n                  title=\"t\"\r\n                  tickTotal={7}\r\n                  //tickLabelAngle={-90}\r\n                  tickFormat={function tickFormat(d) {\r\n                    const date = new Date(+d);\r\n                    return date.toString().substr(4, 6);\r\n                  }}\r\n                />\r\n                <YAxis title={data.unitMeasure} />\r\n                <LineMarkSeries\r\n                  data={data.dataStruct}\r\n                  onValueMouseOver={(d) => {\r\n                    setHoverDataWithIndex(index, true);\r\n                    setHintDataWithIndex(index, {\r\n                      x: d.x.toString(),\r\n                      y: d.y.toString(),\r\n                    });\r\n                    console.log(d);\r\n                  }} //\r\n                />\r\n                {hoverData[index] && (\r\n                  <Hint value={hintData[index]}>\r\n                    <div style={{ background: \"grey\" }}>\r\n                      {\"Start time: \" + new Date(+hintData[index].x).toString()}\r\n                      <br />\r\n                      {locale.value + \": \" + hintData[index].y}\r\n                    </div>\r\n                  </Hint>\r\n                )}\r\n              </XYPlot>\r\n              <br />\r\n              <hr />\r\n              <br />\r\n            </div>\r\n          );\r\n        })}\r\n        <ToastContainer />\r\n      </div>\r\n    );\r\n  }\r\n);\r\n//style={{ fill: \"none\" }}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Popup } from \"../popup/popup.comp\";\r\nimport {\r\n  IConfigInputField,\r\n  IConfigGetSingleMethod,\r\n  IConfigPostMethod,\r\n  IConfigPutMethod,\r\n  ICustomLabels,\r\n  IQueryParam,\r\n  IConfigGetAllMethod,\r\n  IConfigGraphMethod,\r\n} from \"../../common/models/config.model\";\r\nimport { FormRow } from \"../formRow/formRow.comp\";\r\nimport { Button } from \"../button/button.comp\";\r\nimport { Loader } from \"../loader/loader.comp\";\r\nimport { dataHelpers } from \"../../helpers/data.helpers\";\r\nimport { fileHelpers } from \"../../helpers/file.helpers\";\r\nimport { IAppContext } from \"../app.context\";\r\nimport { withAppContext } from \"../withContext/withContext.comp\";\r\nimport locale from \"../../common/locale\";\r\nimport { GraphHolder } from \"../graphHolder/graphHolder\";\r\n\r\nimport \"./graphPopup.scss\";\r\nimport { QueryParams } from \"../queryParams/queryParams.comp\";\r\nimport \"../queryParams/queryParams.scss\";\r\nimport { IFetchParams } from \"../../services/http.service\";\r\nimport { createEmitAndSemanticDiagnosticsBuilderProgram } from \"typescript\";\r\n\r\n//const unflatten = require(\"flat\").unflatten;\r\n\r\ninterface IProps {\r\n  context: IAppContext;\r\n  title: string;\r\n  fields: IConfigInputField[];\r\n\r\n  graphConfig: IConfigGraphMethod;\r\n  closeCallback: (reloadData: boolean) => void;\r\n}\r\n\r\ninterface IGraphData {\r\n  nameStruct: string;\r\n  unitMeasure: string;\r\n  dataStruct: any;\r\n}\r\n\r\nexport const GraphPopup = withAppContext(\r\n  ({ context, title, fields, graphConfig, closeCallback }: IProps) => {\r\n    const fieldsCopy: IConfigInputField[] = JSON.parse(JSON.stringify(fields));\r\n    const { httpService, activePage, config } = context;\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const [doneQuery, setDoneQuery] = useState<boolean>(true);\r\n    const [showGraph, setShowGraph] = useState<boolean>(false);\r\n    const [titleState, setTitleState] = useState<String>(title);\r\n    const [formFields, setFormFields] = useState<IConfigInputField[]>(\r\n      fieldsCopy\r\n    );\r\n    const [graphData, setGraphData] = useState<IGraphData[] | null>();\r\n    const [prevGraphData, setPrevGraphData] = useState<IGraphData[] | null>();\r\n    const [nextGraphData, setNextGraphData] = useState<IGraphData[] | null>();\r\n\r\n    const [next, setNext] = useState<boolean>();\r\n    const [prev, setPrev] = useState<boolean>();\r\n    const [zoomIn, setZoomIn] = useState<boolean>();\r\n    const [zoomOut, setZoomOut] = useState<boolean>(true);\r\n    const [pageNum, setPageNum] = useState<number>(1);\r\n    const [totalPages, setTotalPages] = useState<number>(0);\r\n    const [error, setError] = useState<string>();\r\n\r\n    const [fetchedData, setFetchedData] = useState<null | any>(null);\r\n    const [fetchedFeature, setFetchedFeature] = useState<null | any>(null);\r\n\r\n    const [totalDocs, setTotalDocs] = useState<number>(0);\r\n    const [limit, setLimit] = useState<number>(0);\r\n\r\n    const customLabels: ICustomLabels | undefined = {\r\n      ...config?.customLabels,\r\n      ...activePage?.customLabels,\r\n    };\r\n\r\n    function graphChanged(\r\n      fieldName: string,\r\n      value: any,\r\n      submitAfterChange?: boolean\r\n    ) {\r\n      const updatedQueryParams: IConfigInputField[] = [...formFields].map(\r\n        (formFields) => {\r\n          if (formFields.name === fieldName) {\r\n            formFields.value = value;\r\n          }\r\n          return formFields;\r\n        }\r\n      );\r\n      setFormFields(updatedQueryParams);\r\n      if (submitAfterChange) {\r\n        submitGraph();\r\n      }\r\n    }\r\n\r\n    async function fetchFeatureData(fetchFeatureData: boolean = false) {\r\n      //get the data for the selected feature\r\n      const resultsData = await httpService.fetch({\r\n        method: \"get\",\r\n        origUrl: graphConfig.url,\r\n        queryParams: formFields,\r\n        exactMatch: true,\r\n        headers: { \"content-type\": \"application/json\" },\r\n      });\r\n\r\n      var fF = fetchedFeature;\r\n      if (fetchFeatureData === true) {\r\n        let queryFeature = \"\";\r\n\r\n        //get the name of the selected feature\r\n        formFields.map((f) =>\r\n          f.name === \"feature\" ? (queryFeature = f.value) : {}\r\n        );\r\n\r\n        //fetch the feature\r\n        const resultsFeature = await httpService.fetch({\r\n          method: \"get\",\r\n          origUrl: \"/features/\",\r\n          queryParams: formFields.filter((obj) => {\r\n            return obj.name === \"feature\" && (obj.name = \"_id\");\r\n          }),\r\n          exactMatch: true,\r\n          headers: { \"content-type\": \"application/json\" },\r\n        });\r\n\r\n        formFields.filter((obj) => {\r\n          return obj.name === \"_id\" && (obj.name = \"feature\");\r\n        });\r\n\r\n        //extract the data for the feature\r\n        fF = dataHelpers.extractDataByDataPath(resultsFeature, \"docs\");\r\n      }\r\n\r\n      const pG = resultsData[\"page\"];\r\n\r\n      const tP = resultsData[\"totalPages\"];\r\n\r\n      const tD = resultsData[\"totalDocs\"];\r\n\r\n      const limit = resultsData[\"limit\"];\r\n\r\n      //extract the data for the measurements\r\n      const fD = dataHelpers.extractDataByDataPath(\r\n        resultsData,\r\n        graphConfig.dataPath\r\n      );\r\n\r\n      //return data\r\n      return {\r\n        fetchedData: fD,\r\n        fetchedFeature: fF,\r\n        pageNum: pG,\r\n        totalPages: tP,\r\n        totalDocs: tD,\r\n        limit: limit,\r\n      };\r\n    }\r\n\r\n    function buildData(fetchedData: any, fetchedFeature: any) {\r\n      var goodFeatures = new Array();\r\n      var dataFeatName = new Array<string>();\r\n      var dataFeatUnit = new Array<string>();\r\n\r\n      fetchedFeature.map((ft: any) =>\r\n        ft.items.map((comp: any, index: number) => {\r\n          if (comp.dimension === 0 && comp.type === \"number\") {\r\n            goodFeatures.push(index);\r\n            dataFeatName.push(comp.name);\r\n            dataFeatUnit.push(comp.unit);\r\n          } else return null;\r\n        })\r\n      );\r\n\r\n      if (goodFeatures.length === 0) {\r\n        setLoading(false);\r\n        return null;\r\n      }\r\n\r\n      var dataStruct = new Array(goodFeatures.length);\r\n\r\n      for (var i = 0; i < dataStruct.length; i++) {\r\n        dataStruct[i] = new Array();\r\n      }\r\n\r\n      fetchedData.map((data: any) =>\r\n        data[\"samples\"].map((sample: any) =>\r\n          sample[\"values\"].map((feature: any, indexFeat: number) => {\r\n            if (goodFeatures.includes(indexFeat))\r\n              dataStruct[goodFeatures.indexOf(indexFeat)].push({\r\n                x: Date.parse(data[\"startDate\"]),\r\n                y: feature,\r\n              });\r\n          })\r\n        )\r\n      );\r\n\r\n      var finalData = Array<IGraphData>();\r\n      for (i = 0; i < dataFeatName.length; i++) {\r\n        finalData[i] = {\r\n          nameStruct: dataFeatName[i],\r\n          dataStruct: dataStruct[i].reverse(),\r\n          unitMeasure: dataFeatUnit[i],\r\n        };\r\n      }\r\n\r\n      return finalData;\r\n    }\r\n\r\n    async function buildPrev(\r\n      formFields: IConfigInputField[],\r\n      fetchedFeature: any\r\n    ) {\r\n      var tempField = formFields;\r\n      tempField.filter((obj) => {\r\n        return (\r\n          obj.name === \"page\" && (obj.value = 1 + parseInt(obj.value) + \"\")\r\n        );\r\n      });\r\n\r\n      const resultsData = await httpService.fetch({\r\n        method: \"get\",\r\n        origUrl: graphConfig.url,\r\n        queryParams: tempField,\r\n        exactMatch: true,\r\n        headers: { \"content-type\": \"application/json\" },\r\n      });\r\n      const prData = dataHelpers.extractDataByDataPath(\r\n        resultsData,\r\n        graphConfig.dataPath\r\n      );\r\n\r\n      tempField.filter((obj) => {\r\n        return (\r\n          obj.name === \"page\" && (obj.value = parseInt(obj.value) - 1 + \"\")\r\n        );\r\n      });\r\n\r\n      const pPage = buildData(prData, fetchedFeature);\r\n      return pPage;\r\n    }\r\n    async function buildNext(\r\n      formFields: IConfigInputField[],\r\n      fetchedFeature: any\r\n    ) {\r\n      var tempField = formFields;\r\n      tempField.filter((obj) => {\r\n        return (\r\n          obj.name === \"page\" && (obj.value = parseInt(obj.value) - 1 + \"\")\r\n        );\r\n      });\r\n\r\n      const resultsData = await httpService.fetch({\r\n        method: \"get\",\r\n        origUrl: graphConfig.url,\r\n        queryParams: tempField,\r\n        exactMatch: true,\r\n        headers: { \"content-type\": \"application/json\" },\r\n      });\r\n      const nxData = dataHelpers.extractDataByDataPath(\r\n        resultsData,\r\n        graphConfig.dataPath\r\n      );\r\n\r\n      tempField.filter((obj) => {\r\n        return (\r\n          obj.name === \"page\" && (obj.value = parseInt(obj.value) + 1 + \"\")\r\n        );\r\n      });\r\n\r\n      const nPage = buildData(nxData, fetchedFeature);\r\n      return nPage;\r\n    }\r\n    async function submitGraph() {\r\n      setLoading(true);\r\n      setDoneQuery(true);\r\n\r\n      console.log(\"Entered submitGraph\");\r\n\r\n      const {\r\n        fetchedData,\r\n        fetchedFeature,\r\n        pageNum,\r\n        totalPages,\r\n        totalDocs,\r\n        limit,\r\n      } = await fetchFeatureData(true);\r\n\r\n      setFetchedData(fetchedData);\r\n      setFetchedFeature(fetchedFeature);\r\n      setPageNum(pageNum);\r\n      setTotalPages(totalPages);\r\n      setTotalDocs(totalDocs);\r\n      setLimit(limit);\r\n\r\n      const finalData = buildData(fetchedData, fetchedFeature);\r\n\r\n      if (finalData === null) {\r\n        setError(locale.wrong_feature_error);\r\n        return;\r\n      }\r\n\r\n      if (finalData[0].dataStruct.length === 0) {\r\n        setError(locale.no_data_error);\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      setGraphData(finalData);\r\n\r\n      const next = pageNum > 1;\r\n      const prev = pageNum < totalPages;\r\n\r\n      const zoomIn = limit > 3;\r\n      const zoomOut = limit < totalDocs;\r\n\r\n      setNext(next);\r\n      setPrev(prev);\r\n\r\n      setZoomIn(zoomIn);\r\n      setZoomOut(zoomOut);\r\n\r\n      setShowGraph(true);\r\n\r\n      setTitleState(locale.graph + \" \" + fetchedFeature[0]._id);\r\n\r\n      setLoading(false);\r\n\r\n      var pPage = null;\r\n      var nPage = null;\r\n      if (prev === true) {\r\n        pPage = await buildPrev(formFields, fetchedFeature);\r\n      }\r\n      if (next === true) {\r\n        nPage = await buildNext(formFields, fetchedFeature);\r\n      }\r\n      setPrevGraphData(pPage);\r\n      setNextGraphData(nPage);\r\n    }\r\n\r\n    async function buildMain() {\r\n      const {\r\n        fetchedData,\r\n        pageNum,\r\n        totalPages,\r\n        totalDocs,\r\n        limit,\r\n      } = await fetchFeatureData();\r\n\r\n      console.log(\"Entered BuildMain\");\r\n\r\n      setLoading(true);\r\n\r\n      setPageNum(pageNum);\r\n      setTotalPages(totalPages);\r\n\r\n      const finalData = buildData(fetchedData, fetchedFeature);\r\n\r\n      if (finalData === null) {\r\n        setError(locale.wrong_feature_error);\r\n        return;\r\n      }\r\n\r\n      if (finalData[0].dataStruct.length === 0) {\r\n        setError(locale.no_data_error);\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      setGraphData(finalData);\r\n\r\n      const next = pageNum > 1;\r\n      const prev = pageNum < totalPages;\r\n\r\n      const zoomIn = limit > 3;\r\n      const zoomOut = limit < totalDocs;\r\n\r\n      setNext(next);\r\n      setPrev(prev);\r\n\r\n      setZoomIn(zoomIn);\r\n      setZoomOut(zoomOut);\r\n\r\n      setTotalDocs(totalDocs);\r\n      setLimit(limit);\r\n\r\n      setLoading(false);\r\n\r\n      var pPage = null;\r\n      var nPage = null;\r\n      if (prev === true) {\r\n        pPage = await buildPrev(formFields, fetchedFeature);\r\n      }\r\n      if (next === true) {\r\n        nPage = await buildNext(formFields, fetchedFeature);\r\n      }\r\n      setPrevGraphData(pPage);\r\n      setNextGraphData(nPage);\r\n    }\r\n\r\n    async function prevShifting() {\r\n      setLoading(true);\r\n\r\n      console.log(\"Entered PrevShifting\");\r\n\r\n      setNextGraphData(graphData);\r\n      setGraphData(prevGraphData);\r\n\r\n      setLoading(false);\r\n\r\n      setPrev(pageNum + 1 < totalPages);\r\n      setNext(pageNum + 1 > 1);\r\n      setPageNum(pageNum + 1);\r\n      const prPage = await buildPrev(formFields, fetchedFeature);\r\n\r\n      setPrevGraphData(prPage);\r\n    }\r\n\r\n    async function nextShifting() {\r\n      setLoading(true);\r\n      console.log(\"Entered NextShifting\");\r\n\r\n      setPrevGraphData(graphData);\r\n      setGraphData(nextGraphData);\r\n      setPrev(pageNum - 1 < totalPages);\r\n      setNext(pageNum - 1 > 1);\r\n      setPageNum(pageNum - 1);\r\n      const nxPage = await buildNext(formFields, fetchedFeature);\r\n\r\n      setNextGraphData(nxPage);\r\n    }\r\n\r\n    async function increaseSamples() {\r\n      setLoading(true);\r\n      console.log(\"Entered Increase Sample\");\r\n\r\n      var tempField = formFields;\r\n\r\n      tempField.filter((obj) => {\r\n        return obj.name === \"limit\" && (obj.value = 2 + limit + \"\");\r\n      });\r\n\r\n      setFormFields(tempField);\r\n      buildMain();\r\n      setLoading(false);\r\n    }\r\n\r\n    async function decreaseSamples() {\r\n      setLoading(true);\r\n      console.log(\"Entered Decrease Sample\");\r\n\r\n      var tempField = formFields;\r\n\r\n      tempField.filter((obj) => {\r\n        return obj.name === \"limit\" && (obj.value = limit - 2 + \"\");\r\n      });\r\n\r\n      setFormFields(tempField);\r\n      buildMain();\r\n      setLoading(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n      setLoading(false);\r\n      setDoneQuery(false);\r\n      setShowGraph(false);\r\n    }, []);\r\n\r\n    return (\r\n      <Popup\r\n        show={true}\r\n        className=\"graph-popup\"\r\n        closeCallback={() => closeCallback(false)}\r\n        customLabels={customLabels}\r\n      >\r\n        <React.Fragment>\r\n          <h2>{titleState}</h2>\r\n\r\n          {loading ? (\r\n            <Loader />\r\n          ) : !doneQuery ? (\r\n            <section className=\"query-params-form\">\r\n              <h5>{locale.graph}</h5>\r\n              <form onSubmit={submitGraph}>\r\n                {formFields.map((queryParam, idx) => {\r\n                  if (queryParam.name == \"page\") return \"\";\r\n                  return (\r\n                    <FormRow\r\n                      key={`query_param_${idx}`}\r\n                      field={queryParam}\r\n                      onChange={graphChanged}\r\n                      showReset={!queryParam.type || queryParam.type === \"text\"}\r\n                    />\r\n                  );\r\n                })}\r\n                <Button type=\"submit\" onClick={submitGraph}>\r\n                  {locale.submit}\r\n                </Button>\r\n              </form>\r\n            </section>\r\n          ) : showGraph ? (\r\n            <GraphHolder\r\n              dataMat={graphData}\r\n              prev={prev}\r\n              prevCallback={prevShifting}\r\n              next={next}\r\n              nextCallback={nextShifting}\r\n              zoomIn={zoomIn}\r\n              zoomInCallback={decreaseSamples}\r\n              zoomOut={zoomOut}\r\n              zoomOutCallback={increaseSamples}\r\n            />\r\n          ) : (\r\n            <h1>{error}</h1>\r\n          )}\r\n        </React.Fragment>\r\n      </Popup>\r\n    );\r\n  }\r\n);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport * as QueryString from \"query-string\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { orderBy } from \"natural-orderby\";\r\nimport { find, remove } from \"lodash\";\r\n\r\nimport { IAppContext } from \"../app.context\";\r\nimport {\r\n  IConfigPage,\r\n  IConfigMethods,\r\n  IConfigGetAllMethod,\r\n  IConfigPostMethod,\r\n  IConfigPutMethod,\r\n  IConfigDeleteMethod,\r\n  IConfigInputField,\r\n  IConfigCustomAction,\r\n  IConfigGetSingleMethod,\r\n  ICustomLabels,\r\n  IConfigPagination,\r\n  IConfigGraphMethod,\r\n} from \"../../common/models/config.model\";\r\nimport {\r\n  IPaginationState,\r\n  IQueryPaginationState,\r\n  IBodyPaginationState,\r\n} from \"../../common/models/states.model\";\r\nimport { withAppContext } from \"../withContext/withContext.comp\";\r\nimport { Loader } from \"../loader/loader.comp\";\r\nimport { dataHelpers } from \"../../helpers/data.helpers\";\r\nimport { paginationHelpers } from \"../../helpers/pagination.helpers\";\r\nimport { Table } from \"../table/table.comp\";\r\nimport { Cards } from \"../cards/cards.comp\";\r\nimport { QueryParams } from \"../queryParams/queryParams.comp\";\r\nimport { Button } from \"../button/button.comp\";\r\nimport { FormPopup } from \"../formPopup/formPopup.comp\";\r\nimport { FilterField } from \"../filterField/filterField.comp\";\r\nimport {\r\n  isQueryPaginationState,\r\n  isBodyPaginationState,\r\n} from \"../../common/models/states.types.helper\";\r\nimport {\r\n  isQueryPagination,\r\n  isBodyPagination,\r\n} from \"../../common/models/config.types.helper\";\r\nimport locale from \"../../common/locale.js\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./page.scss\";\r\nimport { GraphPopup } from \"../graphPopup/graphPopup.comp\";\r\n\r\ninterface IProps {\r\n  context: IAppContext;\r\n}\r\n\r\ninterface IPopupProps {\r\n  type: \"add\" | \"update\" | \"action\";\r\n  title: string;\r\n  config: IConfigPostMethod | IConfigPutMethod;\r\n  submitCallback: (body: any, containFiles: boolean) => void;\r\n  getSingleConfig?: IConfigGetSingleMethod;\r\n  rawData?: {};\r\n}\r\n\r\ninterface IGraphProps {\r\n  title: string;\r\n  config: IConfigGraphMethod;\r\n  rawData?: {};\r\n}\r\n\r\nconst buildInitQueryParamsAndPaginationState = (\r\n  initQueryParams: IConfigInputField[],\r\n  paginationConfig?: IConfigPagination\r\n): {\r\n  initQueryParams: IConfigInputField[];\r\n  initialPagination?: IPaginationState;\r\n} => {\r\n  let initialPagination: IPaginationState | undefined = undefined;\r\n\r\n  if (paginationConfig) {\r\n    if (isQueryPagination(paginationConfig)) {\r\n      initialPagination = {\r\n        source: paginationConfig.source,\r\n        type: paginationConfig.type,\r\n        page: parseInt(paginationConfig.params?.page?.value || \"1\"),\r\n        limit: parseInt(paginationConfig.params?.limit?.value || \"10\"),\r\n        descending:\r\n          paginationConfig.params?.descending?.value === \"true\" || false,\r\n        hasPreviousPage: false,\r\n        hasNextPage: false,\r\n        sortBy: paginationConfig.params?.sortBy?.value,\r\n      };\r\n\r\n      if (!find(initQueryParams, { name: \"page\" })) {\r\n        initQueryParams.push({\r\n          name: paginationConfig?.params?.page?.name,\r\n          label: paginationConfig?.params?.page?.label || \"Page\",\r\n          value: initialPagination?.page,\r\n        });\r\n      }\r\n\r\n      if (\r\n        paginationConfig?.params?.limit &&\r\n        !find(initQueryParams, { name: \"limit\" })\r\n      ) {\r\n        initQueryParams.push({\r\n          name: paginationConfig.params.limit.name,\r\n          label: paginationConfig.params.limit.label || \"Limit\",\r\n          value: initialPagination?.limit,\r\n        });\r\n      }\r\n\r\n      if (\r\n        paginationConfig?.params?.descending &&\r\n        !find(initQueryParams, { name: \"descending\" })\r\n      ) {\r\n        initQueryParams.push({\r\n          name: paginationConfig.params.descending.name,\r\n          label: paginationConfig.params.descending.label || \"Descending\",\r\n          value: initialPagination?.descending,\r\n        });\r\n      }\r\n\r\n      if (\r\n        paginationConfig?.params?.sortBy &&\r\n        !find(initQueryParams, { name: \"sortBy\" })\r\n      ) {\r\n        initQueryParams.push({\r\n          name: paginationConfig.params.sortBy.name,\r\n          label: \"Sort by\",\r\n          value: initialPagination?.sortBy,\r\n        });\r\n      }\r\n    } else if (isBodyPagination(paginationConfig)) {\r\n      initialPagination = {\r\n        source: \"body\",\r\n        type: paginationConfig.type,\r\n        hasNextPage: false,\r\n        hasPreviousPage: false,\r\n        next: null,\r\n        previous: null,\r\n        limit: parseInt(paginationConfig.params?.limit?.value || \"10\"),\r\n      };\r\n\r\n      if (\r\n        paginationConfig?.params?.limit &&\r\n        !find(initQueryParams, { name: \"limit\" })\r\n      ) {\r\n        initQueryParams.push({\r\n          name: paginationConfig.params.limit.name,\r\n          label: paginationConfig.params.limit.label || \"Limit\",\r\n          value: initialPagination?.limit,\r\n        });\r\n      }\r\n    } else {\r\n      throw new Error(\"unrecognized pagination\");\r\n    }\r\n  }\r\n\r\n  return {\r\n    initQueryParams,\r\n    initialPagination,\r\n  };\r\n};\r\n\r\nconst PageComp = ({ context }: IProps) => {\r\n  const { page }: any = useParams();\r\n  const { push, location } = useHistory();\r\n  const { activePage, error, setError, httpService, config } = context;\r\n  const pageHeaders: any = activePage?.requestHeaders || {};\r\n  const pageMethods: IConfigMethods | undefined = activePage?.methods;\r\n  const customActions: IConfigCustomAction[] = activePage?.customActions || [];\r\n  const getAllConfig: IConfigGetAllMethod | undefined = pageMethods?.getAll;\r\n  const paginationConfig = getAllConfig?.pagination;\r\n  const infiniteScroll = paginationConfig?.type === \"infinite-scroll\";\r\n  const getSingleConfig: IConfigGetSingleMethod | undefined =\r\n    pageMethods?.getSingle;\r\n  const postConfig: IConfigPostMethod | undefined = pageMethods?.post;\r\n  const graphConfig: IConfigGraphMethod | undefined = pageMethods?.graph;\r\n  const putConfig: IConfigPutMethod | undefined = pageMethods?.put;\r\n  const deleteConfig: IConfigDeleteMethod | undefined = pageMethods?.delete;\r\n  const customLabels: ICustomLabels | undefined = {\r\n    ...config?.customLabels,\r\n    ...activePage?.customLabels,\r\n  };\r\n  const addItemLabel =\r\n    customLabels?.buttons?.addItem ||\r\n    \"+ \" + locale.add + \" \" + activePage?.itemName;\r\n  const openGraphLabel = locale.graph + \" \" + activePage?.itemName;\r\n  const addItemFormTitle =\r\n    customLabels?.formTitles?.addItem ||\r\n    locale.add + \" \" + activePage?.itemName;\r\n  const editItemFormTitle =\r\n    customLabels?.formTitles?.editItem ||\r\n    locale.update + \" \" + activePage?.itemName;\r\n  const graphTitle = locale.graph + \" \" + activePage?.itemName;\r\n  const {\r\n    initQueryParams,\r\n    initialPagination,\r\n  } = buildInitQueryParamsAndPaginationState(\r\n    getAllConfig?.queryParams || [],\r\n    paginationConfig\r\n  );\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [openedPopup, setOpenedPopup] = useState<null | IPopupProps>(null);\r\n  const [openedGraph, setOpenedGraph] = useState<null | IGraphProps>(null);\r\n  const [queryParams, setQueryParams] = useState<IConfigInputField[]>(\r\n    initQueryParams\r\n  );\r\n  const [pagination, setPagination] = useState<IPaginationState | undefined>(\r\n    initialPagination\r\n  );\r\n  const [items, setItems] = useState<any[]>([]);\r\n  const [filter, setFilter] = useState<string>(\"\");\r\n\r\n  function closeFormPopup(refreshData: boolean = false) {\r\n    setOpenedPopup(null);\r\n\r\n    if (refreshData === true) {\r\n      if (pagination?.type === \"infinite-scroll\") {\r\n        setItems([]);\r\n        const updatedParams = [...queryParams];\r\n        remove(updatedParams, (param) =>\r\n          [\"page\", \"limit\"].includes(param.name)\r\n        );\r\n        setQueryParams(\r\n          buildInitQueryParamsAndPaginationState(\r\n            updatedParams,\r\n            paginationConfig\r\n          ).initQueryParams\r\n        );\r\n      } else {\r\n        getAllRequest();\r\n      }\r\n    }\r\n  }\r\n\r\n  function closeGraph(refreshData: boolean = false) {\r\n    setOpenedGraph(null);\r\n\r\n    if (refreshData === true) {\r\n      if (pagination?.type === \"infinite-scroll\") {\r\n        setItems([]);\r\n        const updatedParams = [...queryParams];\r\n        remove(updatedParams, (param) =>\r\n          [\"page\", \"limit\"].includes(param.name)\r\n        );\r\n        setQueryParams(\r\n          buildInitQueryParamsAndPaginationState(\r\n            updatedParams,\r\n            paginationConfig\r\n          ).initQueryParams\r\n        );\r\n      } else {\r\n        getAllRequest();\r\n      }\r\n    }\r\n  }\r\n\r\n  async function openEditPopup(rawData: any) {\r\n    const params: IPopupProps = {\r\n      rawData,\r\n      type: \"update\",\r\n      title: editItemFormTitle,\r\n      config: putConfig as IConfigPutMethod,\r\n      getSingleConfig,\r\n      submitCallback: async (body: any, containFiles: boolean) => {\r\n        return await updateItem(body, rawData, containFiles);\r\n      },\r\n    };\r\n\r\n    setOpenedPopup(params);\r\n  }\r\n\r\n  function openCustomActionPopup(rawData: any, action: IConfigCustomAction) {\r\n    const params: IPopupProps = {\r\n      rawData,\r\n      type: \"action\",\r\n      title: action.name || \"Custom Action\",\r\n      config: action as IConfigCustomAction,\r\n      submitCallback: async (body: any, containFiles: boolean) => {\r\n        return await performAction(body, rawData, action, containFiles);\r\n      },\r\n    };\r\n    setOpenedPopup(params);\r\n  }\r\n\r\n  async function openGraphPopup(graphConfig: IConfigGraphMethod) {\r\n    const params: IGraphProps = {\r\n      title: graphTitle,\r\n      config: graphConfig,\r\n    };\r\n\r\n    setOpenedGraph(params);\r\n\r\n    console.log(params);\r\n    console.log(openedGraph);\r\n  }\r\n\r\n  async function performAction(\r\n    body: any,\r\n    rawData: any,\r\n    action: IConfigCustomAction,\r\n    containFiles: boolean\r\n  ) {\r\n    const { url, requestHeaders, actualMethod } = action;\r\n\r\n    return await httpService.fetch({\r\n      method: actualMethod || \"put\",\r\n      origUrl: url,\r\n      rawData,\r\n      body: containFiles ? body : JSON.stringify(body),\r\n      headers: {\r\n        ...pageHeaders,\r\n        ...(requestHeaders || {}),\r\n        ...(containFiles ? {} : { \"content-type\": \"application/json\" }),\r\n      },\r\n      responseType: \"boolean\",\r\n    });\r\n  }\r\n\r\n  function extractQueryParams(\r\n    params: IConfigInputField[]\r\n  ): IConfigInputField[] {\r\n    if (!paginationConfig || isQueryPagination(paginationConfig)) {\r\n      const parsedParams = QueryString.parse(location.search);\r\n      const finalQueryParams = params.map((queryParam) => {\r\n        if (typeof parsedParams[queryParam.name] !== \"undefined\") {\r\n          queryParam.value =\r\n            queryParam.type === \"boolean\"\r\n              ? parsedParams[queryParam.name] === \"true\"\r\n              : decodeURIComponent(parsedParams[queryParam.name] as any);\r\n        } else {\r\n          queryParam.value = queryParam.value || \"\";\r\n        }\r\n        return queryParam;\r\n      });\r\n\r\n      setPagination(getUpdatedPaginationState(finalQueryParams, null));\r\n\r\n      return finalQueryParams;\r\n    } else {\r\n      return params;\r\n    }\r\n  }\r\n\r\n  async function fetchPageData(params: {\r\n    actualMethod: \"get\" | \"put\" | \"post\" | \"patch\" | \"delete\";\r\n    url: string;\r\n    requestHeaders?: any;\r\n    dataPath: string;\r\n    dataTransform: any;\r\n    sortBy: any;\r\n  }) {\r\n    const result = await httpService.fetch({\r\n      method: params.actualMethod || \"get\",\r\n      origUrl: params.url,\r\n      queryParams,\r\n      headers: Object.assign({}, pageHeaders, params.requestHeaders || {}),\r\n    });\r\n    let extractedData = dataHelpers.extractDataByDataPath(\r\n      result,\r\n      params.dataPath\r\n    );\r\n\r\n    if (!extractedData) {\r\n      throw new Error(\"Could not extract data from response.\");\r\n    }\r\n\r\n    if (!Array.isArray(extractedData)) {\r\n      throw new Error(\"Extracted data is invalid.\");\r\n    }\r\n\r\n    if (typeof params.dataTransform === \"function\") {\r\n      extractedData = await params.dataTransform(extractedData);\r\n    }\r\n\r\n    const orderedItems = orderBy(\r\n      extractedData,\r\n      typeof params.sortBy === \"string\" ? [params.sortBy] : params.sortBy || []\r\n    );\r\n\r\n    if (paginationConfig) {\r\n      const total = paginationConfig.fields?.total\r\n        ? dataHelpers.extractDataByDataPath(\r\n            result,\r\n            paginationConfig.fields.total.dataPath\r\n          )\r\n        : undefined;\r\n      const newPaginationState = getUpdatedPaginationState(\r\n        queryParams,\r\n        result,\r\n        total\r\n      );\r\n      if (newPaginationState) {\r\n        setPagination(newPaginationState);\r\n      }\r\n    }\r\n\r\n    if (infiniteScroll) {\r\n      setItems([...items, ...orderedItems]);\r\n    } else {\r\n      setItems(orderedItems);\r\n    }\r\n  }\r\n\r\n  async function getAllRequest() {\r\n    if (infiniteScroll) {\r\n      if (pagination) {\r\n        if (isQueryPaginationState(pagination)) {\r\n          if (pagination?.page !== 1) {\r\n            setLoading(false);\r\n          }\r\n        } else if (isBodyPaginationState(pagination)) {\r\n          if (pagination.previous) {\r\n            setLoading(false);\r\n          }\r\n        } else {\r\n          throw new Error(\"unrecognized pagination source\");\r\n        }\r\n      }\r\n    } else {\r\n      setLoading(true);\r\n    }\r\n\r\n    setError(null);\r\n\r\n    try {\r\n      if (!getAllConfig) {\r\n        throw new Error(\"Get all method is not defined.\");\r\n      }\r\n\r\n      if (paginationConfig && !pagination) {\r\n        throw new Error(\"Pagination not initialized.\");\r\n      }\r\n\r\n      const {\r\n        url,\r\n        requestHeaders,\r\n        actualMethod,\r\n        dataPath,\r\n        sortBy,\r\n        dataTransform,\r\n      } = getAllConfig;\r\n      await fetchPageData({\r\n        actualMethod: actualMethod,\r\n        url: url,\r\n        requestHeaders: requestHeaders,\r\n        dataPath: dataPath,\r\n        dataTransform: dataTransform,\r\n        sortBy: sortBy,\r\n      });\r\n    } catch (e) {\r\n      setError(e.message);\r\n    }\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  async function addItem(body: any, containFiles?: boolean, queryParams?: []) {\r\n    if (!postConfig) {\r\n      throw new Error(\"Post method is not defined.\");\r\n    }\r\n\r\n    const { url, requestHeaders, actualMethod } = postConfig;\r\n\r\n    return await httpService.fetch({\r\n      method: actualMethod || \"post\",\r\n      origUrl: url,\r\n      queryParams,\r\n      body: containFiles ? body : JSON.stringify(body),\r\n      headers: {\r\n        ...pageHeaders,\r\n        ...(requestHeaders || {}),\r\n        ...(containFiles ? {} : { \"content-type\": \"application/json\" }),\r\n      },\r\n      responseType: \"boolean\",\r\n    });\r\n  }\r\n\r\n  async function updateItem(body: any, rawData: any, containFiles?: boolean) {\r\n    if (!putConfig) {\r\n      throw new Error(\"Put method is not defined.\");\r\n    }\r\n\r\n    const { url, requestHeaders, actualMethod } = putConfig;\r\n\r\n    return await httpService.fetch({\r\n      method: actualMethod || \"put\",\r\n      origUrl: url,\r\n      rawData,\r\n      body: containFiles ? body : JSON.stringify(body),\r\n      headers: {\r\n        ...pageHeaders,\r\n        ...(requestHeaders || {}),\r\n        ...(containFiles ? {} : { \"content-type\": \"application/json\" }),\r\n      },\r\n      responseType: \"boolean\",\r\n    });\r\n  }\r\n\r\n  async function deleteItem(item: any) {\r\n    const approved: boolean = window.confirm(\r\n      \"Are you sure you want to delete this item?\"\r\n    );\r\n\r\n    if (!approved) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      if (!deleteConfig) {\r\n        throw new Error(\"Delete method is not defined.\");\r\n      }\r\n\r\n      const { url, requestHeaders, actualMethod } = deleteConfig;\r\n      const success = await httpService.fetch({\r\n        method: actualMethod || \"delete\",\r\n        origUrl: url,\r\n        rawData: item,\r\n        headers: Object.assign({}, pageHeaders, requestHeaders || {}),\r\n        responseType: \"boolean\",\r\n      });\r\n\r\n      if (success) {\r\n        if (pagination?.type === \"infinite-scroll\") {\r\n          setItems([]);\r\n          const updatedParams = [...queryParams];\r\n          remove(updatedParams, (param) =>\r\n            [\"page\", \"limit\"].includes(param.name)\r\n          );\r\n          setQueryParams(\r\n            buildInitQueryParamsAndPaginationState(\r\n              updatedParams,\r\n              paginationConfig\r\n            ).initQueryParams\r\n          );\r\n        } else {\r\n          getAllRequest();\r\n        }\r\n      }\r\n    } catch (e) {\r\n      toast.error(e.message, {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n    }\r\n  }\r\n\r\n  function submitQueryParams(\r\n    updatedParams: IConfigInputField[],\r\n    reset?: boolean\r\n  ) {\r\n    if (loading) {\r\n      return;\r\n    }\r\n\r\n    if (reset) {\r\n      setItems([]);\r\n      remove(updatedParams, (param) => [\"page\", \"limit\"].includes(param.name));\r\n      updatedParams = buildInitQueryParamsAndPaginationState(\r\n        updatedParams,\r\n        paginationConfig\r\n      ).initQueryParams;\r\n    }\r\n\r\n    updatedParams.map((queryParam, idx) => {\r\n      if (queryParam.type === \"select\" && queryParam.value === locale.select) {\r\n        // default value means nothing was selected and thus we explicitly\r\n        // empty out the value in this case; otherwise the string '-- Select --'\r\n        // is used as the value for the given queryParams\r\n        queryParam.value = \"\";\r\n      }\r\n    });\r\n\r\n    setQueryParams(updatedParams);\r\n    setPagination(getUpdatedPaginationState(updatedParams, null));\r\n\r\n    let paramsToUrl = [...updatedParams];\r\n\r\n    if (paginationConfig?.type === \"infinite-scroll\") {\r\n      paramsToUrl = paramsToUrl.filter(\r\n        (param) => ![\"page\", \"limit\"].includes(param.name)\r\n      );\r\n    }\r\n\r\n    // Building query string\r\n    const queryState: string = paramsToUrl\r\n      .map((queryParam, idx) => {\r\n        return `${idx === 0 ? \"?\" : \"\"}${queryParam.name}=${encodeURIComponent(\r\n          queryParam.value || \"\"\r\n        )}`;\r\n      })\r\n      .join(\"&\");\r\n\r\n    // Pushing query state to url\r\n    if (page && queryState) {\r\n      push(queryState);\r\n    }\r\n  }\r\n\r\n  function getUpdatedPaginationState(\r\n    updatedParams: IConfigInputField[],\r\n    result: any,\r\n    total?: number\r\n  ): IPaginationState | undefined {\r\n    if (!paginationConfig) {\r\n      return;\r\n    }\r\n\r\n    if (isQueryPagination(paginationConfig)) {\r\n      if (pagination && !isQueryPaginationState(pagination)) {\r\n        throw new Error(\"unexpected pagination source \" + pagination.source);\r\n      }\r\n      const newState: IQueryPaginationState = pagination\r\n        ? pagination\r\n        : {\r\n            source: \"query\",\r\n            type: paginationConfig.type,\r\n            page: parseInt(paginationConfig.params?.page?.value || \"1\"),\r\n            limit: parseInt(paginationConfig.params?.limit?.value || \"10\"),\r\n            descending:\r\n              paginationConfig.params?.descending?.value === \"true\" || false,\r\n            hasPreviousPage: false,\r\n            hasNextPage: false,\r\n            sortBy: paginationConfig.params?.sortBy?.value,\r\n          };\r\n\r\n      newState.total = total || pagination?.total;\r\n      newState.page =\r\n        parseInt(\r\n          updatedParams.find(\r\n            (param) => param.name === paginationConfig?.params?.page?.name\r\n          )?.value\r\n        ) || newState.page;\r\n      newState.limit =\r\n        parseInt(\r\n          updatedParams.find(\r\n            (param) => param.name === paginationConfig?.params?.limit?.name\r\n          )?.value\r\n        ) || newState.limit;\r\n      newState.descending =\r\n        updatedParams.find(\r\n          (param) => param.name === paginationConfig?.params?.descending?.name\r\n        )?.value === \"true\" || newState.descending;\r\n      newState.sortBy =\r\n        updatedParams.find(\r\n          (param) => param.name === paginationConfig?.params?.sortBy?.name\r\n        )?.value || newState.sortBy;\r\n      newState.hasPreviousPage = paginationHelpers.hasPreviousPage(\r\n        newState.page\r\n      );\r\n      newState.hasNextPage = paginationHelpers.hasNextPage(\r\n        newState.page,\r\n        newState.limit,\r\n        newState.total\r\n      );\r\n      return newState;\r\n    } else if (isBodyPagination(paginationConfig)) {\r\n      if (pagination && !isBodyPaginationState(pagination)) {\r\n        throw new Error(\"unexpected pagination source \" + pagination.source);\r\n      }\r\n      const newState: IBodyPaginationState = pagination\r\n        ? pagination\r\n        : {\r\n            source: \"body\",\r\n            type: paginationConfig.type,\r\n            next: result[paginationConfig.params.nextPath || locale.next],\r\n            previous:\r\n              result[paginationConfig.params.prevPath || locale.previous],\r\n            hasNextPage: !!result[\r\n              paginationConfig.params.nextPath || locale.next\r\n            ],\r\n            hasPreviousPage: !!result[\r\n              paginationConfig.params.prevPath || locale.previous\r\n            ],\r\n            limit: parseInt(paginationConfig.params?.limit?.value || \"10\"),\r\n            total: result[paginationConfig.params.countPath || \"count\"],\r\n          };\r\n      if (result) {\r\n        newState.next = result[paginationConfig.params.nextPath || locale.next];\r\n        newState.previous =\r\n          result[paginationConfig.params.prevPath || locale.previous];\r\n        newState.hasNextPage = !!result[\r\n          paginationConfig.params.nextPath || locale.next\r\n        ];\r\n        newState.hasPreviousPage = !!result[\r\n          paginationConfig.params.prevPath || locale.previous\r\n        ];\r\n        newState.total = result[paginationConfig.params.countPath || \"count\"];\r\n      }\r\n      newState.limit =\r\n        parseInt(\r\n          updatedParams.find(\r\n            (param) => param.name === paginationConfig?.params?.limit?.name\r\n          )?.value\r\n        ) || newState.limit;\r\n      return newState;\r\n    } else {\r\n      throw new Error(\"unrecognized pagination source\");\r\n    }\r\n  }\r\n\r\n  function renderItemsUI() {\r\n    if (loading) {\r\n      return <Loader />;\r\n    }\r\n\r\n    const fields = getAllConfig?.fields || getAllConfig?.display?.fields || [];\r\n    const fieldsToFilter = fields\r\n      .filter((field) => field.filterable)\r\n      .map((field) => field.name);\r\n    let filteredItems = items;\r\n\r\n    if (filter && fieldsToFilter.length) {\r\n      filteredItems = items.filter((item) => {\r\n        let passFilter = false;\r\n        fieldsToFilter.forEach((fieldName) => {\r\n          const value = item[fieldName];\r\n          if (\r\n            typeof value === \"string\" &&\r\n            value.toLowerCase().indexOf(filter) >= 0\r\n          ) {\r\n            passFilter = true;\r\n          }\r\n        });\r\n        return passFilter;\r\n      });\r\n    }\r\n\r\n    if (!filteredItems.length) {\r\n      return <div className=\"app-error\">{locale.nothing_to_see}</div>;\r\n    }\r\n\r\n    const getNextPage = paginationConfig\r\n      ? () => {\r\n          if (isQueryPagination(paginationConfig)) {\r\n            if (pagination && !isQueryPaginationState(pagination)) {\r\n              throw new Error(\r\n                \"unexpected pagination source \" + pagination.source\r\n              );\r\n            }\r\n            if (pagination?.page && queryParams.length > 0) {\r\n              const newPage = pagination?.page + 1;\r\n              const updatedParams = queryParams.map((param) => {\r\n                if (param.name === paginationConfig.params?.page?.name) {\r\n                  return {\r\n                    ...param,\r\n                    value: newPage,\r\n                  };\r\n                }\r\n                return param;\r\n              });\r\n              submitQueryParams(updatedParams);\r\n            }\r\n          } else if (isBodyPagination(paginationConfig)) {\r\n            if (pagination && !isBodyPaginationState(pagination)) {\r\n              throw new Error(\r\n                \"unexpected pagination source \" + pagination.source\r\n              );\r\n            }\r\n            if (!getAllConfig || !pagination?.next) {\r\n              return;\r\n            }\r\n            const {\r\n              requestHeaders,\r\n              actualMethod,\r\n              dataPath,\r\n              sortBy,\r\n              dataTransform,\r\n            } = getAllConfig;\r\n            fetchPageData({\r\n              actualMethod: actualMethod,\r\n              url: pagination.next,\r\n              requestHeaders: requestHeaders,\r\n              dataPath: dataPath,\r\n              dataTransform: dataTransform,\r\n              sortBy: sortBy,\r\n            });\r\n          } else {\r\n            throw new Error(\"unrecognized pagination source\");\r\n          }\r\n        }\r\n      : null;\r\n\r\n    const getPreviousPage = paginationConfig\r\n      ? () => {\r\n          if (isQueryPagination(paginationConfig)) {\r\n            if (pagination && !isQueryPaginationState(pagination)) {\r\n              throw new Error(\r\n                \"unexpected pagination source \" + pagination.source\r\n              );\r\n            }\r\n            if (\r\n              pagination?.page &&\r\n              pagination.page > 1 &&\r\n              queryParams.length > 0\r\n            ) {\r\n              const newPage = pagination?.page - 1;\r\n              const updatedParams = queryParams.map((param) => {\r\n                if (param.name === paginationConfig.params?.page?.name) {\r\n                  return {\r\n                    ...param,\r\n                    value: newPage,\r\n                  };\r\n                }\r\n                return param;\r\n              });\r\n              submitQueryParams(updatedParams);\r\n            }\r\n          } else if (isBodyPagination(paginationConfig)) {\r\n            if (pagination && !isBodyPaginationState(pagination)) {\r\n              throw new Error(\r\n                \"unexpected pagination source \" + pagination.source\r\n              );\r\n            }\r\n            if (!getAllConfig || !pagination?.previous) {\r\n              return;\r\n            }\r\n            const {\r\n              requestHeaders,\r\n              actualMethod,\r\n              dataPath,\r\n              sortBy,\r\n              dataTransform,\r\n            } = getAllConfig;\r\n            fetchPageData({\r\n              actualMethod: actualMethod,\r\n              url: pagination.previous,\r\n              requestHeaders: requestHeaders,\r\n              dataPath: dataPath,\r\n              dataTransform: dataTransform,\r\n              sortBy: sortBy,\r\n            });\r\n          } else {\r\n            throw new Error(\"unrecognized pagination source\");\r\n          }\r\n        }\r\n      : null;\r\n\r\n    const callbacks = {\r\n      delete: deleteConfig ? deleteItem : null,\r\n      put: putConfig ? openEditPopup : null,\r\n      action: customActions.length ? openCustomActionPopup : () => {},\r\n      getNextPage,\r\n      getPreviousPage,\r\n    };\r\n\r\n    if (getAllConfig?.display.type === \"cards\") {\r\n      return (\r\n        <Cards\r\n          pagination={pagination}\r\n          callbacks={callbacks}\r\n          fields={fields}\r\n          items={filteredItems}\r\n          customActions={customActions}\r\n          customLabels={customLabels}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Table\r\n        pagination={pagination}\r\n        callbacks={callbacks}\r\n        fields={fields}\r\n        items={filteredItems}\r\n        customActions={customActions}\r\n        customLabels={customLabels}\r\n      />\r\n    );\r\n  }\r\n\r\n  function renderPaginationStateLabel() {\r\n    if (loading || !items.length) {\r\n      return;\r\n    }\r\n\r\n    if (!pagination || isQueryPaginationState(pagination)) {\r\n      const currentCountFrom =\r\n        ((pagination?.page || 1) - 1) * (pagination?.limit || 10) + 1;\r\n      const currentCountTo = currentCountFrom + items.length - 1;\r\n      let label: string = `${locale.showing_result} ${currentCountFrom}-${currentCountTo} ${locale.out_of} ${pagination?.total} ${locale.items}`;\r\n\r\n      if (pagination?.type === \"infinite-scroll\") {\r\n        label = `Showing ${pagination?.total} items`;\r\n      }\r\n\r\n      if (customLabels?.pagination?.itemsCount) {\r\n        label = customLabels?.pagination?.itemsCount\r\n          .replace(\":currentCountFrom\", currentCountFrom as any)\r\n          .replace(\":currentCountTo\", currentCountFrom as any)\r\n          .replace(\":totalCount\", pagination?.total as any);\r\n      }\r\n\r\n      return <p className=\"center pagination-state\">{label}</p>;\r\n    }\r\n    if (isBodyPaginationState(pagination)) {\r\n      // TODO: extract start end end in a meaningful manner from the API\r\n      // this is not something that id based pagination APIs support generally\r\n      let label: string = `Total Results: ${pagination?.total}`;\r\n      if (pagination?.type === \"infinite-scroll\") {\r\n        label = `Showing ${pagination?.total} items`;\r\n      }\r\n\r\n      if (customLabels?.pagination?.itemsCount) {\r\n        label = customLabels?.pagination?.itemsCount.replace(\r\n          \":totalCount\",\r\n          pagination?.total as any\r\n        );\r\n      }\r\n\r\n      return <p className=\"center pagination-state\">{label}</p>;\r\n    }\r\n  }\r\n\r\n  function renderPageContent() {\r\n    const fields = getAllConfig?.fields || getAllConfig?.display?.fields || [];\r\n    const fieldsToFilter = fields\r\n      .filter((field) => field.filterable)\r\n      .map((field) => field.name);\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <QueryParams\r\n          initialParams={queryParams}\r\n          paginationConfig={paginationConfig}\r\n          submitCallback={submitQueryParams}\r\n        />\r\n        {fieldsToFilter.length > 0 && <FilterField onChange={setFilter} />}\r\n        {pagination?.total && renderPaginationStateLabel()}\r\n        {error ? <div className=\"app-error\">{error}</div> : renderItemsUI()}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    const nextActivePage: IConfigPage | null =\r\n      context?.config?.pages?.filter(\r\n        (p, pIdx) => p.id === page || pIdx + 1 === parseInt(page || \"\")\r\n      )[0] || null;\r\n    context.setActivePage(nextActivePage);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [page]);\r\n\r\n  useEffect(() => {\r\n    const {\r\n      initQueryParams,\r\n      initialPagination,\r\n    } = buildInitQueryParamsAndPaginationState(\r\n      getAllConfig?.queryParams || [],\r\n      paginationConfig\r\n    );\r\n\r\n    setItems([]);\r\n    setQueryParams(extractQueryParams(initQueryParams));\r\n    setPagination(initialPagination);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [activePage]);\r\n\r\n  useEffect(() => {\r\n    // Load data when query params\r\n    getAllRequest();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [queryParams]);\r\n\r\n  return (\r\n    <div className=\"app-page\">\r\n      <header className=\"app-page-header\">\r\n        <hgroup>\r\n          <h2>{activePage?.name}</h2>\r\n          {activePage?.description && <h4>{activePage?.description}</h4>}\r\n        </hgroup>\r\n        {graphConfig && (\r\n          <Button\r\n            className=\"add-item\"\r\n            color=\"green\"\r\n            onClick={() => openGraphPopup(graphConfig)}\r\n          >\r\n            {openGraphLabel}\r\n          </Button>\r\n        )}\r\n        {postConfig && (\r\n          <Button\r\n            className=\"add-item\"\r\n            color=\"green\"\r\n            onClick={() =>\r\n              setOpenedPopup({\r\n                type: \"add\",\r\n                title: addItemFormTitle,\r\n                config: postConfig,\r\n                submitCallback: addItem,\r\n              })\r\n            }\r\n          >\r\n            {addItemLabel}\r\n          </Button>\r\n        )}\r\n      </header>\r\n      <main className=\"app-page-content\">{renderPageContent()}</main>\r\n      {openedPopup && (\r\n        <FormPopup\r\n          title={openedPopup.title}\r\n          closeCallback={closeFormPopup}\r\n          submitCallback={openedPopup.submitCallback}\r\n          fields={openedPopup.config?.fields || []}\r\n          rawData={openedPopup.rawData}\r\n          getSingleConfig={openedPopup.getSingleConfig}\r\n          methodConfig={openedPopup.config}\r\n        />\r\n      )}\r\n      {openedGraph && (\r\n        <GraphPopup\r\n          title={openedGraph.title}\r\n          closeCallback={closeGraph}\r\n          fields={openedGraph.config?.fields || []}\r\n          graphConfig={openedGraph.config}\r\n        />\r\n      )}\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Page = withAppContext(PageComp);\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button } from \"../button/button.comp\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { withAppContext } from \"../withContext/withContext.comp\";\r\nimport locale from \"../../common/locale.js\";\r\nimport { IAppContext } from \"../app.context\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport {\r\n  IConfigPage,\r\n  IConfigMethods,\r\n  IConfigGetAllMethod,\r\n  IConfigPostMethod,\r\n  IConfigPutMethod,\r\n  IConfigDeleteMethod,\r\n  IConfigInputField,\r\n  IConfigCustomAction,\r\n  IConfigGetSingleMethod,\r\n  ICustomLabels,\r\n  IConfigPagination,\r\n  IConfigGraphMethod,\r\n} from \"../../common/models/config.model\";\r\n\r\nimport \"./authPage.scss\";\r\nimport { FormPopup } from \"../formPopup/formPopup.comp\";\r\n\r\ninterface IProps {\r\n  context: IAppContext;\r\n}\r\n\r\ninterface IPopupProps {\r\n  type: \"add\";\r\n  title: string;\r\n  config: IConfigPostMethod | IConfigPutMethod;\r\n  submitCallback: (body: any, containFiles: boolean) => void;\r\n  getSingleConfig?: IConfigGetSingleMethod;\r\n  rawData?: {};\r\n}\r\n\r\nconst AuthPageComp = ({ context }: IProps) => {\r\n  const { location, replace } = useHistory();\r\n  const [user, setUser] = useState<string>(\"\");\r\n  const [pwd, setPwd] = useState<string>(\"\");\r\n  const [tenant, setTenant] = useState<string>(\"\");\r\n  const { setError, httpService } = context;\r\n  const [openedAddTenant, setOpenedAddTenant] = useState<null | IPopupProps>(\r\n    null\r\n  );\r\n  const postConfig: IConfigPostMethod | undefined = {\r\n    url: \"/tenants/\",\r\n    actualMethod: \"post\",\r\n    requestHeaders: { \"content-type\": \"application/json\" },\r\n    fields: [\r\n      { name: \"token\", type: \"text\", value: \"\", label: \"Token\" },\r\n      { name: \"_id\", type: \"text\", value: \"\", label: \"ID\" },\r\n      {\r\n        name: \"organization\",\r\n        type: \"text\",\r\n        value: \"\",\r\n        label: \"Organizzazione\",\r\n      },\r\n      { name: \"address\", type: \"text\", value: \"\", label: \"Indirizzo\" },\r\n      { name: \"email\", type: \"email\", value: \"\", label: \"e-mail\" },\r\n      { name: \"phone\", type: \"text\", value: \"\", label: \"Telefono\" },\r\n      {\r\n        name: \"admin_username\",\r\n        type: \"text\",\r\n        value: \"\",\r\n        label: \"Username Amministratore\",\r\n      },\r\n      {\r\n        name: \"admin_password\",\r\n        type: \"password\",\r\n        value: \"\",\r\n        label: \"Password Amministratore\",\r\n      },\r\n    ],\r\n    queryParams: [],\r\n  };\r\n\r\n  async function submitForm(e: any) {\r\n    e.preventDefault();\r\n\r\n    console.log(\"entrato nel submit form\");\r\n\r\n    try {\r\n      const credentials = {\r\n        username: `${user}`,\r\n        password: `${pwd}`,\r\n        tenant: `${tenant}`,\r\n      };\r\n      const result = await httpService.fetch({\r\n        method: \"post\",\r\n        origUrl: httpService.loginUrl,\r\n        body: JSON.stringify(credentials),\r\n        headers: { \"content-type\": \"application/json\" },\r\n      });\r\n      if (!result) {\r\n        throw new Error(locale.login_error);\r\n      }\r\n      if (result.status === 401) {\r\n        throw new Error(locale.login_error);\r\n      }\r\n\r\n      if (result.user.type !== \"admin\") {\r\n        throw new Error(locale.login_unauthorised_user);\r\n      }\r\n\r\n      sessionStorage.setItem(\"diten-token\", result.token);\r\n\r\n      console.log(\"token impostato\");\r\n\r\n      window.location.replace(\"/\");\r\n\r\n      //const { from } = location.state || { from: { pathname: \"/\" } };\r\n      //replace(from);\r\n    } catch (e) {\r\n      setError(e.message);\r\n      toast.error(e.message, {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n    }\r\n  }\r\n\r\n  function handleUserChange(event: any) {\r\n    setUser(event.target.value);\r\n  }\r\n\r\n  function handlePwdChange(event: any) {\r\n    setPwd(event.target.value);\r\n  }\r\n\r\n  function handleTenantChange(event: any) {\r\n    setTenant(event.target.value);\r\n  }\r\n\r\n  function closeAddTenantPopup() {\r\n    setOpenedAddTenant(null);\r\n  }\r\n\r\n  async function addTenant(body: any) {\r\n    if (!postConfig) {\r\n      throw new Error(\"Post method is not defined.\");\r\n    }\r\n\r\n    console.log(body);\r\n\r\n    const tokenHead = body[\"token\"];\r\n\r\n    delete body[\"token\"];\r\n\r\n    const result = await httpService.fetch({\r\n      method: \"post\",\r\n      origUrl: httpService.baseUrl + \"/tenants\",\r\n      body: JSON.stringify(body),\r\n      headers: { \"content-type\": \"application/json\", Authorization: tokenHead },\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"auth-page\">\r\n      <h4>{locale.login}</h4>\r\n      <form className=\"form-content\" onSubmit={submitForm}>\r\n        <div className=\"form-row row\">\r\n          <label>{locale.username}</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder={locale.username_suggestion}\r\n            onChange={handleUserChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-row row\">\r\n          <label>{locale.password}</label>\r\n          <input\r\n            type=\"password\"\r\n            placeholder={locale.password_suggenstion}\r\n            onChange={handlePwdChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-row row\">\r\n          <label>{locale.tenant}</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder={locale.tenant_suggenstion}\r\n            onChange={handleTenantChange}\r\n          />\r\n        </div>\r\n        <div className=\"buttons-wrapper center\">\r\n          <Button type=\"submit\" onClick={submitForm} color=\"green\">\r\n            {locale.submit}\r\n          </Button>\r\n        </div>\r\n      </form>\r\n\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <div className=\"form-content\">\r\n        <div className=\"form-row row\">\r\n          <h5>{locale.add_tenant}</h5>\r\n          <div className=\"buttons-wrapper center\"></div>\r\n          <Button\r\n            title={locale.add_tenant}\r\n            onClick={() =>\r\n              setOpenedAddTenant({\r\n                type: \"add\",\r\n                title: locale.add_tenant,\r\n                config: postConfig,\r\n                submitCallback: addTenant,\r\n              })\r\n            }\r\n            color=\"green\"\r\n          >\r\n            <i className=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      {openedAddTenant && (\r\n        <FormPopup\r\n          title={openedAddTenant.title}\r\n          closeCallback={closeAddTenantPopup}\r\n          submitCallback={openedAddTenant.submitCallback}\r\n          fields={openedAddTenant.config?.fields || []}\r\n          rawData={openedAddTenant.rawData}\r\n          getSingleConfig={openedAddTenant.getSingleConfig}\r\n          methodConfig={openedAddTenant.config}\r\n        />\r\n      )}\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const AuthPage = withAppContext(AuthPageComp);\r\n","import React, { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { IAppContext } from \"../app.context\";\r\nimport { withAppContext } from \"../withContext/withContext.comp\";\r\nimport { Button } from \"../button/button.comp\";\r\nimport locale from \"../../common/locale.js\";\r\n\r\nimport \"./navigation.scss\";\r\n\r\ninterface IProps {\r\n  context: IAppContext;\r\n}\r\n\r\nconst NavigationComp = ({ context: { config } }: IProps) => {\r\n  const [isOpened, setIsOpened] = useState<boolean>(false);\r\n\r\n  function logOut() {\r\n    sessionStorage.clear();\r\n    document.location.replace(\"/\");\r\n  }\r\n\r\n  return (\r\n    <nav className=\"app-nav\">\r\n      <Button className=\"app-nav-opener\" onClick={() => setIsOpened(!isOpened)}>\r\n        {isOpened ? (\r\n          <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n        ) : (\r\n          <i className=\"fa fa-bars\" aria-hidden=\"true\"></i>\r\n        )}\r\n      </Button>\r\n\r\n      <div className={`app-nav-wrapper ${isOpened ? \"opened\" : \"\"}`}>\r\n        <div className=\"app-nav-links\">\r\n          {(config?.pages || []).map((page, idx) => (\r\n            <NavLink\r\n              to={`/${page.id || idx + 1}`}\r\n              activeClassName=\"active\"\r\n              key={`page_${idx}`}\r\n              onClick={() => setIsOpened(false)}\r\n            >\r\n              {page.name}\r\n            </NavLink>\r\n          ))}\r\n        </div>\r\n        <div className=\"logout-wrapper\">\r\n          <Button color=\"red\" onClick={() => logOut()}>\r\n            {locale.logout}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport const Navigation = withAppContext(NavigationComp);\r\n","import React from 'react';\r\nimport { ICustomStyles } from '../../common/models/config.model';\r\n\r\ninterface IProps {\r\n  styles: ICustomStyles\r\n}\r\n\r\nexport const CustomStyles = ({ styles }: IProps) => {\r\n  const cssVars = styles.vars || {};\r\n  const arr = [];\r\n  \r\n  for (const key in cssVars) {\r\n    arr.push(`--${key}: ${(cssVars as any)[key]}`);\r\n  }\r\n\r\n  return (\r\n    <style dangerouslySetInnerHTML={{ __html: `\r\n      :root {\r\n        ${arr.join(';')}\r\n      }\r\n    ` }}>\r\n    </style>\r\n  );\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport ConfigService from \"../services/config.service\";\r\nimport { IConfig, IConfigPage } from \"../common/models/config.model\";\r\nimport { Page } from \"../components/page/page.comp\";\r\nimport { AuthPage } from \"../components/authPage/authPage.comp\";\r\nimport { Navigation } from \"../components/navigation/navigation.comp\";\r\nimport { AppContext } from \"./app.context\";\r\nimport HttpService from \"../services/http.service\";\r\nimport { CustomStyles } from \"./customStyles/customStyles.comp\";\r\n\r\nimport \"./app.scss\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst httpService = new HttpService();\r\nconst defaultAppName: string = \"RESTool App\";\r\n\r\nfunction changeFavicon(src: string) {\r\n  const link = document.createElement(\"link\");\r\n  const oldLink = document.getElementById(\"favicon\");\r\n  link.id = \"favicon\";\r\n  link.rel = \"shortcut icon\";\r\n  link.href = src;\r\n  if (oldLink) {\r\n    document.head.removeChild(oldLink);\r\n  }\r\n  document.head.appendChild(link);\r\n}\r\n\r\nfunction App() {\r\n  const [firstLoad, setFirstLoad] = useState<boolean>(true);\r\n  const [config, setConfig] = useState<IConfig | null>(null);\r\n  const [activePage, setActivePage] = useState<IConfigPage | null>(\r\n    config?.pages?.[0] || null\r\n  );\r\n  const [error, setError] = useState<string | null>(null);\r\n  const appName: string = config?.name || defaultAppName;\r\n\r\n  async function loadConfig(url?: string): Promise<void> {\r\n    try {\r\n      const windowConfig = (window as any).RESTool?.config;\r\n      let remoteConfig: IConfig;\r\n      // Try to load config from window object first\r\n      if (!url && windowConfig) {\r\n        remoteConfig = Object.assign({}, windowConfig, {});\r\n      } else {\r\n        remoteConfig = url\r\n          ? await ConfigService.getRemoteConfig(url)\r\n          : await ConfigService.loadDefaultConfig();\r\n      }\r\n\r\n      // Setting global config for httpService\r\n      httpService.baseUrl = remoteConfig.baseUrl || \"\";\r\n      httpService.loginUrl = remoteConfig.loginUrl || \"\";\r\n      httpService.errorMessageDataPath =\r\n        remoteConfig.errorMessageDataPath || \"\";\r\n      httpService.unauthorizedRedirectUrl =\r\n        remoteConfig.unauthorizedRedirectUrl || \"\";\r\n      httpService.requestHeaders = remoteConfig.requestHeaders || {};\r\n      document.title = remoteConfig.name || defaultAppName;\r\n\r\n      if (remoteConfig?.favicon) {\r\n        changeFavicon(remoteConfig.favicon);\r\n      }\r\n\r\n      if (remoteConfig?.remoteUrl) {\r\n        return await loadConfig(remoteConfig.remoteUrl);\r\n      }\r\n\r\n      setConfig(remoteConfig);\r\n    } catch (e) {\r\n      console.error(\"Could not load config file\", e);\r\n    }\r\n\r\n    setFirstLoad(false);\r\n  }\r\n\r\n  function scrollToTop(scrollDuration: number = 250) {\r\n    var cosParameter = window.scrollY / 2,\r\n      scrollCount = 0,\r\n      oldTimestamp = performance.now();\r\n\r\n    function step(newTimestamp: number) {\r\n      scrollCount += Math.PI / (scrollDuration / (newTimestamp - oldTimestamp));\r\n\r\n      if (scrollCount >= Math.PI) {\r\n        window.scrollTo(0, 0);\r\n      }\r\n\r\n      if (window.scrollY === 0) {\r\n        return;\r\n      }\r\n\r\n      window.scrollTo(\r\n        0,\r\n        Math.round(cosParameter + cosParameter * Math.cos(scrollCount))\r\n      );\r\n      oldTimestamp = newTimestamp;\r\n      window.requestAnimationFrame(step);\r\n    }\r\n\r\n    window.requestAnimationFrame(step);\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadConfig();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const { isValid, errorMessage } = ConfigService.validateConfig(config);\r\n\r\n    if (!isValid) {\r\n      setError(errorMessage);\r\n      toast.error(errorMessage, {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n      return;\r\n    }\r\n  }, [config]);\r\n\r\n  const tkn = sessionStorage.getItem(\"diten-token\");\r\n\r\n  if (tkn === null)\r\n    return (\r\n      <div className=\"restool-app\">\r\n        <AppContext.Provider\r\n          value={{\r\n            config,\r\n            activePage,\r\n            setActivePage,\r\n            error,\r\n            setError,\r\n            httpService,\r\n          }}\r\n        >\r\n          <Router>\r\n            <Route exact path=\"/\" component={AuthPage} />\r\n          </Router>\r\n        </AppContext.Provider>\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <div className=\"restool-app\">\r\n      {!config ? (\r\n        <div className=\"app-error\">\r\n          {firstLoad\r\n            ? \"Loading Configuration...\"\r\n            : \"Could not find config file.\"}\r\n        </div>\r\n      ) : (\r\n        <AppContext.Provider\r\n          value={{\r\n            config,\r\n            activePage,\r\n            setActivePage,\r\n            error,\r\n            setError,\r\n            httpService,\r\n          }}\r\n        >\r\n          {config.customStyles && <CustomStyles styles={config.customStyles} />}\r\n          <Router>\r\n            <aside>\r\n              <h1 title={appName} onClick={() => scrollToTop()}>\r\n                {appName}\r\n              </h1>\r\n              {<Navigation />}\r\n            </aside>\r\n            {config && (\r\n              <Switch>\r\n                <Route exact path=\"/login\" component={AuthPage} />\r\n                <Route exact path=\"/:page\" component={Page} />\r\n                <Redirect path=\"/\" to={`/${config?.pages?.[0]?.id || \"1\"}`} />\r\n              </Switch>\r\n            )}\r\n            <ToastContainer\r\n              position={toast.POSITION.TOP_CENTER}\r\n              autoClose={4000}\r\n              draggable={false}\r\n            />\r\n          </Router>\r\n        </AppContext.Provider>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config: any) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config: any) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config: any) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport './index.scss';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nserviceWorker.unregister();\r\n","const locale = Object.freeze({\r\n    username: 'Nome utente',\r\n    password: 'Password',\r\n    tenant: 'Organizzazione',\r\n    username_suggestion: 'Inserisci il nome utente',\r\n    password_suggenstion: 'Inserisci la password',\r\n    tenant_suggenstion: 'Inserisci la tua organizzazione',\r\n    submit: 'Invio',\r\n    login_error: 'Login errata!',\r\n    login_unauthorised_user : \"Al momento solamente gli utenti con i privilegi di amministratore possono accedere\",\r\n    search: 'Cerca',\r\n    previous_page: 'Pagina precedente',\r\n    next_page: 'Prossima pagina',\r\n    showing_result: \"Risultati\",\r\n    out_of: \"di\",\r\n    items: \"totali\",\r\n    nothing_to_see: \"Nessun risultato\",\r\n    enter_text: \"Inserisci testo\",\r\n    enter_email: \"Inserisci email\",\r\n    enter_date: \"Inserisci data\",\r\n    enter_color: \"Inserisci colore\",\r\n    enter_password: \"Inserisci password\",\r\n    next : \"Successivo\",\r\n    previous : \"Precedente\",\r\n    select : \"\",\r\n    add : \"Aggiungi\",\r\n    update : \"Aggiorna\",\r\n    session_expired : \"Sessione scaduta\",\r\n    login : \"Accedi\",\r\n    logout : \"Esci\",\r\n    graph : \"Grafico\",\r\n    wrong_feature_error : \"Questa versione del software non può costruire un grafico delle feature selezionate. Possono essere mostrati i grafici solamente di feature aventi almeno una componente scalare e numerica\",\r\n    no_data_error : \"Non sono presenti dati per poter elaborare un grafico\",\r\n    add_tenant : \"Aggiungi organizzazione\",\r\n    zoomIn : \"Ingrandisci\",\r\n    zoomOut : \"Riduci\",\r\n    value : \"Valore\",\r\n\r\n\r\n});\r\n\r\nmodule.exports = locale;"],"sourceRoot":""}