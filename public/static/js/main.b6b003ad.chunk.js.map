{"version":3,"sources":["helpers/data.helpers.ts","services/http.service.ts","services/config.service.ts","components/app.context.ts","components/withContext/withContext.comp.tsx","components/loader/loader.comp.tsx","helpers/pagination.helpers.ts","components/button/button.comp.tsx","components/infiniteLoader/infiniteLoader.comp.tsx","components/pagination/pagination.comp.tsx","components/table/table.comp.tsx","components/cards/cards.comp.tsx","components/formRow/formRow.comp.tsx","components/queryParams/queryParams.comp.tsx","components/popup/popup.comp.tsx","helpers/file.helpers.ts","components/formPopup/formPopup.comp.tsx","components/filterField/filterField.comp.tsx","common/models/states.types.helper.ts","common/models/config.types.helper.ts","components/graphHolder/graphHolder.tsx","components/graphPopup/graphPopup.comp.tsx","components/page/page.comp.tsx","components/authPage/authPage.comp.tsx","components/navigation/navigation.comp.tsx","components/customStyles/customStyles.comp.tsx","components/app.tsx","serviceWorker.ts","index.tsx","common/locale.js"],"names":["dataHelpers","data","dataPath","attr","extractedData","digProps","split","prop","field","type","arrayType","objArray","array","JSON","parse","str","Object","keys","map","value","join","reduce","next","values","HttpService","baseUrl","unauthorizedRedirectUrl","errorMessageDataPath","loginUrl","requestHeaders","this","url","indexOf","rawData","outputUrl","forEach","key","urlParamName","replace","queryParams","exactMatch","length","replaceParamsInUrl","params","page","limit","param","name","push","console","log","reqUrl","urlIsAbsolute","origUrl","finalUrl","buildUrl","authorization","sessionStorage","getItem","Authorization","method","toUpperCase","headers","assign","body","undefined","res","errorMessage","json","path","dataAtPath","extractDataByDataPath","status","statusText","clear","redirectUrl","encodeURIComponent","document","location","href","Error","getErrorMessage","responseType","fetch","ok","text","handleError","buildRequest","makeRequest","httpService","HTTPService","endsWith","import","default","getRemoteConfig","config","isValid","configSchema","require","validate","Ajv","allErrors","verbose","compile","firstError","errors","message","error","AppContext","React","createContext","activePage","setError","setActivePage","withAppContext","Component","props","Consumer","context","Loader","className","paginationHelpers","parseInt","_page","_itemsPerPage","_total","Button","color","children","InfiniteLoader","Pagination","callbacks","pagination","customLabels","previousTitle","previousPageTitle","nextTitle","nextPageTitle","disabled","hasPreviousPage","onClick","previousPage","title","aria-hidden","hasNextPage","nextPage","Table","items","fields","customActions","editLabel","buttons","editItem","deleteLabel","deleteItem","actionColumnHeader","tableColumnHeaders","actions","paginationCallbacks","getNextPage","getPreviousPage","renderTableRow","item","rowIdx","fieldIdx","truncate","origField","origItem","src","alt","label","fieldValue","target","rel","urlLabel","style","backgroundColor","html","htmlCode","dangerouslySetInnerHTML","__html","renderTableCell","put","call","action","idx","icon","delete","renderTableContent","useEffect","clientHeight","window","innerHeight","dataLength","hasMore","loader","Cards","renderActions","cardIdx","renderCard","Fragment","renderRow","renderCardSkeleton","duration","startingIndex","Array","from","renderSkeletons","FormRow","loadedFields","direction","showReset","onChange","onRemove","useState","optionSources","setOptionSources","pageHeaders","addArrayItemLabel","addArrayItem","clearLabel","clearInput","renderArrayItems","originalField","itemIdx","inputField","renderFieldInput","fieldName","updatedArray","localValue","splice","e","removeItemToFieldArray","aria-label","preventDefault","addItemToFieldArray","readonly","changeCallback","inputProps","defaultPlaceholder","placeholder","required","checked","optionSource","preLoad","loadedOption","optionsData","fill","optionDisplay","opt","i","display","fieldname","options","insertPreloadedData","locale","select","option","a","async","actualMethod","result","optionSourceData","valuePath","displayPath","toast","position","POSITION","TOP_CENTER","loadOptionSourceFromRemote","sortBy","finalOptions","sortedOptions","orderBy","placeholders","object","enter_text","number","valueAsNumber","enter_color","email","enter_email","password","enter_password","accept","file","date","enter_date","originalName","QueryParams","initialParams","paginationConfig","submitCallback","setQueryParams","submit","formChanged","submitAfterChange","updatedQueryParams","filteredParams","filter","includes","search","onSubmit","queryParam","portalRoot","getElementById","createElement","setAttribute","append","PortalPopup","el","componentDidMount","appendChild","componentWillUnmount","removeChild","ReactDOM","createPortal","Popup","_handleKeyDown","show","closeCallback","keyCode","closeLabel","closeForm","ref","refCallback","addEventListener","bind","removeEventListener","fileHelpers","fieldIndex","unflatten","FormPopup","getSingleConfig","methodConfig","fieldsCopy","stringify","loading","setLoading","formFields","setFormFields","deleteValues","setDeleteValues","finalRawData","setFinalRawData","submitForm","finalObject","includeOriginalFields","formData","FormData","containFiles","isMultipartForm","validationError","useInUrl","checkIfFieldIsObject","temp","rmVal","fileInput","querySelector","files","firstFile","success","updatedFormFields","saveRemovedValues","delVal","dataTransform","dataPathSplit","lookupValue","objToLookIn","pathElem","lookup","initFormFields","FilterField","toLowerCase","isQueryPaginationState","obj","source","isBodyPaginationState","isQueryPagination","isBodyPagination","GraphHolder","dataMat","prev","prevCallback","nextCallback","zoomIn","zoomInCallback","zoomOut","zoomOutCallback","setHintData","y","setHoverData","hoverData","hintData","setHoverDataWithIndex","index","previous_page","next_page","nameStruct","width","height","xType","onMouseLeave","tickTotal","tickFormat","d","Date","toString","substr","unitMeasure","dataStruct","onValueMouseOver","setHintDataWithIndex","x","background","GraphPopup","graphConfig","doneQuery","setDoneQuery","showGraph","setShowGraph","titleState","setTitleState","graphData","setGraphData","prevGraphData","setPrevGraphData","nextGraphData","setNextGraphData","setNext","setPrev","setZoomIn","setZoomOut","pageNum","setPageNum","totalPages","setTotalPages","setFetchedData","fetchedFeature","setFetchedFeature","setTotalDocs","setLimit","graphChanged","submitGraph","fetchFeatureData","resultsData","fF","f","resultsFeature","pG","tP","tD","fD","fetchedData","totalDocs","buildData","goodFeatures","dataFeatName","dataFeatUnit","ft","comp","dimension","unit","sample","feature","indexFeat","finalData","reverse","buildPrev","tempField","prData","pPage","buildNext","nxData","nPage","wrong_feature_error","no_data_error","graph","_id","buildMain","prPage","nxPage","buildInitQueryParamsAndPaginationState","initQueryParams","initialPagination","descending","find","previous","Page","useParams","useHistory","pageMethods","methods","getAllConfig","getAll","infiniteScroll","getSingle","postConfig","post","putConfig","deleteConfig","addItemLabel","addItem","add","itemName","openGraphLabel","addItemFormTitle","formTitles","editItemFormTitle","update","graphTitle","openedPopup","setOpenedPopup","openedGraph","setOpenedGraph","setPagination","setItems","setFilter","openEditPopup","updateItem","openCustomActionPopup","performAction","fetchPageData","isArray","orderedItems","total","newPaginationState","getUpdatedPaginationState","getAllRequest","confirm","updatedParams","remove","submitQueryParams","reset","paramsToUrl","queryState","newState","nextPath","prevPath","countPath","nextActivePage","pages","p","pIdx","id","parsedParams","QueryString","finalQueryParams","decodeURIComponent","extractQueryParams","description","openGraphPopup","fieldsToFilter","filterable","currentCountFrom","currentCountTo","showing_result","out_of","itemsCount","renderPaginationStateLabel","filteredItems","passFilter","nothing_to_see","newPage","renderItemsUI","renderPageContent","refreshData","AuthPage","user","setUser","pwd","setPwd","tenant","setTenant","openedAddTenant","setOpenedAddTenant","credentials","username","login_error","login_unauthorised_user","setItem","token","addTenant","tokenHead","login","username_suggestion","event","password_suggenstion","tenant_suggenstion","add_tenant","Navigation","isOpened","setIsOpened","to","activeClassName","logout","CustomStyles","cssVars","styles","vars","arr","defaultAppName","changeFavicon","link","oldLink","head","App","setLoadedFields","firstLoad","setFirstLoad","setConfig","appName","loadConfig","windowConfig","RESTool","remoteConfig","ConfigService","loadDefaultConfig","favicon","remoteUrl","validateConfig","tkn","Provider","exact","component","tempLD","preloadData","customStyles","scrollDuration","cosParameter","scrollY","scrollCount","oldTimestamp","performance","now","requestAnimationFrame","step","newTimestamp","Math","PI","scrollTo","round","cos","scrollToTop","autoClose","draggable","Boolean","hostname","match","render","navigator","serviceWorker","ready","then","registration","unregister","freeze","session_expired","full_privileges","module","exports"],"mappings":"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","file":"static/js/main.b6b003ad.chunk.js","sourcesContent":["import { IConfigInputField } from \"../common/models/config.model\";\r\n\r\nclass DataHelpers {\r\n  public extractDataByDataPath(\r\n    data: any,\r\n    dataPath: string,\r\n    attr: string | null = null\r\n  ) {\r\n    if (!data || !dataPath) {\r\n      if (attr) {\r\n        return data[attr];\r\n      }\r\n      return data;\r\n    }\r\n\r\n    let extractedData: any = data;\r\n    const digProps: string[] = dataPath.split(\".\");\r\n\r\n    for (let prop of digProps) {\r\n      if (typeof extractedData[prop] !== \"undefined\") {\r\n        extractedData = extractedData[prop];\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n\r\n    if (typeof extractedData === \"undefined\") {\r\n      return null;\r\n    }\r\n\r\n    if (attr) {\r\n      return extractedData[attr];\r\n    }\r\n\r\n    return extractedData;\r\n  }\r\n\r\n  public checkIfFieldIsObject(field: IConfigInputField): boolean {\r\n    if (field.type === \"object\") {\r\n      return true;\r\n    }\r\n\r\n    if (field.type === \"array\") {\r\n      if (!field.arrayType || field.arrayType === \"object\") {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  public arrayToCSV(objArray: any) {\r\n    const array =\r\n      typeof objArray !== \"object\" ? JSON.parse(objArray) : objArray;\r\n    let str =\r\n      `${Object.keys(array[0])\r\n        .map((value) => `\"${value}\"`)\r\n        .join(\",\")}` + \"\\r\\n\";\r\n\r\n    return array.reduce((str: any, next: any) => {\r\n      str +=\r\n        `${Object.values(next)\r\n          .map((value) => `\"${value}\"`)\r\n          .join(\",\")}` + \"\\r\\n\";\r\n      return str;\r\n    }, str);\r\n  }\r\n}\r\n\r\nexport const dataHelpers = new DataHelpers();","import { toast } from 'react-toastify';\r\nimport locale, { session_expired } from '../common/locale';\r\nimport { TConfigMethod, IQueryParam } from '../common/models/config.model';\r\nimport { dataHelpers } from '../helpers/data.helpers';\r\n\r\nexport type ResponseType = 'json' | 'text' | 'boolean' | 'status';\r\n\r\nexport interface IFetchParams {\r\n  origUrl: string\r\n  method?: TConfigMethod\r\n  headers?: any\r\n  queryParams?: IQueryParam[]\r\n  exactMatch?: boolean\r\n  rawData?: any\r\n  body?: any\r\n  responseType?: ResponseType\r\n}\r\n\r\nclass HttpService {\r\n  public baseUrl: string;\r\n  public loginUrl: string;\r\n  public unauthorizedRedirectUrl: string;\r\n  public errorMessageDataPath: string | string[];\r\n  public requestHeaders: any;\r\n\r\n  constructor(baseUrl: string = '', unauthorizedRedirectUrl: string = '', errorMessageDataPath: string = '', loginUrl: string = '') {\r\n    this.baseUrl = baseUrl || '';\r\n    this.loginUrl = loginUrl || '';\r\n    this.unauthorizedRedirectUrl = unauthorizedRedirectUrl || '';\r\n    this.errorMessageDataPath = errorMessageDataPath || '';\r\n    this.requestHeaders = {};\r\n  }\r\n\r\n  private urlIsAbsolute(url: string) {\r\n    if (url.indexOf('http') === 0 || url.indexOf('https') === 0) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private replaceParamsInUrl(url: string, rawData?: any): string {\r\n    if (!rawData || typeof rawData !== 'object') {\r\n      return url;\r\n    }\r\n\r\n    let outputUrl = url;\r\n\r\n    Object.keys(rawData).forEach((key) => {\r\n      const urlParamName = `:${key}`;\r\n      outputUrl = outputUrl.replace(urlParamName, rawData[key] as string);\r\n    });\r\n\r\n    return outputUrl;\r\n  }\r\n\r\n  private buildUrl(url: string, queryParams: IQueryParam[] = [], exactMatch : boolean = false, rawData?: any): string {\r\n    if (!queryParams || !queryParams.length) {\r\n      return this.replaceParamsInUrl(url, rawData);\r\n    }\r\n\r\n    let outputUrl = url;\r\n    const params = [];\r\n    let page = '-1'\r\n    let limit = '10'\r\n\r\n    for (let param of queryParams) {\r\n      let value = '';\r\n      if (!param.name || typeof param.value === 'undefined') { continue; } \r\n      if (param.name === 'page') { page = param.value; continue; }\r\n      if (param.name === 'limit') { limit = param.value; continue; }\r\n      if (param.name === 'tags' && param.value === \"\") { continue; }\r\n      if (param.name === 'info') value = '{\"$regex\":\"' + param.value + '\",\"$options\":\"i\"}';\r\n      else value = '\"' + param.value + '\"';\r\n      \r\n      if(exactMatch === true)\r\n      {\r\n        params.push(`\"${param.name}\":${value || ''}`);\r\n      }\r\n      else\r\n      {\r\n        params.push(`\"${param.name}\":{\"$regex\" : ${value || ''}}`);\r\n      }\r\n      \r\n      \r\n\r\n    }\r\n\r\n    outputUrl += '?filter={' + params.join(',') + '}';\r\n    if(page != '-1') outputUrl += \"&page=\" + page;\r\n    outputUrl += \"&limit=\" + limit;\r\n\r\n    console.log(\"Requested URL : \"+outputUrl);\r\n\r\n    return outputUrl;\r\n  }\r\n\r\n  private buildRequest(params: IFetchParams): { url: string, params: any } {\r\n    const reqUrl: string = this.urlIsAbsolute(params.origUrl) ? params.origUrl : this.baseUrl + params.origUrl;\r\n    const finalUrl: string = this.buildUrl(reqUrl, params.queryParams,params.exactMatch, params.rawData);\r\n    const authorization = sessionStorage.getItem('diten-token') ? { Authorization: sessionStorage.getItem('diten-token'), } : {};\r\n    const requestParams = {\r\n      method: params.method ? params.method.toUpperCase() : 'GET',\r\n      headers: Object.assign(authorization, this.requestHeaders, params.headers || {}),\r\n      body: params.method === 'post' || params.method === 'put' || params.method === 'patch' ? params.body : undefined\r\n    };\r\n\r\n    return {\r\n      url: finalUrl,\r\n      params: requestParams\r\n    };\r\n  }\r\n\r\n  private async getErrorMessage(res: Response | any): Promise<string> {\r\n    let errorMessage: string = '';\r\n\r\n    try {\r\n      const body = await res.json();\r\n\r\n      for (const path of this.errorMessageDataPath) {\r\n        const dataAtPath = dataHelpers.extractDataByDataPath(body, path);\r\n\r\n        if (dataAtPath) {\r\n          errorMessage = dataAtPath;\r\n        }\r\n      }\r\n    } catch { } // TODO: proper handling of errors (^.^)\r\n\r\n    return errorMessage && errorMessage.length ?\r\n      errorMessage :\r\n      `${res.status} - ${res.statusText || ''}`;\r\n  }\r\n\r\n  private async handleError(res: Response) {\r\n    // In case response status is \"Unauthorized\", redirect to relevant url\r\n\r\n    if (res.status === 401 && this.unauthorizedRedirectUrl) {\r\n      //test\r\n      \r\n      sessionStorage.clear();\r\n\r\n      \r\n\r\n      const redirectUrl: string = this.unauthorizedRedirectUrl.replace(':returnUrl', encodeURIComponent(document.location.href));\r\n      document.location.replace(redirectUrl);\r\n      return;\r\n    }\r\n\r\n    throw new Error(await this.getErrorMessage(res));\r\n  }\r\n\r\n  private async makeRequest(url: string, params: any = {}, responseType: ResponseType = 'json') {\r\n    const res: Response = await fetch(url, Object.assign({}, params, {}));\r\n\r\n    if (res.ok) {\r\n      switch (responseType) {\r\n        case 'json':\r\n          return await res.json();\r\n        case 'text':\r\n          return await res.text();\r\n        case 'boolean':\r\n          return true;\r\n        default:\r\n          return true;\r\n      }\r\n    }\r\n\r\n    await this.handleError(res);\r\n  }\r\n\r\n  public async fetch({ method, origUrl, queryParams, exactMatch, rawData, body, headers, responseType }: IFetchParams) {\r\n    const { url, params } = this.buildRequest({ method, origUrl, queryParams,exactMatch, rawData, body, headers });\r\n    return await this.makeRequest(url, params, responseType);\r\n  }\r\n}\r\n\r\nexport default HttpService;\r\n","import HTTPService from './http.service';\r\nimport { IConfig } from '../common/models/config.model';\r\nimport Ajv from 'ajv';\r\n\r\nconst httpService: HTTPService = new HTTPService();\r\n\r\nclass ConfigService extends HTTPService {\r\n\r\n  public async getRemoteConfig(url: string) {\r\n    if (url.endsWith('.js')) {\r\n      return (await import(/* webpackIgnore: true */url)).default;\r\n    }\r\n    return await httpService.fetch({\r\n      origUrl: url,\r\n    });\r\n  }\r\n\r\n  public async loadDefaultConfig() { return (await this.getRemoteConfig('../../config.js')); }\r\n\r\n  public validateConfig(config: IConfig | null): { isValid: boolean, errorMessage: string | null } {\r\n    if (config === null) {\r\n      return {\r\n        isValid: true,\r\n        errorMessage: null,\r\n      }\r\n    }\r\n    const configSchema = require('../assets/schemas/config.schema.json');\r\n    const ajv = new Ajv({\r\n      allErrors: true,\r\n      verbose: true,\r\n    });\r\n    const validate = ajv.compile(configSchema);\r\n    const isValid = validate(config);\r\n    if (typeof isValid !== 'boolean') {\r\n      throw new Error('Unexpected asynchronous JSON validation');\r\n    }\r\n    if (isValid) {\r\n      return {\r\n        isValid,\r\n        errorMessage: null,\r\n      }\r\n    }\r\n    const firstError = validate.errors ? validate.errors[0] : undefined;\r\n    let errorMessage: string | null = null;\r\n    if (firstError?.message && firstError?.dataPath) {\r\n      errorMessage = `Error parsing configuration at \"${firstError.dataPath}\": ${firstError.message}`\r\n    } else if (firstError?.message) {\r\n      errorMessage = `Error parsing configuration: ${firstError.message}`\r\n    } else if (firstError?.dataPath) {\r\n      errorMessage = `Error parsing configuration at \"${firstError.dataPath}\"`\r\n    } else {\r\n      errorMessage = `Error parsing configuration`;\r\n    }\r\n    console.error(errorMessage);\r\n    console.error('All configuration errors: ', validate.errors);\r\n    return {\r\n      isValid,\r\n      errorMessage,\r\n    };\r\n  }\r\n\r\n}\r\n\r\nexport default new ConfigService();\r\n","import React from 'react';\r\nimport { IConfig, IConfigPage } from '../common/models/config.model';\r\nimport HttpService from '../services/http.service';\r\n\r\nexport interface IAppContext {\r\n  config: IConfig | null\r\n  activePage: IConfigPage | null\r\n  error: string | null\r\n  setError: (error: string | null) => void\r\n  setActivePage: (activePage: IConfigPage | null) => void\r\n  httpService: HttpService\r\n}\r\n\r\nexport const AppContext = React.createContext<IAppContext>({\r\n  config: null,\r\n  activePage: null,\r\n  error: null,\r\n  setError: () => {},\r\n  setActivePage: () => {},\r\n  httpService: new HttpService()\r\n});","import React from 'react';\r\nimport { AppContext } from '../app.context';\r\n\r\nexport const withAppContext = (Component: any) => {\r\n  return (props: any) => (\r\n    <AppContext.Consumer>    \r\n      {(context) => {\r\n        return <Component {...props} context={context} />\r\n      }}\r\n    </AppContext.Consumer>\r\n  );\r\n};","import React from 'react';\r\n\r\nimport './loader.scss';\r\n\r\nexport const Loader = () => {\r\n  return (\r\n    <div className=\"app-loader cp-spinner cp-balls small\"></div>\r\n  );\r\n};","class PaginationHelpers {\r\n  public hasPreviousPage(page: string | number | undefined): boolean {\r\n    if (page === undefined) {\r\n      return false;\r\n    }\r\n\r\n    if (typeof page === 'string') {\r\n      return parseInt(page) > 1;\r\n    }\r\n\r\n    return page > 1;\r\n  }\r\n\r\n  public hasNextPage(_page: string | number, _itemsPerPage: string | number, _total: string | number | undefined): boolean {\r\n    if (_total === undefined) {\r\n      return true;\r\n    }\r\n    const page = typeof _page === 'string' ? parseInt(_page) : _page;\r\n    const itemsPerPage = typeof _itemsPerPage === 'string' ? parseInt(_itemsPerPage) : _itemsPerPage;\r\n    const total = typeof _total === 'string' ? parseInt(_total) : _total;\r\n\r\n    return page * itemsPerPage < total;\r\n  }\r\n}\r\n\r\nexport const paginationHelpers = new PaginationHelpers();","import React from 'react';\r\n\r\nimport './button.scss';\r\n\r\ninterface IProps {\r\n  children: any\r\n  type?: 'submit' | 'button' | 'reset'\r\n  title?: string\r\n  className?: string\r\n  onClick?: (e: any) => void\r\n  color?: 'gray' | 'blue' | 'green' | 'red'\r\n  disabled?: boolean\r\n}\r\n\r\nexport const Button = (props: IProps) => {\r\n  return (\r\n    <button {...props} className={`button ${props.className || ''} ${props.color || ''}`}>{props.children}</button>\r\n  );\r\n};","import React from 'react';\r\n\r\nimport './infiniteLoader.scss';\r\n\r\nexport const InfiniteLoader = () => {\r\n  return (\r\n    <div className=\"app-infinite-loader cp-spinner cp-balls small\"></div>\r\n  );\r\n};","import React from 'react';\r\nimport { ICustomLabels } from '../../common/models/config.model';\r\nimport { IPaginationState } from '../../common/models/states.model';\r\nimport { Button } from '../button/button.comp';\r\n\r\nimport './pagination.scss';\r\n\r\ninterface IProps {\r\n  pagination: IPaginationState\r\n  callbacks: {\r\n    previousPage: () => void,\r\n    nextPage: () => void,\r\n  }\r\n  customLabels?: ICustomLabels\r\n}\r\n\r\nexport const Pagination = ({ callbacks, pagination, customLabels }: IProps) => {\r\n  const previousTitle = customLabels?.pagination?.previousPageTitle || 'Previous page';\r\n  const nextTitle = customLabels?.pagination?.nextPageTitle || 'Next page';\r\n  return (\r\n    <div className=\"pagination-wrapper\">\r\n      <Button disabled={!pagination.hasPreviousPage} onClick={() => callbacks.previousPage()} title={previousTitle}>\r\n        <i className=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n      </Button>\r\n      <Button disabled={!pagination.hasNextPage} onClick={() => callbacks.nextPage()} title={nextTitle}>\r\n        <i className=\"fa fa-arrow-right\" aria-hidden=\"true\" ></i>\r\n      </Button>\r\n    </div>\r\n  );\r\n};","import React, { useEffect } from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\n\r\nimport { IConfigDisplayField, IConfigCustomAction, ICustomLabels } from '../../common/models/config.model';\r\nimport { dataHelpers } from '../../helpers/data.helpers';\r\nimport { Button } from '../button/button.comp';\r\nimport { InfiniteLoader } from '../infiniteLoader/infiniteLoader.comp';\r\nimport { IPaginationState } from '../../common/models/states.model';\r\nimport { Pagination } from '../pagination/pagination.comp';\r\n\r\nimport './table.scss';\r\n\r\ninterface IProps {\r\n  items: any[]\r\n  pagination?: IPaginationState\r\n  callbacks: {\r\n    delete: ((item: any) => void) | null\r\n    put: ((item: any) => void) | null\r\n    action: (item: any, action: IConfigCustomAction) => void\r\n    getPreviousPage: (() => void) | null\r\n    getNextPage: (() => void) | null\r\n  }\r\n  fields: IConfigDisplayField[]\r\n  customActions?: IConfigCustomAction[]\r\n  customLabels?: ICustomLabels\r\n}\r\n\r\nexport const Table = ({ items, fields, pagination, callbacks, customActions, customLabels }: IProps) => {\r\n  const editLabel = customLabels?.buttons?.editItem || 'Edit';\r\n  const deleteLabel = customLabels?.buttons?.deleteItem || 'Delete';\r\n  const actionColumnHeader = customLabels?.tableColumnHeaders?.actions || 'Actions';\r\n  const paginationCallbacks = {\r\n    nextPage: callbacks.getNextPage || (() => { return; }),\r\n    previousPage: callbacks.getPreviousPage || (() => { return; }),\r\n  };\r\n\r\n  function renderTableCell(origField: IConfigDisplayField, origItem: any, value: any) {\r\n    if (origField.type === 'boolean') {\r\n      value = value ? true : false;\r\n    }\r\n\r\n    if (value && typeof value === 'object') {\r\n      return 'object';\r\n    }\r\n\r\n    switch (origField.type) {\r\n      case 'text':\r\n        return <span>{value}</span>;\r\n      case 'boolean':\r\n        return <div className={`bool ${value ? 'true' : 'false'}`}></div>;\r\n      case 'image':\r\n        return <img src={value || ''} alt={value || origField.label || origField.name} />;\r\n      case 'url':\r\n        let url: string = origField.url || value || '';\r\n\r\n        // Replace all url vars\r\n        fields.forEach((field) => {\r\n          const fieldValue = dataHelpers.extractDataByDataPath(origItem, field.dataPath, field.name);\r\n          url = url.replace(`:${field.name}`, fieldValue);\r\n        });\r\n\r\n        return <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{origField.urlLabel || value}</a>;\r\n      case 'colorbox':\r\n        return <div className=\"colorbox\" style={{ backgroundColor: value }}></div>;\r\n      case 'html':\r\n        const htmlCode = origField.htmlCode || '<span>{value}</span>';\r\n        const html =  htmlCode.replace('{value}', value);\r\n        return <div dangerouslySetInnerHTML={{__html: html}}></div>\r\n      default:\r\n        return value;\r\n    }\r\n  }\r\n\r\n  function renderTableRow(item: any, rowIdx: number) {\r\n    return (\r\n      <tr key={`tr_${rowIdx}`}>\r\n        {\r\n          fields.map((field, fieldIdx) => {\r\n            const value = dataHelpers.extractDataByDataPath(item, field.dataPath, field.name);\r\n            return (\r\n              <td className={field.truncate ? 'truncate' : ''} key={`td_${rowIdx}_${fieldIdx}`}>\r\n                {renderTableCell(field, item, value)}\r\n              </td>\r\n            );\r\n          })\r\n        }\r\n        <td>\r\n          <div className=\"actions-wrapper\">\r\n            {\r\n              callbacks.put &&\r\n              <Button onClick={() => callbacks.put?.(item)} title={editLabel}>\r\n                <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i>\r\n              </Button>\r\n            }\r\n            {\r\n              (customActions && customActions.length > 0) &&\r\n              customActions.map((action, idx) => (\r\n                <Button key={`action_${rowIdx}_${idx}`} onClick={() => callbacks.action(item, action)} title={action.name}>\r\n                  <i className={`fa fa-${action.icon || 'cogs'}`} aria-hidden=\"true\"></i>\r\n                </Button>\r\n              ))\r\n            }\r\n            {\r\n              callbacks.delete &&\r\n              <Button onClick={() => callbacks.delete?.(item)} title={deleteLabel}>\r\n                <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n              </Button>\r\n            }\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n\r\n  function renderTableContent() {\r\n    return (\r\n      <table className=\"pure-table\">\r\n        <thead>\r\n          <tr>\r\n            {\r\n              fields.map((field) => {\r\n                return <th key={`th_${field.name}`}>{field.label || field.name}</th>;\r\n              })\r\n            }\r\n            <th>{actionColumnHeader}</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n            items.map(renderTableRow)\r\n          }\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (\r\n      pagination?.type === 'infinite-scroll'\r\n      && document.body.clientHeight <= window.innerHeight\r\n      && pagination?.hasNextPage\r\n    ) {\r\n      paginationCallbacks.nextPage();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  if (pagination?.type === 'infinite-scroll') {\r\n    return (\r\n      <InfiniteScroll\r\n        dataLength={items.length}\r\n        next={callbacks.getNextPage || (() => null)}\r\n        hasMore={pagination?.hasNextPage || false}\r\n        loader={<InfiniteLoader />}\r\n      >\r\n        {renderTableContent()}\r\n      </InfiniteScroll>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"table-wrapper\">\r\n      {renderTableContent()}\r\n      {\r\n        pagination &&\r\n        pagination.type === 'buttons' &&\r\n        <Pagination\r\n          callbacks={paginationCallbacks}\r\n          pagination={pagination}\r\n          customLabels={customLabels}\r\n        ></Pagination>\r\n      }\r\n    </div >\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport Skeleton from 'react-loading-skeleton';\r\n\r\nimport { IConfigDisplayField, IConfigCustomAction, ICustomLabels } from '../../common/models/config.model';\r\nimport { IPaginationState } from '../../common/models/states.model';\r\nimport { dataHelpers } from '../../helpers/data.helpers';\r\nimport { Button } from '../button/button.comp';\r\nimport { Pagination } from '../pagination/pagination.comp';\r\n\r\nimport './cards.scss';\r\n\r\ninterface IProps {\r\n  items: any[]\r\n  pagination?: IPaginationState\r\n  callbacks: {\r\n    delete: ((item: any) => void) | null\r\n    put: ((item: any) => void) | null\r\n    action: (item: any, action: IConfigCustomAction) => void\r\n    getNextPage: (() => void) | null\r\n    getPreviousPage: (() => void) | null\r\n  }\r\n  fields: IConfigDisplayField[]\r\n  customActions?: IConfigCustomAction[]\r\n  customLabels?: ICustomLabels\r\n}\r\n\r\nexport const Cards = ({ items, fields, callbacks, customActions, customLabels, pagination }: IProps) => {\r\n  const editLabel: string = customLabels?.buttons?.editItem || 'Edit';\r\n  const deleteLabel: string = customLabels?.buttons?.deleteItem || 'Delete';\r\n  const paginationCallbacks = {\r\n    nextPage: callbacks.getNextPage || (() => { return; }),\r\n    previousPage: callbacks.getPreviousPage || (() => { return; }),\r\n  };\r\n\r\n  function renderRow(origField: IConfigDisplayField, origItem: any, value: any) {\r\n    if (origField.type === 'boolean') {\r\n      value = value ? true : false;\r\n    }\r\n\r\n    if (value && typeof value === 'object') {\r\n      return 'object';\r\n    }\r\n\r\n    switch (origField.type) {\r\n      case 'text':\r\n        return <span>{value}</span>;\r\n      case 'boolean':\r\n        return <div className={`bool ${value ? 'true' : 'false'}`}></div>;\r\n      case 'image':\r\n        if (!value) {\r\n          return <React.Fragment></React.Fragment>;\r\n        }\r\n        return <img src={value || ''} alt={value || origField.label || origField.name} />;\r\n      case 'url':\r\n        let url: string = origField.url || value || '';\r\n\r\n        // Replace all url vars\r\n        fields.forEach((field) => {\r\n          const fieldValue = dataHelpers.extractDataByDataPath(origItem, field.dataPath, field.name);\r\n          url = url.replace(`:${field.name}`, fieldValue);\r\n        });\r\n\r\n        return <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{origField.urlLabel || value}</a>;\r\n      case 'colorbox':\r\n        return <div className=\"colorbox\" style={{ backgroundColor: value }}></div>;\r\n      case 'html':\r\n        const htmlCode = origField.htmlCode || '<span>{value}</span>';\r\n        const html =  htmlCode.replace('{value}', value);\r\n        return <div dangerouslySetInnerHTML={{__html: html}}></div>\r\n      default:\r\n        return value;\r\n    }\r\n  }\r\n\r\n  function renderActions(item: any, cardIdx: number) {\r\n    return (\r\n      <div className=\"actions-wrapper\">\r\n        {\r\n          callbacks.put &&\r\n          <Button onClick={() => callbacks.put?.(item)} title={editLabel}>\r\n            <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i>\r\n          </Button>\r\n        }\r\n        {\r\n          (customActions && customActions.length > 0) &&\r\n          customActions.map((action, idx) => (\r\n            <Button key={`action_${cardIdx}_${idx}`} onClick={() => callbacks.action(item, action)} title={action.name}>\r\n              <i className={`fa fa-${action.icon || 'cogs'}`} aria-hidden=\"true\"></i>\r\n            </Button>\r\n          ))\r\n        }\r\n        {\r\n          callbacks.delete &&\r\n          <Button onClick={() => callbacks.delete?.(item)} title={deleteLabel}>\r\n            <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n          </Button>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function renderCard(item: any, cardIdx: number) {\r\n    return (\r\n      <div className=\"card\" key={`card_${cardIdx}`}>\r\n        {\r\n          fields.map((field, fieldIdx) => {\r\n            const value = dataHelpers.extractDataByDataPath(item, field.dataPath, field.name);\r\n            return (\r\n              <div className={`card-row ${field.type}`} key={`card_${cardIdx}_${fieldIdx}`}>\r\n                {\r\n                  field.type !== 'image' &&\r\n                  <label>{field.label || field.name}: </label>\r\n                }\r\n                {renderRow(field, item, value)}\r\n              </div>\r\n            );\r\n          })\r\n        }\r\n        {renderActions(item, cardIdx)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function renderCardSkeleton(cardIdx: number) {\r\n    return (\r\n      <div className=\"card\" key={`card_${cardIdx}`}>\r\n        {\r\n          fields.map((field, fieldIdx) => {\r\n            return (\r\n              <div className={`card-row ${field.type}`} key={`card_${cardIdx}_${fieldIdx}`}>\r\n                {\r\n                  field.type !== 'image' &&\r\n                  <label>{field.label || field.name}: </label>\r\n                }\r\n                <Skeleton duration={0.6} />\r\n              </div>\r\n            );\r\n          })\r\n        }\r\n        {renderActions({}, cardIdx)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function renderSkeletons() {\r\n    const startingIndex = items.length;\r\n    const skeletonsIndexes = Array.from(Array(pagination?.limit).keys()).map(value => value + startingIndex);\r\n    return skeletonsIndexes.map(renderCardSkeleton);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (\r\n      pagination?.type === 'infinite-scroll'\r\n      && document.body.clientHeight <= window.innerHeight\r\n      && callbacks.getNextPage\r\n      && pagination?.hasNextPage\r\n    ) {\r\n      callbacks.getNextPage();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  if (pagination?.type === 'infinite-scroll') {\r\n    return (\r\n      <InfiniteScroll className=\"cards-wrapper\"\r\n        dataLength={items.length}\r\n        next={callbacks.getNextPage || (() => null)}\r\n        hasMore={pagination?.hasNextPage || false}\r\n        loader={renderSkeletons()}\r\n      >\r\n        {items.map(renderCard)}\r\n      </InfiniteScroll>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"cards-wrapper\">\r\n        {items.map(renderCard)}\r\n      </div>\r\n      {\r\n        pagination &&\r\n        pagination.type === 'buttons' &&\r\n        <Pagination\r\n          callbacks={paginationCallbacks}\r\n          pagination={pagination}\r\n        ></Pagination>\r\n      }\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { orderBy } from \"natural-orderby\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nimport {\r\n  IConfigInputField,\r\n  IConfigOptionSource,\r\n  ICustomLabels,\r\n} from \"../../common/models/config.model\";\r\nimport { Button } from \"../button/button.comp\";\r\nimport { withAppContext } from \"../withContext/withContext.comp\";\r\nimport { IAppContext } from \"../app.context\";\r\nimport { dataHelpers } from \"../../helpers/data.helpers\";\r\nimport locale from \"../../common/locale.js\";\r\n\r\nimport \"./formRow.scss\";\r\nimport { stringify } from \"query-string\";\r\n\r\ninterface ILoadedFields {\r\n  fieldName: string;\r\n  values: Array<string>;\r\n}\r\n\r\ninterface IOption {\r\n  display: string;\r\n  value: string;\r\n}\r\n\r\ninterface IProps {\r\n  context: IAppContext;\r\n  field: IConfigInputField;\r\n  loadedFields: ILoadedFields[];\r\n  onChange: (\r\n    fieldName: string,\r\n    value: any,\r\n    submitAfterChange?: boolean\r\n  ) => void;\r\n  onRemove: (fieldName: string, value: any) => void;\r\n  showReset?: boolean;\r\n  direction?: \"row\" | \"column\";\r\n}\r\n\r\nexport const FormRow = withAppContext(\r\n  ({\r\n    context,\r\n    field,\r\n    loadedFields,\r\n    direction,\r\n    showReset,\r\n    onChange,\r\n    onRemove,\r\n  }: IProps) => {\r\n    const [optionSources, setOptionSources] = useState<any>({});\r\n    const [loadedOptionSources, setLoadedOptionSources] = useState<any>();\r\n    const { httpService, activePage, config } = context;\r\n    const pageHeaders: any = activePage?.requestHeaders || {};\r\n    const customLabels: ICustomLabels | undefined = {\r\n      ...config?.customLabels,\r\n      ...activePage?.customLabels,\r\n    };\r\n    const addArrayItemLabel = customLabels?.buttons?.addArrayItem || \"Add Item\";\r\n    const clearLabel = customLabels?.buttons?.clearInput || \"Clear\";\r\n\r\n    function insertPreloadedData(\r\n      fieldName: string,\r\n      optionSource: IConfigOptionSource\r\n    ) {\r\n      var optionsData = Array<string>(0).fill(\"\");\r\n\r\n      console.log(\"loaded\");\r\n      console.log(loadedFields);\r\n      loadedFields.map((e) => {\r\n        if (e.fieldName === optionSource.name) optionsData = e.values;\r\n      });\r\n\r\n      console.log(optionsData);\r\n\r\n      var optionDisplay = new Array<IOption>(optionsData.length);\r\n      optionsData.map((opt: string, i: number) => {\r\n        optionDisplay[i] = { display: opt, value: opt };\r\n      });\r\n\r\n      console.log(optionDisplay);\r\n      //const temp = { [fieldName]: optionDisplay };\r\n\r\n      //setLoadedOptionSources(temp);\r\n      return { fieldname: fieldName, options: optionDisplay };\r\n    }\r\n    async function loadOptionSourceFromRemote(\r\n      fieldName: string,\r\n      optionSource: IConfigOptionSource\r\n    ) {\r\n      try {\r\n        const {\r\n          url,\r\n          dataPath,\r\n          preLoad,\r\n          actualMethod,\r\n          requestHeaders,\r\n        } = optionSource;\r\n\r\n        if (!url && !preLoad) {\r\n          throw new Error(\r\n            `URL option source (for field \"${fieldName}\") is empty.`\r\n          );\r\n        }\r\n\r\n        const result = await httpService.fetch({\r\n          method: actualMethod || \"get\",\r\n          origUrl: url,\r\n          queryParams: [],\r\n          headers: Object.assign({}, pageHeaders, requestHeaders || {}),\r\n        });\r\n\r\n        const extractedData = dataHelpers.extractDataByDataPath(\r\n          result,\r\n          dataPath\r\n        );\r\n\r\n        if (!extractedData || !extractedData.length) {\r\n          throw new Error(\r\n            `Option source data is empty (for field \"${fieldName}\")`\r\n          );\r\n        }\r\n\r\n        // Map option source to fields\r\n        const optionSourceData = extractedData.map(\r\n          (option: any, idx: number) => {\r\n            const { valuePath, displayPath } = optionSource;\r\n\r\n            if (typeof option === \"string\") {\r\n              return option;\r\n            }\r\n\r\n            return {\r\n              display:\r\n                displayPath && option[displayPath]\r\n                  ? option[displayPath]\r\n                  : `Option ${idx + 1}`,\r\n              value:\r\n                valuePath && option[valuePath] ? option[valuePath] : `${idx}`,\r\n            };\r\n          }\r\n        );\r\n\r\n        console.log(optionSourceData);\r\n        setOptionSources({\r\n          ...optionSources,\r\n          [fieldName]: optionSourceData,\r\n        });\r\n      } catch (e) {\r\n        toast.error(e.message, {\r\n          position: toast.POSITION.TOP_CENTER,\r\n        });\r\n      }\r\n    }\r\n\r\n    function addItemToFieldArray(e: any, originalField: IConfigInputField) {\r\n      e.preventDefault();\r\n\r\n      onChange(field.name, [...(originalField.value || []), \"\"]);\r\n    }\r\n\r\n    function removeItemToFieldArray(\r\n      originalField: IConfigInputField,\r\n      idx: number\r\n    ) {\r\n      const updatedArray = [...(originalField.value || [])];\r\n\r\n      const test = updatedArray.splice(idx, 1);\r\n\r\n      test.forEach((e) => {\r\n        onRemove(field.name, e);\r\n      });\r\n\r\n      onChange(field.name, updatedArray);\r\n    }\r\n\r\n    function renderArrayItems(originalField: IConfigInputField) {\r\n      const array: any[] = originalField.value || [];\r\n\r\n      return (\r\n        <div className=\"array-form\">\r\n          {array.map((item, itemIdx) => {\r\n            const inputField = renderFieldInput(\r\n              {\r\n                value: item,\r\n                name: `${originalField.name}.${itemIdx}`,\r\n              } as IConfigInputField,\r\n              (fieldName, value) => {\r\n                const updatedArray = (originalField.value || []).map(\r\n                  (localValue: any, idx: number) => {\r\n                    if (idx === itemIdx) {\r\n                      return value;\r\n                    }\r\n                    return localValue;\r\n                  }\r\n                );\r\n\r\n                onChange(originalField.name, updatedArray);\r\n              }\r\n            );\r\n\r\n            return (\r\n              <div className=\"array-form-item\" key={`array_form_${itemIdx}`}>\r\n                {inputField}\r\n                <i\r\n                  title={clearLabel}\r\n                  onClick={() => removeItemToFieldArray(originalField, itemIdx)}\r\n                  aria-label=\"Remove\"\r\n                  className=\"clear-input fa fa-times\"\r\n                ></i>\r\n              </div>\r\n            );\r\n          })}\r\n          <Button\r\n            className=\"add-array-item\"\r\n            onClick={(e) => addItemToFieldArray(e, originalField)}\r\n            title={addArrayItemLabel}\r\n            disabled={originalField.disabled || originalField.readonly}\r\n          >\r\n            <i className=\"fa fa-plus\" aria-hidden=\"true\"></i>\r\n          </Button>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    function renderFieldInput(\r\n      field: IConfigInputField,\r\n      changeCallback: (\r\n        fieldName: string,\r\n        value: any,\r\n        submitAfterChange?: boolean\r\n      ) => void\r\n    ) {\r\n      const inputProps = (defaultPlaceholder: string = \"\") => {\r\n        return {\r\n          value: field.value,\r\n          placeholder: field.placeholder || defaultPlaceholder,\r\n          disabled: field.readonly || field.disabled,\r\n          required: field.required,\r\n          onChange: (e: any) => changeCallback(field.name, e.target.value),\r\n        };\r\n      };\r\n\r\n      switch (field.type) {\r\n        case \"boolean\":\r\n          return (\r\n            <input\r\n              type=\"checkbox\"\r\n              {...inputProps()}\r\n              checked={field.value}\r\n              onChange={(e) =>\r\n                changeCallback(field.name, e.target.checked, true)\r\n              }\r\n            />\r\n          );\r\n        case \"select\": {\r\n          const { optionSource } = field;\r\n\r\n          if (optionSource && optionSource.preLoad) {\r\n            const loadedOption = insertPreloadedData(field.name, optionSource);\r\n            console.log(loadedOption);\r\n\r\n            return (\r\n              <select {...inputProps()}>\r\n                <option>{locale.select}</option>\r\n                {loadedOption.options.map((option, idx) => {\r\n                  const key = `option_${idx}_`;\r\n                  return (\r\n                    <option key={`${key}_${option.value}`} value={option.value}>\r\n                      {option.display || option.value}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            );\r\n          } else {\r\n            if (optionSource && !optionSources[field.name]) {\r\n              loadOptionSourceFromRemote(field.name, optionSource);\r\n              return (\r\n                <select {...inputProps()}>\r\n                  <option>-- Loading Options... --</option>\r\n                </select>\r\n              );\r\n            }\r\n\r\n            const sortBy = field.optionSource?.sortBy;\r\n            const finalOptions: { value: string; display: string }[] =\r\n              optionSources[field.name] || field.options || [];\r\n            const sortedOptions = orderBy(\r\n              finalOptions,\r\n              typeof sortBy === \"string\" ? [sortBy] : sortBy || []\r\n            );\r\n\r\n            console.log(\"final option\");\r\n            console.log(finalOptions);\r\n\r\n            console.log(\"sorted option\");\r\n            console.log(sortedOptions);\r\n\r\n            return (\r\n              <select {...inputProps()}>\r\n                <option>{locale.select}</option>\r\n                {sortedOptions.map((option, idx) => {\r\n                  const key = `option_${idx}_`;\r\n                  if (typeof option !== \"object\") {\r\n                    return (\r\n                      <option key={`${key}_${option}`} value={option}>\r\n                        {option}\r\n                      </option>\r\n                    );\r\n                  }\r\n                  return (\r\n                    <option key={`${key}_${option.value}`} value={option.value}>\r\n                      {option.display || option.value}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            );\r\n          }\r\n        }\r\n        case \"object\":\r\n          return (\r\n            <textarea\r\n              {...inputProps(\r\n                customLabels?.placeholders?.object || \"Enter JSON...\"\r\n              )}\r\n            ></textarea>\r\n          );\r\n        case \"array\": {\r\n          const { arrayType, value } = field;\r\n          if (!value || !arrayType || arrayType === \"object\") {\r\n            return (\r\n              <textarea\r\n                {...inputProps(\r\n                  customLabels?.placeholders?.array || \"Enter JSON array...\"\r\n                )}\r\n              ></textarea>\r\n            );\r\n          }\r\n          return renderArrayItems(field);\r\n        }\r\n        case \"long-text\":\r\n          return (\r\n            <textarea\r\n              {...inputProps(\r\n                customLabels?.placeholders?.text || locale.enter_text\r\n              )}\r\n            ></textarea>\r\n          );\r\n        case \"number\":\r\n        case \"integer\":\r\n          return (\r\n            <input\r\n              type=\"number\"\r\n              {...inputProps(customLabels?.placeholders?.number || \"0\")}\r\n              onChange={(e) =>\r\n                changeCallback(field.name, e.target.valueAsNumber)\r\n              }\r\n            />\r\n          );\r\n        case \"color\":\r\n          return (\r\n            <input\r\n              type=\"color\"\r\n              {...inputProps(\r\n                customLabels?.placeholders?.color || locale.enter_color\r\n              )}\r\n            />\r\n          );\r\n        case \"email\":\r\n          return (\r\n            <input\r\n              type=\"email\"\r\n              {...inputProps(\r\n                customLabels?.placeholders?.email || locale.enter_email\r\n              )}\r\n            />\r\n          );\r\n        case \"password\":\r\n          return (\r\n            <input\r\n              type=\"password\"\r\n              {...inputProps(\r\n                customLabels?.placeholders?.password || locale.enter_password\r\n              )}\r\n            />\r\n          );\r\n        case \"hidden\":\r\n          return <input type=\"hidden\" value={field.value} />;\r\n        case \"file\":\r\n          return (\r\n            <input\r\n              type=\"file\"\r\n              accept={field.accept || \"*\"}\r\n              placeholder={\r\n                field.placeholder ||\r\n                customLabels?.placeholders?.file ||\r\n                \"Select file...\"\r\n              }\r\n              name={field.name || \"file\"}\r\n              disabled={field.readonly}\r\n              required={field.required}\r\n            />\r\n          );\r\n        case \"note\":\r\n          return <p className=\"note\">{field.value}</p>;\r\n        case \"date\":\r\n          return (\r\n            <input\r\n              type=\"date\"\r\n              {...inputProps(\r\n                customLabels?.placeholders?.date || locale.enter_date\r\n              )}\r\n            />\r\n          );\r\n        case \"text\":\r\n        default:\r\n          return (\r\n            <input\r\n              type=\"text\"\r\n              {...inputProps(\r\n                customLabels?.placeholders?.text || locale.enter_text\r\n              )}\r\n            />\r\n          );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className={`form-row ${direction || \"row\"}`}>\r\n        {field.type !== \"hidden\" && (\r\n          <label>\r\n            {field.label || field.originalName}\r\n            {field.required ? \" *\" : \"\"}\r\n          </label>\r\n        )}\r\n        {renderFieldInput(field, onChange)}\r\n        {showReset &&\r\n          !field.readonly &&\r\n          !field.disabled &&\r\n          field.value &&\r\n          field.value.length > 0 && (\r\n            <i\r\n              title={clearLabel}\r\n              onClick={() => onChange(field.name, \"\", true)}\r\n              aria-label=\"Clear\"\r\n              className=\"clear-input fa fa-times\"\r\n            ></i>\r\n          )}\r\n        <ToastContainer />\r\n      </div>\r\n    );\r\n  }\r\n);\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport {\r\n  IConfigInputField,\r\n  IConfigPagination,\r\n} from \"../../common/models/config.model\";\r\nimport { FormRow } from \"../formRow/formRow.comp\";\r\nimport { Button } from \"../button/button.comp\";\r\nimport locale from \"../../common/locale.js\";\r\n\r\nimport \"./queryParams.scss\";\r\n\r\ninterface IProps {\r\n  initialParams: IConfigInputField[];\r\n  paginationConfig?: IConfigPagination;\r\n  submitCallback: (queryParams: IConfigInputField[], reset?: boolean) => void;\r\n}\r\n\r\nexport const QueryParams = ({\r\n  initialParams,\r\n  paginationConfig,\r\n  submitCallback,\r\n}: IProps) => {\r\n  const [queryParams, setQueryParams] = useState<IConfigInputField[]>(\r\n    initialParams\r\n  );\r\n\r\n  function submit(e?: any) {\r\n    if (e) {\r\n      e.preventDefault();\r\n    }\r\n    if (paginationConfig && paginationConfig.type === \"infinite-scroll\") {\r\n      submitCallback(queryParams, true);\r\n    } else {\r\n      submitCallback(queryParams);\r\n    }\r\n  }\r\n\r\n  function formChanged(\r\n    fieldName: string,\r\n    value: any,\r\n    submitAfterChange?: boolean\r\n  ) {\r\n    const updatedQueryParams: IConfigInputField[] = [...queryParams].map(\r\n      (field) => {\r\n        if (field.name === fieldName) {\r\n          field.value = value;\r\n        }\r\n        return field;\r\n      }\r\n    );\r\n    setQueryParams(updatedQueryParams);\r\n    if (submitAfterChange) {\r\n      submit();\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (paginationConfig && paginationConfig.type === \"infinite-scroll\") {\r\n      const filteredParams = initialParams.filter(\r\n        (param) => ![\"page\", \"limit\"].includes(param.name)\r\n      );\r\n      setQueryParams(filteredParams);\r\n    } else {\r\n      setQueryParams(initialParams);\r\n    }\r\n  }, [paginationConfig, initialParams]);\r\n  if (!queryParams.length) {\r\n    return <React.Fragment></React.Fragment>;\r\n  }\r\n\r\n  return (\r\n    <section className=\"query-params-form\">\r\n      <h5>{locale.search}</h5>\r\n      <form onSubmit={submit}>\r\n        {queryParams.map((queryParam, idx) => {\r\n          if (queryParam.name == \"page\") return \"\";\r\n          //if (queryParam.hidden) return \"\";\r\n          return (\r\n            <FormRow\r\n              key={`query_param_${idx}`}\r\n              field={queryParam}\r\n              onChange={formChanged}\r\n              showReset={!queryParam.type || queryParam.type === \"text\"}\r\n            />\r\n          );\r\n        })}\r\n        <Button type=\"submit\" onClick={submit}>\r\n          {locale.submit}\r\n        </Button>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n","import React, { Component, RefObject, ReactChild } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './popup.scss';\r\nimport { ICustomLabels } from '../../common/models/config.model';\r\n\r\ninterface IPopupProps {\r\n  className?: string\r\n  style?: any\r\n  show: boolean\r\n  closeCallback: any\r\n  children: ReactChild\r\n  refCallback?: string | ((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null | undefined\r\n  customLabels?: ICustomLabels\r\n}\r\n\r\nlet portalRoot: HTMLDivElement = document.getElementById('popup-portal') as HTMLDivElement;\r\nif (!portalRoot) {\r\n  portalRoot = document.createElement('div');\r\n  portalRoot.setAttribute('id', 'popup-portal');\r\n  document.body.append(portalRoot);\r\n}\r\n\r\nclass PortalPopup extends Component {\r\n  private el: HTMLElement;\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.el = document.createElement('div');\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    portalRoot.appendChild(this.el);\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    portalRoot.removeChild(this.el);\r\n  }\r\n\r\n  render() {\r\n    return ReactDOM.createPortal(this.props.children, this.el);\r\n  }\r\n}\r\n\r\nexport class Popup extends Component<IPopupProps> {\r\n  render() {\r\n    const style: any = Object.assign({}, { display: this.props.show ? 'block' : 'none' }, this.props.style || {});\r\n    const closeLabel = this.props.customLabels?.buttons?.closeForm || 'Close';\r\n\r\n    return (\r\n      <PortalPopup>\r\n        {\r\n          this.props.show ?\r\n            <div className={`popup ${this.props.className || ''}`} style={style}>\r\n              <div className=\"overlay\" onClick={(e: any) => this.props.closeCallback(e)}></div>\r\n              <div className=\"popup-content\" ref={this.props.refCallback}>\r\n                {this.props.children}\r\n                <button title={closeLabel} className=\"close-popup\" onClick={(e: any) => this.props.closeCallback(e)}>\r\n                  <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n                </button>\r\n              </div>\r\n            </div> :\r\n            null\r\n        }\r\n      </PortalPopup>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('keydown', this._handleKeyDown.bind(this));\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('keydown', this._handleKeyDown.bind(this));\r\n  }\r\n\r\n  _handleKeyDown = (e: KeyboardEvent) => {\r\n    const { show, closeCallback } = this.props;\r\n\r\n    if (show && e.keyCode === 27) {\r\n      closeCallback(e);\r\n    }\r\n  }\r\n};","import { IConfigInputField } from '../common/models/config.model';\r\n\r\nclass FileHelpers {\r\n\r\n  public isMultipartForm(fields: IConfigInputField[]): boolean {\r\n    for (const fieldIndex in fields) {\r\n      let field = fields[fieldIndex];\r\n\r\n      if (field.type === 'file') {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  \r\n}\r\n\r\nexport const fileHelpers = new FileHelpers();","import React, { useState, useEffect } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nimport { Popup } from \"../popup/popup.comp\";\r\nimport {\r\n  IConfigInputField,\r\n  IConfigGetSingleMethod,\r\n  IConfigPostMethod,\r\n  IConfigPutMethod,\r\n  ICustomLabels,\r\n  IQueryParam,\r\n} from \"../../common/models/config.model\";\r\nimport { FormRow } from \"../formRow/formRow.comp\";\r\nimport { Button } from \"../button/button.comp\";\r\nimport { Loader } from \"../loader/loader.comp\";\r\nimport { dataHelpers } from \"../../helpers/data.helpers\";\r\nimport { fileHelpers } from \"../../helpers/file.helpers\";\r\nimport { IAppContext } from \"../app.context\";\r\nimport { withAppContext } from \"../withContext/withContext.comp\";\r\nimport locale from \"../../common/locale\";\r\n\r\nimport \"./formPopup.scss\";\r\n\r\nconst unflatten = require(\"flat\").unflatten;\r\n\r\ninterface ILoadedFields {\r\n  fieldName: string;\r\n  values: Array<string>;\r\n}\r\n\r\ninterface IProps {\r\n  context: IAppContext;\r\n  title: string;\r\n  fields: IConfigInputField[];\r\n  loadedFields: ILoadedFields[];\r\n  type: string;\r\n  rawData?: any;\r\n  getSingleConfig?: IConfigGetSingleMethod;\r\n  methodConfig: IConfigPostMethod | IConfigPutMethod;\r\n  closeCallback: (reloadData: boolean) => void;\r\n  submitCallback: (\r\n    body: any,\r\n    containFiles: boolean,\r\n    queryParams: IQueryParam[]\r\n  ) => void;\r\n}\r\n\r\ninterface IDeleteFields {\r\n  fieldName: string;\r\n  value: string;\r\n}\r\n\r\nexport const FormPopup = withAppContext(\r\n  ({\r\n    context,\r\n    title,\r\n    fields,\r\n    loadedFields,\r\n    rawData,\r\n    type,\r\n    getSingleConfig,\r\n    methodConfig,\r\n    submitCallback,\r\n    closeCallback,\r\n  }: IProps) => {\r\n    const fieldsCopy: IConfigInputField[] = JSON.parse(JSON.stringify(fields));\r\n    const { httpService, activePage, config } = context;\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const [formFields, setFormFields] = useState<IConfigInputField[]>([]);\r\n    const [deleteValues, setDeleteValues] = useState<IDeleteFields[]>([]);\r\n    const [finalRawData, setFinalRawData] = useState<any>(null);\r\n    const pageHeaders: any = activePage?.requestHeaders || {};\r\n    const customLabels: ICustomLabels | undefined = {\r\n      ...config?.customLabels,\r\n      ...activePage?.customLabels,\r\n    };\r\n\r\n    async function initFormFields() {\r\n      let finalRawData: any = rawData || {};\r\n\r\n      if (getSingleConfig && getSingleConfig.url) {\r\n        try {\r\n          const {\r\n            url,\r\n            requestHeaders,\r\n            actualMethod,\r\n            dataPath,\r\n            queryParams,\r\n            responseType,\r\n            dataTransform,\r\n          } = getSingleConfig;\r\n          const result = await httpService.fetch({\r\n            method: actualMethod || \"get\",\r\n            origUrl: url,\r\n            queryParams,\r\n            headers: Object.assign({}, pageHeaders, requestHeaders || {}),\r\n            rawData,\r\n            responseType,\r\n          });\r\n\r\n          let extractedData = dataHelpers.extractDataByDataPath(\r\n            result,\r\n            dataPath\r\n          );\r\n\r\n          if (typeof dataTransform === \"function\") {\r\n            extractedData = await dataTransform(extractedData);\r\n          }\r\n\r\n          if (\r\n            extractedData &&\r\n            (typeof extractedData === \"object\" ||\r\n              typeof extractedData === \"string\")\r\n          ) {\r\n            finalRawData = extractedData;\r\n          }\r\n        } catch (e) {\r\n          console.error(\"Could not load single item's data.\", e);\r\n          toast.error(\"Could not load single item's data.\", {\r\n            position: toast.POSITION.TOP_CENTER,\r\n          });\r\n        }\r\n      }\r\n\r\n      setFinalRawData(finalRawData); // Store the raw data for later.\r\n\r\n      setFormFields(\r\n        fieldsCopy.map((field) => {\r\n          let key = field.name;\r\n\r\n          field.originalName = field.name;\r\n\r\n          let dataPathSplit: string[] = [];\r\n\r\n          if (field.dataPath) {\r\n            dataPathSplit = field.dataPath.split(\".\");\r\n            key = `${field.dataPath}.${field.name}`;\r\n          }\r\n\r\n          const lookup = () => {\r\n            let objToLookIn = finalRawData;\r\n            for (const pathElem of dataPathSplit) {\r\n              if (\r\n                objToLookIn[pathElem] !== undefined &&\r\n                objToLookIn[pathElem] !== null\r\n              ) {\r\n                objToLookIn = objToLookIn[pathElem];\r\n              } else {\r\n                return undefined;\r\n              }\r\n            }\r\n            return objToLookIn[field.name];\r\n          };\r\n\r\n          const lookupValue = lookup();\r\n\r\n          // Changing field name to include datapath\r\n          // This will use us later for unflatten the final object\r\n          field.name = key;\r\n\r\n          if (dataHelpers.checkIfFieldIsObject(field)) {\r\n            if (lookupValue || field.value) {\r\n              field.value =\r\n                JSON.stringify(lookupValue || field.value, null, \"  \") || \"\";\r\n            }\r\n            return field;\r\n          }\r\n\r\n          if (field.type === \"array\") {\r\n            field.value = lookupValue || field.value || [];\r\n            return field;\r\n          }\r\n\r\n          if (typeof lookupValue !== \"undefined\") {\r\n            field.value = lookupValue;\r\n          } else {\r\n            // important in order to prevent controlled / uncontrolled components error\r\n            field.value = typeof field.value === \"undefined\" ? \"\" : field.value;\r\n          }\r\n\r\n          if (\r\n            (field.type === \"long-text\" || field.type === \"text\") &&\r\n            typeof finalRawData === \"string\"\r\n          ) {\r\n            field.value = finalRawData;\r\n          }\r\n\r\n          return field;\r\n        })\r\n      );\r\n\r\n      setLoading(false);\r\n    }\r\n\r\n    async function submitForm(e: any) {\r\n      e.preventDefault();\r\n\r\n      const finalObject: any = (methodConfig as IConfigPutMethod)\r\n        .includeOriginalFields\r\n        ? Object.assign({}, finalRawData)\r\n        : {};\r\n      const formData = new FormData();\r\n      const containFiles: boolean = fileHelpers.isMultipartForm(formFields);\r\n      let validationError = null;\r\n\r\n      var queryParams: IQueryParam[] = [];\r\n\r\n      formFields.forEach((field) => {\r\n        if (field.type === \"file\") {\r\n          const fileInput: any = document.querySelector(\r\n            `input[name=\"${field.name || \"file\"}\"]`\r\n          ) as HTMLInputElement;\r\n\r\n          if (fileInput.files.length > 0) {\r\n            const firstFile = fileInput.files[0];\r\n            formData.append(field.name || \"file\", firstFile, firstFile.name);\r\n          }\r\n          return;\r\n        }\r\n\r\n        finalObject[field.name] = field.value;\r\n\r\n        if (containFiles && !field.useInUrl) {\r\n          formData.append(field.name, field.value);\r\n        }\r\n\r\n        // eslint-disable-next-line eqeqeq\r\n        if (\r\n          field.required &&\r\n          field.type !== \"boolean\" &&\r\n          !field.value &&\r\n          field.value != 0\r\n        ) {\r\n          validationError = \"Please fill up all required fields.\";\r\n        }\r\n\r\n        if (dataHelpers.checkIfFieldIsObject(field) && field.value) {\r\n          try {\r\n            finalObject[field.name] = JSON.parse(field.value);\r\n          } catch (e) {\r\n            validationError = `Invalid JSON for field \"${field.name}\".`;\r\n          }\r\n        }\r\n\r\n        if (field.disabled === true) {\r\n          delete finalObject[field.name];\r\n          console.log(finalObject);\r\n        }\r\n\r\n        if (field.type === \"boolean\") {\r\n          finalObject[field.name] = field.value || false;\r\n        }\r\n\r\n        if (\r\n          type !== \"add\" &&\r\n          field.type === \"array\" &&\r\n          field.arrayType === \"text\"\r\n        ) {\r\n          var temp = \"{\";\r\n\r\n          var rmVal = deleteValues.filter((e) => e.fieldName === field.name);\r\n          rmVal = rmVal.filter((e) => e.value !== \"\");\r\n\r\n          console.log(rmVal);\r\n\r\n          if (field.value.length !== 0) {\r\n            temp += ` \"add\": [\"` + field.value.join('\" , \"') + `\"]`;\r\n          }\r\n          if (field.value.length !== 0 && rmVal.length !== 0) {\r\n            temp += \",\";\r\n          }\r\n          if (rmVal.length !== 0) {\r\n            temp +=\r\n              `\"remove\": [\"` + rmVal.map((e) => e.value).join('\" , \"') + `\"]`;\r\n          }\r\n          temp += \"}\";\r\n\r\n          finalObject[field.name] = JSON.parse(temp);\r\n        }\r\n\r\n        if (field.type === \"encode\") {\r\n          finalObject[field.name] = encodeURIComponent(field.value);\r\n        }\r\n\r\n        if (field.useInUrl) {\r\n          queryParams.push({ name: field.name, value: field.value });\r\n        }\r\n      });\r\n\r\n      if (validationError) {\r\n        toast.error(validationError, {\r\n          position: toast.POSITION.TOP_CENTER,\r\n        });\r\n        return;\r\n      }\r\n\r\n      setLoading(true);\r\n\r\n      try {\r\n        const body = containFiles ? formData : unflatten(finalObject);\r\n\r\n        await submitCallback(body, containFiles, queryParams);\r\n\r\n        toast.success(\"Great Success!\", {\r\n          position: toast.POSITION.TOP_CENTER,\r\n        });\r\n\r\n        closeCallback(true);\r\n      } catch (e) {\r\n        toast.error(e.message, {\r\n          position: toast.POSITION.TOP_CENTER,\r\n        });\r\n      }\r\n\r\n      setLoading(false);\r\n    }\r\n\r\n    function formChanged(fieldName: string, value: any) {\r\n      let updatedFormFields: IConfigInputField[] = JSON.parse(\r\n        JSON.stringify(formFields)\r\n      );\r\n\r\n      updatedFormFields = updatedFormFields.map((field: IConfigInputField) => {\r\n        if (field.name === fieldName) {\r\n          field.value = value;\r\n        }\r\n\r\n        return field;\r\n      });\r\n\r\n      setFormFields(updatedFormFields);\r\n    }\r\n\r\n    function saveRemovedValues(fieldName: string, value: string) {\r\n      var delVal = [...deleteValues];\r\n      delVal.push({ fieldName: fieldName, value: value });\r\n\r\n      setDeleteValues(delVal);\r\n    }\r\n    useEffect(() => {\r\n      initFormFields();\r\n\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n      <Popup\r\n        show={true}\r\n        className=\"form-popup\"\r\n        closeCallback={() => closeCallback(false)}\r\n        customLabels={customLabels}\r\n      >\r\n        <React.Fragment>\r\n          <h2>{title}</h2>\r\n          <section>\r\n            {loading ? (\r\n              <Loader />\r\n            ) : (\r\n              <form onSubmit={submitForm}>\r\n                {formFields.map((field, idx) => {\r\n                  return (\r\n                    <div>\r\n                      <FormRow\r\n                        key={`field_${idx}`}\r\n                        field={field}\r\n                        loadedFields={loadedFields}\r\n                        onChange={formChanged}\r\n                        onRemove={saveRemovedValues}\r\n                        showReset={!field.type || field.type === \"text\"}\r\n                      />\r\n                      <br />\r\n                      <hr />\r\n                    </div>\r\n                  );\r\n                })}\r\n                <div className=\"buttons-wrapper center\">\r\n                  <Button type=\"submit\" onClick={submitForm} color=\"green\">\r\n                    {locale.submit}\r\n                  </Button>\r\n                </div>\r\n              </form>\r\n            )}\r\n          </section>\r\n          <ToastContainer />\r\n        </React.Fragment>\r\n      </Popup>\r\n    );\r\n  }\r\n);\r\n","import React from 'react';\r\n\r\nimport './filterField.scss';\r\n\r\ninterface IProps {\r\n  onChange: (filter: string) => void\r\n}\r\n\r\nexport const FilterField = ({ onChange }: IProps) => {\r\n  return (\r\n    <section className=\"filter-wrapper\">\r\n      <h5>Filter:</h5>\r\n      <div className=\"form-row\">\r\n        <input type=\"text\" placeholder=\"Search...\" onChange={(e) => onChange(e.target.value.toLowerCase())} />\r\n      </div>\r\n    </section>\r\n  );\r\n};","import { IPaginationState, IQueryPaginationState, IBodyPaginationState } from \"./states.model\";\r\n\r\nexport const isQueryPaginationState = (obj: IPaginationState): obj is IQueryPaginationState => {\r\n    return obj.source === 'query';\r\n}\r\n\r\nexport const isBodyPaginationState = (obj: IPaginationState): obj is IBodyPaginationState => {\r\n    return obj.source === 'body';\r\n}","import { IConfigPagination, IConfigBodyPagination, IConfigQueryPagination } from \"./config.model\";\r\n\r\nexport const isQueryPagination = (obj: IConfigPagination): obj is IConfigQueryPagination => {\r\n    return obj.source === 'query';\r\n}\r\n\r\nexport const isBodyPagination = (obj: IConfigPagination): obj is IConfigBodyPagination => {\r\n    return obj.source === 'body';\r\n}\r\n","import React, { Component, useState, useEffect } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport {\r\n  XYPlot,\r\n  XAxis,\r\n  YAxis,\r\n  VerticalGridLines,\r\n  HorizontalGridLines,\r\n  LineMarkSeries,\r\n  Hint,\r\n} from \"react-vis\";\r\nimport \"react-vis/dist/style.css\";\r\n\r\nimport { FormRow } from \"../formRow/formRow.comp\";\r\nimport { Button } from \"../button/button.comp\";\r\nimport { Loader } from \"../loader/loader.comp\";\r\nimport { dataHelpers } from \"../../helpers/data.helpers\";\r\nimport { fileHelpers } from \"../../helpers/file.helpers\";\r\nimport { IAppContext } from \"../app.context\";\r\nimport { withAppContext } from \"../withContext/withContext.comp\";\r\n\r\nimport locale, { previous_page } from \"../../common/locale\";\r\n\r\nimport \"./graphHolder.scss\";\r\n//import \"../node_modules/react-vis/dist/style.css\";\r\n\r\ninterface IGraphData {\r\n  nameStruct: string;\r\n  unitMeasure: string;\r\n  dataStruct: any;\r\n}\r\n\r\ninterface IHintData {\r\n  x: string;\r\n  y: string;\r\n}\r\n\r\ninterface IProps {\r\n  dataMat: IGraphData[];\r\n  prev: boolean;\r\n  prevCallback: () => void;\r\n  next: boolean;\r\n  nextCallback: () => void;\r\n  zoomIn: boolean;\r\n  zoomInCallback: () => void;\r\n  zoomOut: boolean;\r\n  zoomOutCallback: () => void;\r\n}\r\n\r\nexport const GraphHolder = withAppContext(\r\n  ({\r\n    dataMat,\r\n    prev,\r\n    prevCallback,\r\n    next,\r\n    nextCallback,\r\n    zoomIn,\r\n    zoomInCallback,\r\n    zoomOut,\r\n    zoomOutCallback,\r\n  }: IProps) => {\r\n    useEffect(() => {\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      setHintData(Array(dataMat.length).fill({ date: \"\", y: \"\" }));\r\n      setHoverData(Array(dataMat.length).fill(false));\r\n    }, []);\r\n\r\n    const [hoverData, setHoverData] = useState<boolean[]>(Array(1).fill(false));\r\n    const [hintData, setHintData] = useState<IHintData[]>(Array(0));\r\n\r\n    function setHoverDataWithIndex(index: number, value: boolean) {\r\n      // 1. Make a shallow copy of the items\r\n      let items = [...hoverData];\r\n      // 2. Make a shallow copy of the item you want to mutate\r\n      let item = items[index];\r\n      // 3. Replace the property you're intested in\r\n      item = value;\r\n      // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\r\n      items[index] = item;\r\n      // 5. Set the state to our new copy\r\n      setHoverData(items);\r\n    }\r\n\r\n    function setHintDataWithIndex(index: number, value: IHintData) {\r\n      // 1. Make a shallow copy of the items\r\n      let items = [...hintData];\r\n      // 2. Make a shallow copy of the item you want to mutate\r\n      let item = items[index];\r\n      // 3. Replace the property you're intested in\r\n      item = value;\r\n      // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\r\n      items[index] = item;\r\n      // 5. Set the state to our new copy\r\n      setHintData(items);\r\n    }\r\n\r\n    return (\r\n      <div className=\"graphHolder\">\r\n        <br />\r\n        <hr />\r\n        <div>\r\n          <Button\r\n            className=\"button-margin\"\r\n            title={locale.previous_page}\r\n            onClick={() => prevCallback()}\r\n            disabled={!prev}\r\n          >\r\n            <i className=\"fa fa-backward\" aria-hidden=\"true\"></i>\r\n          </Button>\r\n\r\n          <Button\r\n            className=\"button-margin\"\r\n            title={locale.next_page}\r\n            onClick={() => nextCallback()}\r\n            disabled={!next}\r\n          >\r\n            <i className=\"fa fa-forward\" aria-hidden=\"true\"></i>\r\n          </Button>\r\n\r\n          <Button\r\n            className=\"button-margin\"\r\n            title={locale.zoomIn}\r\n            onClick={() => zoomInCallback()}\r\n            disabled={!zoomIn}\r\n          >\r\n            <i className=\"fa fa-search-plus\" aria-hidden=\"true\"></i>\r\n          </Button>\r\n\r\n          <Button\r\n            className=\"button-margin\"\r\n            title={locale.zoomOut}\r\n            onClick={() => zoomOutCallback()}\r\n            disabled={!zoomOut}\r\n          >\r\n            <i className=\"fa fa-search-minus\" aria-hidden=\"true\"></i>\r\n          </Button>\r\n        </div>\r\n        <br />\r\n        {dataMat.map((data, index) => {\r\n          return (\r\n            <div>\r\n              <h2>{data.nameStruct}</h2>\r\n              <br />\r\n              <XYPlot\r\n                width={1600}\r\n                height={600}\r\n                xType=\"ordinal\"\r\n                onMouseLeave={() => setHoverDataWithIndex(index, false)}\r\n              >\r\n                <VerticalGridLines />\r\n                <HorizontalGridLines />\r\n                <XAxis\r\n                  title=\"t\"\r\n                  tickTotal={7}\r\n                  //tickLabelAngle={-90}\r\n                  tickFormat={function tickFormat(d) {\r\n                    const date = new Date(+d);\r\n                    return date.toString().substr(4, 6);\r\n                  }}\r\n                />\r\n                <YAxis title={data.unitMeasure} />\r\n                <LineMarkSeries\r\n                  data={data.dataStruct}\r\n                  onValueMouseOver={(d) => {\r\n                    setHoverDataWithIndex(index, true);\r\n                    setHintDataWithIndex(index, {\r\n                      x: d.x.toString(),\r\n                      y: d.y.toString(),\r\n                    });\r\n                    console.log(d);\r\n                  }} //\r\n                />\r\n                {hoverData[index] && (\r\n                  <Hint value={hintData[index]}>\r\n                    <div style={{ background: \"grey\" }}>\r\n                      {\"Start time: \" + new Date(+hintData[index].x).toString()}\r\n                      <br />\r\n                      {locale.value + \": \" + hintData[index].y}\r\n                    </div>\r\n                  </Hint>\r\n                )}\r\n              </XYPlot>\r\n              <br />\r\n              <hr />\r\n              <br />\r\n            </div>\r\n          );\r\n        })}\r\n        <ToastContainer />\r\n      </div>\r\n    );\r\n  }\r\n);\r\n//style={{ fill: \"none\" }}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Popup } from \"../popup/popup.comp\";\r\nimport {\r\n  IConfigInputField,\r\n  IConfigGetSingleMethod,\r\n  IConfigPostMethod,\r\n  IConfigPutMethod,\r\n  ICustomLabels,\r\n  IQueryParam,\r\n  IConfigGetAllMethod,\r\n  IConfigGraphMethod,\r\n} from \"../../common/models/config.model\";\r\nimport { FormRow } from \"../formRow/formRow.comp\";\r\nimport { Button } from \"../button/button.comp\";\r\nimport { Loader } from \"../loader/loader.comp\";\r\nimport { dataHelpers } from \"../../helpers/data.helpers\";\r\nimport { fileHelpers } from \"../../helpers/file.helpers\";\r\nimport { IAppContext } from \"../app.context\";\r\nimport { withAppContext } from \"../withContext/withContext.comp\";\r\nimport locale from \"../../common/locale\";\r\nimport { GraphHolder } from \"../graphHolder/graphHolder\";\r\n\r\nimport \"./graphPopup.scss\";\r\nimport { QueryParams } from \"../queryParams/queryParams.comp\";\r\nimport \"../queryParams/queryParams.scss\";\r\nimport { IFetchParams } from \"../../services/http.service\";\r\nimport { createEmitAndSemanticDiagnosticsBuilderProgram } from \"typescript\";\r\n\r\n//const unflatten = require(\"flat\").unflatten;\r\n\r\ninterface IProps {\r\n  context: IAppContext;\r\n  title: string;\r\n  fields: IConfigInputField[];\r\n\r\n  graphConfig: IConfigGraphMethod;\r\n  closeCallback: (reloadData: boolean) => void;\r\n}\r\n\r\ninterface IGraphData {\r\n  nameStruct: string;\r\n  unitMeasure: string;\r\n  dataStruct: any;\r\n}\r\n\r\nexport const GraphPopup = withAppContext(\r\n  ({ context, title, fields, graphConfig, closeCallback }: IProps) => {\r\n    const fieldsCopy: IConfigInputField[] = JSON.parse(JSON.stringify(fields));\r\n    const { httpService, activePage, config } = context;\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const [doneQuery, setDoneQuery] = useState<boolean>(true);\r\n    const [showGraph, setShowGraph] = useState<boolean>(false);\r\n    const [titleState, setTitleState] = useState<String>(title);\r\n    const [formFields, setFormFields] = useState<IConfigInputField[]>(\r\n      fieldsCopy\r\n    );\r\n    const [graphData, setGraphData] = useState<IGraphData[] | null>();\r\n    const [prevGraphData, setPrevGraphData] = useState<IGraphData[] | null>();\r\n    const [nextGraphData, setNextGraphData] = useState<IGraphData[] | null>();\r\n\r\n    const [next, setNext] = useState<boolean>();\r\n    const [prev, setPrev] = useState<boolean>();\r\n    const [zoomIn, setZoomIn] = useState<boolean>();\r\n    const [zoomOut, setZoomOut] = useState<boolean>(true);\r\n    const [pageNum, setPageNum] = useState<number>(1);\r\n    const [totalPages, setTotalPages] = useState<number>(0);\r\n    const [error, setError] = useState<string>();\r\n\r\n    const [fetchedData, setFetchedData] = useState<null | any>(null);\r\n    const [fetchedFeature, setFetchedFeature] = useState<null | any>(null);\r\n\r\n    const [totalDocs, setTotalDocs] = useState<number>(0);\r\n    const [limit, setLimit] = useState<number>(0);\r\n\r\n    const customLabels: ICustomLabels | undefined = {\r\n      ...config?.customLabels,\r\n      ...activePage?.customLabels,\r\n    };\r\n\r\n    function graphChanged(\r\n      fieldName: string,\r\n      value: any,\r\n      submitAfterChange?: boolean\r\n    ) {\r\n      const updatedQueryParams: IConfigInputField[] = [...formFields].map(\r\n        (formFields) => {\r\n          if (formFields.name === fieldName) {\r\n            formFields.value = value;\r\n          }\r\n          return formFields;\r\n        }\r\n      );\r\n      setFormFields(updatedQueryParams);\r\n      if (submitAfterChange) {\r\n        submitGraph();\r\n      }\r\n    }\r\n\r\n    async function fetchFeatureData(fetchFeatureData: boolean = false) {\r\n      //get the data for the selected feature\r\n      const resultsData = await httpService.fetch({\r\n        method: \"get\",\r\n        origUrl: graphConfig.url,\r\n        queryParams: formFields,\r\n        exactMatch: true,\r\n        headers: { \"content-type\": \"application/json\" },\r\n      });\r\n\r\n      var fF = fetchedFeature;\r\n      if (fetchFeatureData === true) {\r\n        let queryFeature = \"\";\r\n\r\n        //get the name of the selected feature\r\n        formFields.map((f) =>\r\n          f.name === \"feature\" ? (queryFeature = f.value) : {}\r\n        );\r\n\r\n        //fetch the feature\r\n        const resultsFeature = await httpService.fetch({\r\n          method: \"get\",\r\n          origUrl: \"/features/\",\r\n          queryParams: formFields.filter((obj) => {\r\n            return obj.name === \"feature\" && (obj.name = \"_id\");\r\n          }),\r\n          exactMatch: true,\r\n          headers: { \"content-type\": \"application/json\" },\r\n        });\r\n\r\n        formFields.filter((obj) => {\r\n          return obj.name === \"_id\" && (obj.name = \"feature\");\r\n        });\r\n\r\n        //extract the data for the feature\r\n        fF = dataHelpers.extractDataByDataPath(resultsFeature, \"docs\");\r\n      }\r\n\r\n      const pG = resultsData[\"page\"];\r\n\r\n      const tP = resultsData[\"totalPages\"];\r\n\r\n      const tD = resultsData[\"totalDocs\"];\r\n\r\n      const limit = resultsData[\"limit\"];\r\n\r\n      //extract the data for the measurements\r\n      const fD = dataHelpers.extractDataByDataPath(\r\n        resultsData,\r\n        graphConfig.dataPath\r\n      );\r\n\r\n      //return data\r\n      return {\r\n        fetchedData: fD,\r\n        fetchedFeature: fF,\r\n        pageNum: pG,\r\n        totalPages: tP,\r\n        totalDocs: tD,\r\n        limit: limit,\r\n      };\r\n    }\r\n\r\n    function buildData(fetchedData: any, fetchedFeature: any) {\r\n      var goodFeatures = new Array();\r\n      var dataFeatName = new Array<string>();\r\n      var dataFeatUnit = new Array<string>();\r\n\r\n      fetchedFeature.map((ft: any) =>\r\n        ft.items.map((comp: any, index: number) => {\r\n          if (comp.dimension === 0 && comp.type === \"number\") {\r\n            goodFeatures.push(index);\r\n            dataFeatName.push(comp.name);\r\n            dataFeatUnit.push(comp.unit);\r\n          } else return null;\r\n        })\r\n      );\r\n\r\n      if (goodFeatures.length === 0) {\r\n        setLoading(false);\r\n        return null;\r\n      }\r\n\r\n      var dataStruct = new Array(goodFeatures.length);\r\n\r\n      for (var i = 0; i < dataStruct.length; i++) {\r\n        dataStruct[i] = new Array();\r\n      }\r\n\r\n      fetchedData.map((data: any) =>\r\n        data[\"samples\"].map((sample: any) =>\r\n          sample[\"values\"].map((feature: any, indexFeat: number) => {\r\n            if (goodFeatures.includes(indexFeat))\r\n              dataStruct[goodFeatures.indexOf(indexFeat)].push({\r\n                x: Date.parse(data[\"startDate\"]),\r\n                y: feature,\r\n              });\r\n          })\r\n        )\r\n      );\r\n\r\n      var finalData = Array<IGraphData>();\r\n      for (i = 0; i < dataFeatName.length; i++) {\r\n        finalData[i] = {\r\n          nameStruct: dataFeatName[i],\r\n          dataStruct: dataStruct[i].reverse(),\r\n          unitMeasure: dataFeatUnit[i],\r\n        };\r\n      }\r\n\r\n      return finalData;\r\n    }\r\n\r\n    async function buildPrev(\r\n      formFields: IConfigInputField[],\r\n      fetchedFeature: any\r\n    ) {\r\n      var tempField = formFields;\r\n      tempField.filter((obj) => {\r\n        return (\r\n          obj.name === \"page\" && (obj.value = 1 + parseInt(obj.value) + \"\")\r\n        );\r\n      });\r\n\r\n      const resultsData = await httpService.fetch({\r\n        method: \"get\",\r\n        origUrl: graphConfig.url,\r\n        queryParams: tempField,\r\n        exactMatch: true,\r\n        headers: { \"content-type\": \"application/json\" },\r\n      });\r\n      const prData = dataHelpers.extractDataByDataPath(\r\n        resultsData,\r\n        graphConfig.dataPath\r\n      );\r\n\r\n      tempField.filter((obj) => {\r\n        return (\r\n          obj.name === \"page\" && (obj.value = parseInt(obj.value) - 1 + \"\")\r\n        );\r\n      });\r\n\r\n      const pPage = buildData(prData, fetchedFeature);\r\n      return pPage;\r\n    }\r\n    async function buildNext(\r\n      formFields: IConfigInputField[],\r\n      fetchedFeature: any\r\n    ) {\r\n      var tempField = formFields;\r\n      tempField.filter((obj) => {\r\n        return (\r\n          obj.name === \"page\" && (obj.value = parseInt(obj.value) - 1 + \"\")\r\n        );\r\n      });\r\n\r\n      const resultsData = await httpService.fetch({\r\n        method: \"get\",\r\n        origUrl: graphConfig.url,\r\n        queryParams: tempField,\r\n        exactMatch: true,\r\n        headers: { \"content-type\": \"application/json\" },\r\n      });\r\n      const nxData = dataHelpers.extractDataByDataPath(\r\n        resultsData,\r\n        graphConfig.dataPath\r\n      );\r\n\r\n      tempField.filter((obj) => {\r\n        return (\r\n          obj.name === \"page\" && (obj.value = parseInt(obj.value) + 1 + \"\")\r\n        );\r\n      });\r\n\r\n      const nPage = buildData(nxData, fetchedFeature);\r\n      return nPage;\r\n    }\r\n    async function submitGraph() {\r\n      setLoading(true);\r\n      setDoneQuery(true);\r\n\r\n      console.log(\"Entered submitGraph\");\r\n\r\n      const {\r\n        fetchedData,\r\n        fetchedFeature,\r\n        pageNum,\r\n        totalPages,\r\n        totalDocs,\r\n        limit,\r\n      } = await fetchFeatureData(true);\r\n\r\n      setFetchedData(fetchedData);\r\n      setFetchedFeature(fetchedFeature);\r\n      setPageNum(pageNum);\r\n      setTotalPages(totalPages);\r\n      setTotalDocs(totalDocs);\r\n      setLimit(limit);\r\n\r\n      const finalData = buildData(fetchedData, fetchedFeature);\r\n\r\n      if (finalData === null) {\r\n        setError(locale.wrong_feature_error);\r\n        return;\r\n      }\r\n\r\n      if (finalData[0].dataStruct.length === 0) {\r\n        setError(locale.no_data_error);\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      setGraphData(finalData);\r\n\r\n      const next = pageNum > 1;\r\n      const prev = pageNum < totalPages;\r\n\r\n      const zoomIn = limit > 3;\r\n      const zoomOut = limit < totalDocs;\r\n\r\n      setNext(next);\r\n      setPrev(prev);\r\n\r\n      setZoomIn(zoomIn);\r\n      setZoomOut(zoomOut);\r\n\r\n      setShowGraph(true);\r\n\r\n      setTitleState(locale.graph + \" \" + fetchedFeature[0]._id);\r\n\r\n      setLoading(false);\r\n\r\n      var pPage = null;\r\n      var nPage = null;\r\n      if (prev === true) {\r\n        pPage = await buildPrev(formFields, fetchedFeature);\r\n      }\r\n      if (next === true) {\r\n        nPage = await buildNext(formFields, fetchedFeature);\r\n      }\r\n      setPrevGraphData(pPage);\r\n      setNextGraphData(nPage);\r\n    }\r\n\r\n    async function buildMain() {\r\n      const {\r\n        fetchedData,\r\n        pageNum,\r\n        totalPages,\r\n        totalDocs,\r\n        limit,\r\n      } = await fetchFeatureData();\r\n\r\n      console.log(\"Entered BuildMain\");\r\n\r\n      setLoading(true);\r\n\r\n      setPageNum(pageNum);\r\n      setTotalPages(totalPages);\r\n\r\n      const finalData = buildData(fetchedData, fetchedFeature);\r\n\r\n      if (finalData === null) {\r\n        setError(locale.wrong_feature_error);\r\n        return;\r\n      }\r\n\r\n      if (finalData[0].dataStruct.length === 0) {\r\n        setError(locale.no_data_error);\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      setGraphData(finalData);\r\n\r\n      const next = pageNum > 1;\r\n      const prev = pageNum < totalPages;\r\n\r\n      const zoomIn = limit > 3;\r\n      const zoomOut = limit < totalDocs;\r\n\r\n      setNext(next);\r\n      setPrev(prev);\r\n\r\n      setZoomIn(zoomIn);\r\n      setZoomOut(zoomOut);\r\n\r\n      setTotalDocs(totalDocs);\r\n      setLimit(limit);\r\n\r\n      setLoading(false);\r\n\r\n      var pPage = null;\r\n      var nPage = null;\r\n      if (prev === true) {\r\n        pPage = await buildPrev(formFields, fetchedFeature);\r\n      }\r\n      if (next === true) {\r\n        nPage = await buildNext(formFields, fetchedFeature);\r\n      }\r\n      setPrevGraphData(pPage);\r\n      setNextGraphData(nPage);\r\n    }\r\n\r\n    async function prevShifting() {\r\n      setLoading(true);\r\n\r\n      console.log(\"Entered PrevShifting\");\r\n\r\n      setNextGraphData(graphData);\r\n      setGraphData(prevGraphData);\r\n\r\n      setLoading(false);\r\n\r\n      setPrev(pageNum + 1 < totalPages);\r\n      setNext(pageNum + 1 > 1);\r\n      setPageNum(pageNum + 1);\r\n      const prPage = await buildPrev(formFields, fetchedFeature);\r\n\r\n      setPrevGraphData(prPage);\r\n    }\r\n\r\n    async function nextShifting() {\r\n      setLoading(true);\r\n      console.log(\"Entered NextShifting\");\r\n\r\n      setPrevGraphData(graphData);\r\n      setGraphData(nextGraphData);\r\n      setPrev(pageNum - 1 < totalPages);\r\n      setNext(pageNum - 1 > 1);\r\n      setPageNum(pageNum - 1);\r\n      const nxPage = await buildNext(formFields, fetchedFeature);\r\n\r\n      setNextGraphData(nxPage);\r\n    }\r\n\r\n    async function increaseSamples() {\r\n      setLoading(true);\r\n      console.log(\"Entered Increase Sample\");\r\n\r\n      var tempField = formFields;\r\n\r\n      tempField.filter((obj) => {\r\n        return obj.name === \"limit\" && (obj.value = 2 + limit + \"\");\r\n      });\r\n\r\n      setFormFields(tempField);\r\n      buildMain();\r\n      setLoading(false);\r\n    }\r\n\r\n    async function decreaseSamples() {\r\n      setLoading(true);\r\n      console.log(\"Entered Decrease Sample\");\r\n\r\n      var tempField = formFields;\r\n\r\n      tempField.filter((obj) => {\r\n        return obj.name === \"limit\" && (obj.value = limit - 2 + \"\");\r\n      });\r\n\r\n      setFormFields(tempField);\r\n      buildMain();\r\n      setLoading(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n      setLoading(false);\r\n      setDoneQuery(false);\r\n      setShowGraph(false);\r\n    }, []);\r\n\r\n    return (\r\n      <Popup\r\n        show={true}\r\n        className=\"graph-popup\"\r\n        closeCallback={() => closeCallback(false)}\r\n        customLabels={customLabels}\r\n      >\r\n        <React.Fragment>\r\n          <h2>{titleState}</h2>\r\n\r\n          {loading ? (\r\n            <Loader />\r\n          ) : !doneQuery ? (\r\n            <section className=\"query-params-form\">\r\n              <h5>{locale.graph}</h5>\r\n              <form onSubmit={submitGraph}>\r\n                {formFields.map((queryParam, idx) => {\r\n                  if (queryParam.name == \"page\") return \"\";\r\n                  return (\r\n                    <FormRow\r\n                      key={`query_param_${idx}`}\r\n                      field={queryParam}\r\n                      onChange={graphChanged}\r\n                      showReset={!queryParam.type || queryParam.type === \"text\"}\r\n                    />\r\n                  );\r\n                })}\r\n                <Button type=\"submit\" onClick={submitGraph}>\r\n                  {locale.submit}\r\n                </Button>\r\n              </form>\r\n            </section>\r\n          ) : showGraph ? (\r\n            <GraphHolder\r\n              dataMat={graphData}\r\n              prev={prev}\r\n              prevCallback={prevShifting}\r\n              next={next}\r\n              nextCallback={nextShifting}\r\n              zoomIn={zoomIn}\r\n              zoomInCallback={decreaseSamples}\r\n              zoomOut={zoomOut}\r\n              zoomOutCallback={increaseSamples}\r\n            />\r\n          ) : (\r\n            <h1>{error}</h1>\r\n          )}\r\n        </React.Fragment>\r\n      </Popup>\r\n    );\r\n  }\r\n);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport * as QueryString from \"query-string\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { orderBy } from \"natural-orderby\";\r\nimport { find, remove } from \"lodash\";\r\n\r\nimport { IAppContext } from \"../app.context\";\r\nimport {\r\n  IConfigPage,\r\n  IConfigMethods,\r\n  IConfigGetAllMethod,\r\n  IConfigPostMethod,\r\n  IConfigPutMethod,\r\n  IConfigDeleteMethod,\r\n  IConfigInputField,\r\n  IConfigCustomAction,\r\n  IConfigGetSingleMethod,\r\n  ICustomLabels,\r\n  IConfigPagination,\r\n  IConfigGraphMethod,\r\n} from \"../../common/models/config.model\";\r\nimport {\r\n  IPaginationState,\r\n  IQueryPaginationState,\r\n  IBodyPaginationState,\r\n} from \"../../common/models/states.model\";\r\nimport { withAppContext } from \"../withContext/withContext.comp\";\r\nimport { Loader } from \"../loader/loader.comp\";\r\nimport { dataHelpers } from \"../../helpers/data.helpers\";\r\nimport { paginationHelpers } from \"../../helpers/pagination.helpers\";\r\nimport { Table } from \"../table/table.comp\";\r\nimport { Cards } from \"../cards/cards.comp\";\r\nimport { QueryParams } from \"../queryParams/queryParams.comp\";\r\nimport { Button } from \"../button/button.comp\";\r\nimport { FormPopup } from \"../formPopup/formPopup.comp\";\r\nimport { FilterField } from \"../filterField/filterField.comp\";\r\nimport {\r\n  isQueryPaginationState,\r\n  isBodyPaginationState,\r\n} from \"../../common/models/states.types.helper\";\r\nimport {\r\n  isQueryPagination,\r\n  isBodyPagination,\r\n} from \"../../common/models/config.types.helper\";\r\nimport locale from \"../../common/locale.js\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./page.scss\";\r\nimport { GraphPopup } from \"../graphPopup/graphPopup.comp\";\r\n\r\ninterface ILoadedFields {\r\n  fieldName: string;\r\n  values: Array<string>;\r\n}\r\n\r\ninterface IProps {\r\n  context: IAppContext;\r\n  loadedFields: ILoadedFields[];\r\n}\r\n\r\ninterface IPopupProps {\r\n  type: \"add\" | \"update\" | \"action\";\r\n  title: string;\r\n  config: IConfigPostMethod | IConfigPutMethod;\r\n  submitCallback: (body: any, containFiles: boolean) => void;\r\n  getSingleConfig?: IConfigGetSingleMethod;\r\n  rawData?: {};\r\n}\r\n\r\ninterface IGraphProps {\r\n  title: string;\r\n  config: IConfigGraphMethod;\r\n  rawData?: {};\r\n}\r\n\r\nconst buildInitQueryParamsAndPaginationState = (\r\n  initQueryParams: IConfigInputField[],\r\n  paginationConfig?: IConfigPagination\r\n): {\r\n  initQueryParams: IConfigInputField[];\r\n  initialPagination?: IPaginationState;\r\n} => {\r\n  let initialPagination: IPaginationState | undefined = undefined;\r\n\r\n  if (paginationConfig) {\r\n    if (isQueryPagination(paginationConfig)) {\r\n      initialPagination = {\r\n        source: paginationConfig.source,\r\n        type: paginationConfig.type,\r\n        page: parseInt(paginationConfig.params?.page?.value || \"1\"),\r\n        limit: parseInt(paginationConfig.params?.limit?.value || \"10\"),\r\n        descending:\r\n          paginationConfig.params?.descending?.value === \"true\" || false,\r\n        hasPreviousPage: false,\r\n        hasNextPage: false,\r\n        sortBy: paginationConfig.params?.sortBy?.value,\r\n      };\r\n\r\n      if (!find(initQueryParams, { name: \"page\" })) {\r\n        initQueryParams.push({\r\n          name: paginationConfig?.params?.page?.name,\r\n          label: paginationConfig?.params?.page?.label || \"Page\",\r\n          value: initialPagination?.page,\r\n        });\r\n      }\r\n\r\n      if (\r\n        paginationConfig?.params?.limit &&\r\n        !find(initQueryParams, { name: \"limit\" })\r\n      ) {\r\n        initQueryParams.push({\r\n          name: paginationConfig.params.limit.name,\r\n          label: paginationConfig.params.limit.label || \"Limit\",\r\n          value: initialPagination?.limit,\r\n        });\r\n      }\r\n\r\n      if (\r\n        paginationConfig?.params?.descending &&\r\n        !find(initQueryParams, { name: \"descending\" })\r\n      ) {\r\n        initQueryParams.push({\r\n          name: paginationConfig.params.descending.name,\r\n          label: paginationConfig.params.descending.label || \"Descending\",\r\n          value: initialPagination?.descending,\r\n        });\r\n      }\r\n\r\n      if (\r\n        paginationConfig?.params?.sortBy &&\r\n        !find(initQueryParams, { name: \"sortBy\" })\r\n      ) {\r\n        initQueryParams.push({\r\n          name: paginationConfig.params.sortBy.name,\r\n          label: \"Sort by\",\r\n          value: initialPagination?.sortBy,\r\n        });\r\n      }\r\n    } else if (isBodyPagination(paginationConfig)) {\r\n      initialPagination = {\r\n        source: \"body\",\r\n        type: paginationConfig.type,\r\n        hasNextPage: false,\r\n        hasPreviousPage: false,\r\n        next: null,\r\n        previous: null,\r\n        limit: parseInt(paginationConfig.params?.limit?.value || \"10\"),\r\n      };\r\n\r\n      if (\r\n        paginationConfig?.params?.limit &&\r\n        !find(initQueryParams, { name: \"limit\" })\r\n      ) {\r\n        initQueryParams.push({\r\n          name: paginationConfig.params.limit.name,\r\n          label: paginationConfig.params.limit.label || \"Limit\",\r\n          value: initialPagination?.limit,\r\n        });\r\n      }\r\n    } else {\r\n      throw new Error(\"unrecognized pagination\");\r\n    }\r\n  }\r\n\r\n  return {\r\n    initQueryParams,\r\n    initialPagination,\r\n  };\r\n};\r\n\r\nconst PageComp = ({ context, loadedFields }: IProps) => {\r\n  const { page }: any = useParams();\r\n  const { push, location } = useHistory();\r\n  const { activePage, error, setError, httpService, config } = context;\r\n  const pageHeaders: any = activePage?.requestHeaders || {};\r\n  const pageMethods: IConfigMethods | undefined = activePage?.methods;\r\n  const customActions: IConfigCustomAction[] = activePage?.customActions || [];\r\n  const getAllConfig: IConfigGetAllMethod | undefined = pageMethods?.getAll;\r\n  const paginationConfig = getAllConfig?.pagination;\r\n  const infiniteScroll = paginationConfig?.type === \"infinite-scroll\";\r\n  const getSingleConfig: IConfigGetSingleMethod | undefined =\r\n    pageMethods?.getSingle;\r\n  const postConfig: IConfigPostMethod | undefined = pageMethods?.post;\r\n  const graphConfig: IConfigGraphMethod | undefined = pageMethods?.graph;\r\n  const putConfig: IConfigPutMethod | undefined = pageMethods?.put;\r\n  const deleteConfig: IConfigDeleteMethod | undefined = pageMethods?.delete;\r\n  const customLabels: ICustomLabels | undefined = {\r\n    ...config?.customLabels,\r\n    ...activePage?.customLabels,\r\n  };\r\n  const addItemLabel =\r\n    customLabels?.buttons?.addItem ||\r\n    \"+ \" + locale.add + \" \" + activePage?.itemName;\r\n  const openGraphLabel = locale.graph + \" \" + activePage?.itemName;\r\n  const addItemFormTitle =\r\n    customLabels?.formTitles?.addItem ||\r\n    locale.add + \" \" + activePage?.itemName;\r\n  const editItemFormTitle =\r\n    customLabels?.formTitles?.editItem ||\r\n    locale.update + \" \" + activePage?.itemName;\r\n  const graphTitle = locale.graph + \" \" + activePage?.itemName;\r\n  const {\r\n    initQueryParams,\r\n    initialPagination,\r\n  } = buildInitQueryParamsAndPaginationState(\r\n    getAllConfig?.queryParams || [],\r\n    paginationConfig\r\n  );\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [openedPopup, setOpenedPopup] = useState<null | IPopupProps>(null);\r\n  const [openedGraph, setOpenedGraph] = useState<null | IGraphProps>(null);\r\n  const [queryParams, setQueryParams] = useState<IConfigInputField[]>(\r\n    initQueryParams\r\n  );\r\n  const [pagination, setPagination] = useState<IPaginationState | undefined>(\r\n    initialPagination\r\n  );\r\n  const [items, setItems] = useState<any[]>([]);\r\n  const [filter, setFilter] = useState<string>(\"\");\r\n\r\n  function closeFormPopup(refreshData: boolean = false) {\r\n    setOpenedPopup(null);\r\n\r\n    if (refreshData === true) {\r\n      if (pagination?.type === \"infinite-scroll\") {\r\n        setItems([]);\r\n        const updatedParams = [...queryParams];\r\n        remove(updatedParams, (param) =>\r\n          [\"page\", \"limit\"].includes(param.name)\r\n        );\r\n        setQueryParams(\r\n          buildInitQueryParamsAndPaginationState(\r\n            updatedParams,\r\n            paginationConfig\r\n          ).initQueryParams\r\n        );\r\n      } else {\r\n        getAllRequest();\r\n      }\r\n    }\r\n  }\r\n\r\n  function closeGraph(refreshData: boolean = false) {\r\n    setOpenedGraph(null);\r\n\r\n    if (refreshData === true) {\r\n      if (pagination?.type === \"infinite-scroll\") {\r\n        setItems([]);\r\n        const updatedParams = [...queryParams];\r\n        remove(updatedParams, (param) =>\r\n          [\"page\", \"limit\"].includes(param.name)\r\n        );\r\n        setQueryParams(\r\n          buildInitQueryParamsAndPaginationState(\r\n            updatedParams,\r\n            paginationConfig\r\n          ).initQueryParams\r\n        );\r\n      } else {\r\n        getAllRequest();\r\n      }\r\n    }\r\n  }\r\n\r\n  async function openEditPopup(rawData: any) {\r\n    const params: IPopupProps = {\r\n      rawData,\r\n      type: \"update\",\r\n      title: editItemFormTitle,\r\n      config: putConfig as IConfigPutMethod,\r\n      getSingleConfig,\r\n      submitCallback: async (body: any, containFiles: boolean) => {\r\n        return await updateItem(body, rawData, containFiles);\r\n      },\r\n    };\r\n\r\n    setOpenedPopup(params);\r\n  }\r\n\r\n  function openCustomActionPopup(rawData: any, action: IConfigCustomAction) {\r\n    const params: IPopupProps = {\r\n      rawData,\r\n      type: \"action\",\r\n      title: action.name || \"Custom Action\",\r\n      config: action as IConfigCustomAction,\r\n      submitCallback: async (body: any, containFiles: boolean) => {\r\n        return await performAction(body, rawData, action, containFiles);\r\n      },\r\n    };\r\n    setOpenedPopup(params);\r\n  }\r\n\r\n  async function openGraphPopup(graphConfig: IConfigGraphMethod) {\r\n    const params: IGraphProps = {\r\n      title: graphTitle,\r\n      config: graphConfig,\r\n    };\r\n\r\n    setOpenedGraph(params);\r\n\r\n    console.log(params);\r\n    console.log(openedGraph);\r\n  }\r\n\r\n  async function performAction(\r\n    body: any,\r\n    rawData: any,\r\n    action: IConfigCustomAction,\r\n    containFiles: boolean\r\n  ) {\r\n    const { url, requestHeaders, actualMethod } = action;\r\n\r\n    return await httpService.fetch({\r\n      method: actualMethod || \"put\",\r\n      origUrl: url,\r\n      rawData,\r\n      body: containFiles ? body : JSON.stringify(body),\r\n      headers: {\r\n        ...pageHeaders,\r\n        ...(requestHeaders || {}),\r\n        ...(containFiles ? {} : { \"content-type\": \"application/json\" }),\r\n      },\r\n      responseType: \"boolean\",\r\n    });\r\n  }\r\n\r\n  function extractQueryParams(\r\n    params: IConfigInputField[]\r\n  ): IConfigInputField[] {\r\n    if (!paginationConfig || isQueryPagination(paginationConfig)) {\r\n      const parsedParams = QueryString.parse(location.search);\r\n      const finalQueryParams = params.map((queryParam) => {\r\n        if (typeof parsedParams[queryParam.name] !== \"undefined\") {\r\n          queryParam.value =\r\n            queryParam.type === \"boolean\"\r\n              ? parsedParams[queryParam.name] === \"true\"\r\n              : decodeURIComponent(parsedParams[queryParam.name] as any);\r\n        } else {\r\n          queryParam.value = queryParam.value || \"\";\r\n        }\r\n        return queryParam;\r\n      });\r\n\r\n      setPagination(getUpdatedPaginationState(finalQueryParams, null));\r\n\r\n      return finalQueryParams;\r\n    } else {\r\n      return params;\r\n    }\r\n  }\r\n\r\n  async function fetchPageData(params: {\r\n    actualMethod: \"get\" | \"put\" | \"post\" | \"patch\" | \"delete\";\r\n    url: string;\r\n    requestHeaders?: any;\r\n    dataPath: string;\r\n    dataTransform: any;\r\n    sortBy: any;\r\n  }) {\r\n    const result = await httpService.fetch({\r\n      method: params.actualMethod || \"get\",\r\n      origUrl: params.url,\r\n      queryParams,\r\n      headers: Object.assign({}, pageHeaders, params.requestHeaders || {}),\r\n    });\r\n    let extractedData = dataHelpers.extractDataByDataPath(\r\n      result,\r\n      params.dataPath\r\n    );\r\n\r\n    if (!extractedData) {\r\n      throw new Error(\"Could not extract data from response.\");\r\n    }\r\n\r\n    if (!Array.isArray(extractedData)) {\r\n      throw new Error(\"Extracted data is invalid.\");\r\n    }\r\n\r\n    if (typeof params.dataTransform === \"function\") {\r\n      extractedData = await params.dataTransform(extractedData);\r\n    }\r\n\r\n    const orderedItems = orderBy(\r\n      extractedData,\r\n      typeof params.sortBy === \"string\" ? [params.sortBy] : params.sortBy || []\r\n    );\r\n\r\n    if (paginationConfig) {\r\n      const total = paginationConfig.fields?.total\r\n        ? dataHelpers.extractDataByDataPath(\r\n            result,\r\n            paginationConfig.fields.total.dataPath\r\n          )\r\n        : undefined;\r\n      const newPaginationState = getUpdatedPaginationState(\r\n        queryParams,\r\n        result,\r\n        total\r\n      );\r\n      if (newPaginationState) {\r\n        setPagination(newPaginationState);\r\n      }\r\n    }\r\n\r\n    if (infiniteScroll) {\r\n      setItems([...items, ...orderedItems]);\r\n    } else {\r\n      setItems(orderedItems);\r\n    }\r\n  }\r\n\r\n  async function getAllRequest() {\r\n    if (infiniteScroll) {\r\n      if (pagination) {\r\n        if (isQueryPaginationState(pagination)) {\r\n          if (pagination?.page !== 1) {\r\n            setLoading(false);\r\n          }\r\n        } else if (isBodyPaginationState(pagination)) {\r\n          if (pagination.previous) {\r\n            setLoading(false);\r\n          }\r\n        } else {\r\n          throw new Error(\"unrecognized pagination source\");\r\n        }\r\n      }\r\n    } else {\r\n      setLoading(true);\r\n    }\r\n\r\n    setError(null);\r\n\r\n    try {\r\n      if (!getAllConfig) {\r\n        throw new Error(\"Get all method is not defined.\");\r\n      }\r\n\r\n      if (paginationConfig && !pagination) {\r\n        throw new Error(\"Pagination not initialized.\");\r\n      }\r\n\r\n      const {\r\n        url,\r\n        requestHeaders,\r\n        actualMethod,\r\n        dataPath,\r\n        sortBy,\r\n        dataTransform,\r\n      } = getAllConfig;\r\n      await fetchPageData({\r\n        actualMethod: actualMethod,\r\n        url: url,\r\n        requestHeaders: requestHeaders,\r\n        dataPath: dataPath,\r\n        dataTransform: dataTransform,\r\n        sortBy: sortBy,\r\n      });\r\n    } catch (e) {\r\n      setError(e.message);\r\n    }\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  async function addItem(body: any, containFiles?: boolean, queryParams?: []) {\r\n    if (!postConfig) {\r\n      throw new Error(\"Post method is not defined.\");\r\n    }\r\n\r\n    const { url, requestHeaders, actualMethod } = postConfig;\r\n\r\n    return await httpService.fetch({\r\n      method: actualMethod || \"post\",\r\n      origUrl: url,\r\n      queryParams,\r\n      body: containFiles ? body : JSON.stringify(body),\r\n      headers: {\r\n        ...pageHeaders,\r\n        ...(requestHeaders || {}),\r\n        ...(containFiles ? {} : { \"content-type\": \"application/json\" }),\r\n      },\r\n      responseType: \"boolean\",\r\n    });\r\n  }\r\n\r\n  async function updateItem(body: any, rawData: any, containFiles?: boolean) {\r\n    if (!putConfig) {\r\n      throw new Error(\"Put method is not defined.\");\r\n    }\r\n\r\n    const { url, requestHeaders, actualMethod } = putConfig;\r\n\r\n    return await httpService.fetch({\r\n      method: actualMethod || \"put\",\r\n      origUrl: url,\r\n      rawData,\r\n      body: containFiles ? body : JSON.stringify(body),\r\n      headers: {\r\n        ...pageHeaders,\r\n        ...(requestHeaders || {}),\r\n        ...(containFiles ? {} : { \"content-type\": \"application/json\" }),\r\n      },\r\n      responseType: \"boolean\",\r\n    });\r\n  }\r\n\r\n  async function deleteItem(item: any) {\r\n    const approved: boolean = window.confirm(\r\n      \"Are you sure you want to delete this item?\"\r\n    );\r\n\r\n    if (!approved) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      if (!deleteConfig) {\r\n        throw new Error(\"Delete method is not defined.\");\r\n      }\r\n\r\n      const { url, requestHeaders, actualMethod } = deleteConfig;\r\n      const success = await httpService.fetch({\r\n        method: actualMethod || \"delete\",\r\n        origUrl: url,\r\n        rawData: item,\r\n        headers: Object.assign({}, pageHeaders, requestHeaders || {}),\r\n        responseType: \"boolean\",\r\n      });\r\n\r\n      if (success) {\r\n        if (pagination?.type === \"infinite-scroll\") {\r\n          setItems([]);\r\n          const updatedParams = [...queryParams];\r\n          remove(updatedParams, (param) =>\r\n            [\"page\", \"limit\"].includes(param.name)\r\n          );\r\n          setQueryParams(\r\n            buildInitQueryParamsAndPaginationState(\r\n              updatedParams,\r\n              paginationConfig\r\n            ).initQueryParams\r\n          );\r\n        } else {\r\n          getAllRequest();\r\n        }\r\n      }\r\n    } catch (e) {\r\n      toast.error(e.message, {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n    }\r\n  }\r\n\r\n  function submitQueryParams(\r\n    updatedParams: IConfigInputField[],\r\n    reset?: boolean\r\n  ) {\r\n    if (loading) {\r\n      return;\r\n    }\r\n\r\n    if (reset) {\r\n      setItems([]);\r\n      remove(updatedParams, (param) => [\"page\", \"limit\"].includes(param.name));\r\n      updatedParams = buildInitQueryParamsAndPaginationState(\r\n        updatedParams,\r\n        paginationConfig\r\n      ).initQueryParams;\r\n    }\r\n\r\n    updatedParams.map((queryParam, idx) => {\r\n      if (queryParam.type === \"select\" && queryParam.value === locale.select) {\r\n        // default value means nothing was selected and thus we explicitly\r\n        // empty out the value in this case; otherwise the string '-- Select --'\r\n        // is used as the value for the given queryParams\r\n        queryParam.value = \"\";\r\n      }\r\n    });\r\n\r\n    setQueryParams(updatedParams);\r\n    setPagination(getUpdatedPaginationState(updatedParams, null));\r\n\r\n    let paramsToUrl = [...updatedParams];\r\n\r\n    if (paginationConfig?.type === \"infinite-scroll\") {\r\n      paramsToUrl = paramsToUrl.filter(\r\n        (param) => ![\"page\", \"limit\"].includes(param.name)\r\n      );\r\n    }\r\n\r\n    // Building query string\r\n    const queryState: string = paramsToUrl\r\n      .map((queryParam, idx) => {\r\n        return `${idx === 0 ? \"?\" : \"\"}${queryParam.name}=${encodeURIComponent(\r\n          queryParam.value || \"\"\r\n        )}`;\r\n      })\r\n      .join(\"&\");\r\n\r\n    // Pushing query state to url\r\n    if (page && queryState) {\r\n      push(queryState);\r\n    }\r\n  }\r\n\r\n  function getUpdatedPaginationState(\r\n    updatedParams: IConfigInputField[],\r\n    result: any,\r\n    total?: number\r\n  ): IPaginationState | undefined {\r\n    if (!paginationConfig) {\r\n      return;\r\n    }\r\n\r\n    if (isQueryPagination(paginationConfig)) {\r\n      if (pagination && !isQueryPaginationState(pagination)) {\r\n        throw new Error(\"unexpected pagination source \" + pagination.source);\r\n      }\r\n      const newState: IQueryPaginationState = pagination\r\n        ? pagination\r\n        : {\r\n            source: \"query\",\r\n            type: paginationConfig.type,\r\n            page: parseInt(paginationConfig.params?.page?.value || \"1\"),\r\n            limit: parseInt(paginationConfig.params?.limit?.value || \"10\"),\r\n            descending:\r\n              paginationConfig.params?.descending?.value === \"true\" || false,\r\n            hasPreviousPage: false,\r\n            hasNextPage: false,\r\n            sortBy: paginationConfig.params?.sortBy?.value,\r\n          };\r\n\r\n      newState.total = total || pagination?.total;\r\n      newState.page =\r\n        parseInt(\r\n          updatedParams.find(\r\n            (param) => param.name === paginationConfig?.params?.page?.name\r\n          )?.value\r\n        ) || newState.page;\r\n      newState.limit =\r\n        parseInt(\r\n          updatedParams.find(\r\n            (param) => param.name === paginationConfig?.params?.limit?.name\r\n          )?.value\r\n        ) || newState.limit;\r\n      newState.descending =\r\n        updatedParams.find(\r\n          (param) => param.name === paginationConfig?.params?.descending?.name\r\n        )?.value === \"true\" || newState.descending;\r\n      newState.sortBy =\r\n        updatedParams.find(\r\n          (param) => param.name === paginationConfig?.params?.sortBy?.name\r\n        )?.value || newState.sortBy;\r\n      newState.hasPreviousPage = paginationHelpers.hasPreviousPage(\r\n        newState.page\r\n      );\r\n      newState.hasNextPage = paginationHelpers.hasNextPage(\r\n        newState.page,\r\n        newState.limit,\r\n        newState.total\r\n      );\r\n      return newState;\r\n    } else if (isBodyPagination(paginationConfig)) {\r\n      if (pagination && !isBodyPaginationState(pagination)) {\r\n        throw new Error(\"unexpected pagination source \" + pagination.source);\r\n      }\r\n      const newState: IBodyPaginationState = pagination\r\n        ? pagination\r\n        : {\r\n            source: \"body\",\r\n            type: paginationConfig.type,\r\n            next: result[paginationConfig.params.nextPath || locale.next],\r\n            previous:\r\n              result[paginationConfig.params.prevPath || locale.previous],\r\n            hasNextPage: !!result[\r\n              paginationConfig.params.nextPath || locale.next\r\n            ],\r\n            hasPreviousPage: !!result[\r\n              paginationConfig.params.prevPath || locale.previous\r\n            ],\r\n            limit: parseInt(paginationConfig.params?.limit?.value || \"10\"),\r\n            total: result[paginationConfig.params.countPath || \"count\"],\r\n          };\r\n      if (result) {\r\n        newState.next = result[paginationConfig.params.nextPath || locale.next];\r\n        newState.previous =\r\n          result[paginationConfig.params.prevPath || locale.previous];\r\n        newState.hasNextPage = !!result[\r\n          paginationConfig.params.nextPath || locale.next\r\n        ];\r\n        newState.hasPreviousPage = !!result[\r\n          paginationConfig.params.prevPath || locale.previous\r\n        ];\r\n        newState.total = result[paginationConfig.params.countPath || \"count\"];\r\n      }\r\n      newState.limit =\r\n        parseInt(\r\n          updatedParams.find(\r\n            (param) => param.name === paginationConfig?.params?.limit?.name\r\n          )?.value\r\n        ) || newState.limit;\r\n      return newState;\r\n    } else {\r\n      throw new Error(\"unrecognized pagination source\");\r\n    }\r\n  }\r\n\r\n  function renderItemsUI() {\r\n    if (loading) {\r\n      return <Loader />;\r\n    }\r\n\r\n    const fields = getAllConfig?.fields || getAllConfig?.display?.fields || [];\r\n    const fieldsToFilter = fields\r\n      .filter((field) => field.filterable)\r\n      .map((field) => field.name);\r\n    let filteredItems = items;\r\n\r\n    if (filter && fieldsToFilter.length) {\r\n      filteredItems = items.filter((item) => {\r\n        let passFilter = false;\r\n        fieldsToFilter.forEach((fieldName) => {\r\n          const value = item[fieldName];\r\n          if (\r\n            typeof value === \"string\" &&\r\n            value.toLowerCase().indexOf(filter) >= 0\r\n          ) {\r\n            passFilter = true;\r\n          }\r\n        });\r\n        return passFilter;\r\n      });\r\n    }\r\n\r\n    if (!filteredItems.length) {\r\n      return <div className=\"app-error\">{locale.nothing_to_see}</div>;\r\n    }\r\n\r\n    const getNextPage = paginationConfig\r\n      ? () => {\r\n          if (isQueryPagination(paginationConfig)) {\r\n            if (pagination && !isQueryPaginationState(pagination)) {\r\n              throw new Error(\r\n                \"unexpected pagination source \" + pagination.source\r\n              );\r\n            }\r\n            if (pagination?.page && queryParams.length > 0) {\r\n              const newPage = pagination?.page + 1;\r\n              const updatedParams = queryParams.map((param) => {\r\n                if (param.name === paginationConfig.params?.page?.name) {\r\n                  return {\r\n                    ...param,\r\n                    value: newPage,\r\n                  };\r\n                }\r\n                return param;\r\n              });\r\n              submitQueryParams(updatedParams);\r\n            }\r\n          } else if (isBodyPagination(paginationConfig)) {\r\n            if (pagination && !isBodyPaginationState(pagination)) {\r\n              throw new Error(\r\n                \"unexpected pagination source \" + pagination.source\r\n              );\r\n            }\r\n            if (!getAllConfig || !pagination?.next) {\r\n              return;\r\n            }\r\n            const {\r\n              requestHeaders,\r\n              actualMethod,\r\n              dataPath,\r\n              sortBy,\r\n              dataTransform,\r\n            } = getAllConfig;\r\n            fetchPageData({\r\n              actualMethod: actualMethod,\r\n              url: pagination.next,\r\n              requestHeaders: requestHeaders,\r\n              dataPath: dataPath,\r\n              dataTransform: dataTransform,\r\n              sortBy: sortBy,\r\n            });\r\n          } else {\r\n            throw new Error(\"unrecognized pagination source\");\r\n          }\r\n        }\r\n      : null;\r\n\r\n    const getPreviousPage = paginationConfig\r\n      ? () => {\r\n          if (isQueryPagination(paginationConfig)) {\r\n            if (pagination && !isQueryPaginationState(pagination)) {\r\n              throw new Error(\r\n                \"unexpected pagination source \" + pagination.source\r\n              );\r\n            }\r\n            if (\r\n              pagination?.page &&\r\n              pagination.page > 1 &&\r\n              queryParams.length > 0\r\n            ) {\r\n              const newPage = pagination?.page - 1;\r\n              const updatedParams = queryParams.map((param) => {\r\n                if (param.name === paginationConfig.params?.page?.name) {\r\n                  return {\r\n                    ...param,\r\n                    value: newPage,\r\n                  };\r\n                }\r\n                return param;\r\n              });\r\n              submitQueryParams(updatedParams);\r\n            }\r\n          } else if (isBodyPagination(paginationConfig)) {\r\n            if (pagination && !isBodyPaginationState(pagination)) {\r\n              throw new Error(\r\n                \"unexpected pagination source \" + pagination.source\r\n              );\r\n            }\r\n            if (!getAllConfig || !pagination?.previous) {\r\n              return;\r\n            }\r\n            const {\r\n              requestHeaders,\r\n              actualMethod,\r\n              dataPath,\r\n              sortBy,\r\n              dataTransform,\r\n            } = getAllConfig;\r\n            fetchPageData({\r\n              actualMethod: actualMethod,\r\n              url: pagination.previous,\r\n              requestHeaders: requestHeaders,\r\n              dataPath: dataPath,\r\n              dataTransform: dataTransform,\r\n              sortBy: sortBy,\r\n            });\r\n          } else {\r\n            throw new Error(\"unrecognized pagination source\");\r\n          }\r\n        }\r\n      : null;\r\n\r\n    const callbacks = {\r\n      delete: deleteConfig ? deleteItem : null,\r\n      put: putConfig ? openEditPopup : null,\r\n      action: customActions.length ? openCustomActionPopup : () => {},\r\n      getNextPage,\r\n      getPreviousPage,\r\n    };\r\n\r\n    if (getAllConfig?.display.type === \"cards\") {\r\n      return (\r\n        <Cards\r\n          pagination={pagination}\r\n          callbacks={callbacks}\r\n          fields={fields}\r\n          items={filteredItems}\r\n          customActions={customActions}\r\n          customLabels={customLabels}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Table\r\n        pagination={pagination}\r\n        callbacks={callbacks}\r\n        fields={fields}\r\n        items={filteredItems}\r\n        customActions={customActions}\r\n        customLabels={customLabels}\r\n      />\r\n    );\r\n  }\r\n\r\n  function renderPaginationStateLabel() {\r\n    if (loading || !items.length) {\r\n      return;\r\n    }\r\n\r\n    if (!pagination || isQueryPaginationState(pagination)) {\r\n      const currentCountFrom =\r\n        ((pagination?.page || 1) - 1) * (pagination?.limit || 10) + 1;\r\n      const currentCountTo = currentCountFrom + items.length - 1;\r\n      let label: string = `${locale.showing_result} ${currentCountFrom}-${currentCountTo} ${locale.out_of} ${pagination?.total} ${locale.items}`;\r\n\r\n      if (pagination?.type === \"infinite-scroll\") {\r\n        label = `Showing ${pagination?.total} items`;\r\n      }\r\n\r\n      if (customLabels?.pagination?.itemsCount) {\r\n        label = customLabels?.pagination?.itemsCount\r\n          .replace(\":currentCountFrom\", currentCountFrom as any)\r\n          .replace(\":currentCountTo\", currentCountFrom as any)\r\n          .replace(\":totalCount\", pagination?.total as any);\r\n      }\r\n\r\n      return <p className=\"center pagination-state\">{label}</p>;\r\n    }\r\n    if (isBodyPaginationState(pagination)) {\r\n      // TODO: extract start end end in a meaningful manner from the API\r\n      // this is not something that id based pagination APIs support generally\r\n      let label: string = `Total Results: ${pagination?.total}`;\r\n      if (pagination?.type === \"infinite-scroll\") {\r\n        label = `Showing ${pagination?.total} items`;\r\n      }\r\n\r\n      if (customLabels?.pagination?.itemsCount) {\r\n        label = customLabels?.pagination?.itemsCount.replace(\r\n          \":totalCount\",\r\n          pagination?.total as any\r\n        );\r\n      }\r\n\r\n      return <p className=\"center pagination-state\">{label}</p>;\r\n    }\r\n  }\r\n\r\n  function renderPageContent() {\r\n    const fields = getAllConfig?.fields || getAllConfig?.display?.fields || [];\r\n    const fieldsToFilter = fields\r\n      .filter((field) => field.filterable)\r\n      .map((field) => field.name);\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <QueryParams\r\n          initialParams={queryParams}\r\n          paginationConfig={paginationConfig}\r\n          submitCallback={submitQueryParams}\r\n        />\r\n        {fieldsToFilter.length > 0 && <FilterField onChange={setFilter} />}\r\n        {pagination?.total && renderPaginationStateLabel()}\r\n        {error ? <div className=\"app-error\">{error}</div> : renderItemsUI()}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    const nextActivePage: IConfigPage | null =\r\n      context?.config?.pages?.filter(\r\n        (p, pIdx) => p.id === page || pIdx + 1 === parseInt(page || \"\")\r\n      )[0] || null;\r\n    context.setActivePage(nextActivePage);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [page]);\r\n\r\n  useEffect(() => {\r\n    const {\r\n      initQueryParams,\r\n      initialPagination,\r\n    } = buildInitQueryParamsAndPaginationState(\r\n      getAllConfig?.queryParams || [],\r\n      paginationConfig\r\n    );\r\n\r\n    setItems([]);\r\n    setQueryParams(extractQueryParams(initQueryParams));\r\n    setPagination(initialPagination);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [activePage]);\r\n\r\n  useEffect(() => {\r\n    // Load data when query params\r\n    getAllRequest();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [queryParams]);\r\n\r\n  return (\r\n    <div className=\"app-page\">\r\n      <header className=\"app-page-header\">\r\n        <hgroup>\r\n          <h2>{activePage?.name}</h2>\r\n          {activePage?.description && <h4>{activePage?.description}</h4>}\r\n        </hgroup>\r\n        {graphConfig && (\r\n          <Button\r\n            className=\"add-item\"\r\n            color=\"green\"\r\n            onClick={() => openGraphPopup(graphConfig)}\r\n          >\r\n            {openGraphLabel}\r\n          </Button>\r\n        )}\r\n        {postConfig && (\r\n          <Button\r\n            className=\"add-item\"\r\n            color=\"green\"\r\n            onClick={() =>\r\n              setOpenedPopup({\r\n                type: \"add\",\r\n                title: addItemFormTitle,\r\n                config: postConfig,\r\n                submitCallback: addItem,\r\n              })\r\n            }\r\n          >\r\n            {addItemLabel}\r\n          </Button>\r\n        )}\r\n      </header>\r\n      <main className=\"app-page-content\">{renderPageContent()}</main>\r\n      {openedPopup && (\r\n        <FormPopup\r\n          title={openedPopup.title}\r\n          closeCallback={closeFormPopup}\r\n          submitCallback={openedPopup.submitCallback}\r\n          type={openedPopup.type}\r\n          fields={openedPopup.config?.fields || []}\r\n          loadedFields={loadedFields}\r\n          rawData={openedPopup.rawData}\r\n          getSingleConfig={openedPopup.getSingleConfig}\r\n          methodConfig={openedPopup.config}\r\n        />\r\n      )}\r\n      {openedGraph && (\r\n        <GraphPopup\r\n          title={openedGraph.title}\r\n          closeCallback={closeGraph}\r\n          fields={openedGraph.config?.fields || []}\r\n          graphConfig={openedGraph.config}\r\n        />\r\n      )}\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Page = withAppContext(PageComp);\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button } from \"../button/button.comp\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { withAppContext } from \"../withContext/withContext.comp\";\r\nimport locale from \"../../common/locale.js\";\r\nimport { IAppContext } from \"../app.context\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport {\r\n  IConfigPage,\r\n  IConfigMethods,\r\n  IConfigGetAllMethod,\r\n  IConfigPostMethod,\r\n  IConfigPutMethod,\r\n  IConfigDeleteMethod,\r\n  IConfigInputField,\r\n  IConfigCustomAction,\r\n  IConfigGetSingleMethod,\r\n  ICustomLabels,\r\n  IConfigPagination,\r\n  IConfigGraphMethod,\r\n} from \"../../common/models/config.model\";\r\n\r\nimport \"./authPage.scss\";\r\nimport { FormPopup } from \"../formPopup/formPopup.comp\";\r\n\r\ninterface IProps {\r\n  context: IAppContext;\r\n}\r\n\r\ninterface IPopupProps {\r\n  type: \"add\";\r\n  title: string;\r\n  config: IConfigPostMethod | IConfigPutMethod;\r\n  submitCallback: (body: any, containFiles: boolean) => void;\r\n  getSingleConfig?: IConfigGetSingleMethod;\r\n  rawData?: {};\r\n}\r\n\r\nconst AuthPageComp = ({ context }: IProps) => {\r\n  const { location, replace } = useHistory();\r\n  const [user, setUser] = useState<string>(\"\");\r\n  const [pwd, setPwd] = useState<string>(\"\");\r\n  const [tenant, setTenant] = useState<string>(\"\");\r\n  const { setError, httpService } = context;\r\n  const [openedAddTenant, setOpenedAddTenant] = useState<null | IPopupProps>(\r\n    null\r\n  );\r\n  const postConfig: IConfigPostMethod | undefined = {\r\n    url: \"/tenants/\",\r\n    actualMethod: \"post\",\r\n    requestHeaders: { \"content-type\": \"application/json\" },\r\n    fields: [\r\n      { name: \"token\", type: \"text\", value: \"\", label: \"Token\" },\r\n      { name: \"_id\", type: \"text\", value: \"\", label: \"ID\" },\r\n      {\r\n        name: \"organization\",\r\n        type: \"text\",\r\n        value: \"\",\r\n        label: \"Organizzazione\",\r\n      },\r\n      { name: \"address\", type: \"text\", value: \"\", label: \"Indirizzo\" },\r\n      { name: \"email\", type: \"email\", value: \"\", label: \"e-mail\" },\r\n      { name: \"phone\", type: \"text\", value: \"\", label: \"Telefono\" },\r\n      {\r\n        name: \"admin_username\",\r\n        type: \"text\",\r\n        value: \"\",\r\n        label: \"Username Amministratore\",\r\n      },\r\n      {\r\n        name: \"admin_password\",\r\n        type: \"password\",\r\n        value: \"\",\r\n        label: \"Password Amministratore\",\r\n      },\r\n    ],\r\n    queryParams: [],\r\n  };\r\n\r\n  async function submitForm(e: any) {\r\n    e.preventDefault();\r\n\r\n    console.log(\"entrato nel submit form\");\r\n\r\n    try {\r\n      const credentials = {\r\n        username: `${user}`,\r\n        password: `${pwd}`,\r\n        tenant: `${tenant}`,\r\n      };\r\n      const result = await httpService.fetch({\r\n        method: \"post\",\r\n        origUrl: httpService.loginUrl,\r\n        body: JSON.stringify(credentials),\r\n        headers: { \"content-type\": \"application/json\" },\r\n      });\r\n      if (!result) {\r\n        throw new Error(locale.login_error);\r\n      }\r\n      if (result.status === 401) {\r\n        throw new Error(locale.login_error);\r\n      }\r\n\r\n      if (result.user.type !== \"admin\") {\r\n        throw new Error(locale.login_unauthorised_user);\r\n      }\r\n\r\n      sessionStorage.setItem(\"diten-token\", result.token);\r\n      window.location.replace(\"/\");\r\n      console.log(\"token impostato\");\r\n\r\n      //const { from } = location.state || { from: { pathname: \"/\" } };\r\n      //replace(from);\r\n    } catch (e) {\r\n      setError(e.message);\r\n      toast.error(e.message, {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n    }\r\n  }\r\n\r\n  function handleUserChange(event: any) {\r\n    setUser(event.target.value);\r\n  }\r\n\r\n  function handlePwdChange(event: any) {\r\n    setPwd(event.target.value);\r\n  }\r\n\r\n  function handleTenantChange(event: any) {\r\n    setTenant(event.target.value);\r\n  }\r\n\r\n  function closeAddTenantPopup() {\r\n    setOpenedAddTenant(null);\r\n  }\r\n\r\n  async function addTenant(body: any) {\r\n    if (!postConfig) {\r\n      throw new Error(\"Post method is not defined.\");\r\n    }\r\n\r\n    console.log(body);\r\n\r\n    const tokenHead = body[\"token\"];\r\n\r\n    delete body[\"token\"];\r\n\r\n    const result = await httpService.fetch({\r\n      method: \"post\",\r\n      origUrl: httpService.baseUrl + \"/tenants\",\r\n      body: JSON.stringify(body),\r\n      headers: { \"content-type\": \"application/json\", Authorization: tokenHead },\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"auth-page\">\r\n      <h4>{locale.login}</h4>\r\n      <form className=\"form-content\" onSubmit={submitForm}>\r\n        <div className=\"form-row row\">\r\n          <label>{locale.username}</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder={locale.username_suggestion}\r\n            onChange={handleUserChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-row row\">\r\n          <label>{locale.password}</label>\r\n          <input\r\n            type=\"password\"\r\n            placeholder={locale.password_suggenstion}\r\n            onChange={handlePwdChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-row row\">\r\n          <label>{locale.tenant}</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder={locale.tenant_suggenstion}\r\n            onChange={handleTenantChange}\r\n          />\r\n        </div>\r\n        <div className=\"buttons-wrapper center\">\r\n          <Button type=\"submit\" onClick={submitForm} color=\"green\">\r\n            {locale.submit}\r\n          </Button>\r\n        </div>\r\n      </form>\r\n\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <div className=\"form-content\">\r\n        <div className=\"form-row row\">\r\n          <h5>{locale.add_tenant}</h5>\r\n          <div className=\"buttons-wrapper center\"></div>\r\n          <Button\r\n            title={locale.add_tenant}\r\n            onClick={() =>\r\n              setOpenedAddTenant({\r\n                type: \"add\",\r\n                title: locale.add_tenant,\r\n                config: postConfig,\r\n                submitCallback: addTenant,\r\n              })\r\n            }\r\n            color=\"green\"\r\n          >\r\n            <i className=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      {openedAddTenant && (\r\n        <FormPopup\r\n          title={openedAddTenant.title}\r\n          closeCallback={closeAddTenantPopup}\r\n          submitCallback={openedAddTenant.submitCallback}\r\n          fields={openedAddTenant.config?.fields || []}\r\n          rawData={openedAddTenant.rawData}\r\n          getSingleConfig={openedAddTenant.getSingleConfig}\r\n          methodConfig={openedAddTenant.config}\r\n        />\r\n      )}\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const AuthPage = withAppContext(AuthPageComp);\r\n","import React, { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { IAppContext } from \"../app.context\";\r\nimport { withAppContext } from \"../withContext/withContext.comp\";\r\nimport { Button } from \"../button/button.comp\";\r\nimport locale from \"../../common/locale.js\";\r\n\r\nimport \"./navigation.scss\";\r\n\r\ninterface IProps {\r\n  context: IAppContext;\r\n}\r\n\r\nconst NavigationComp = ({ context: { config } }: IProps) => {\r\n  const [isOpened, setIsOpened] = useState<boolean>(false);\r\n\r\n  function logOut() {\r\n    sessionStorage.clear();\r\n    document.location.replace(\"/\");\r\n  }\r\n\r\n  return (\r\n    <nav className=\"app-nav\">\r\n      <Button className=\"app-nav-opener\" onClick={() => setIsOpened(!isOpened)}>\r\n        {isOpened ? (\r\n          <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n        ) : (\r\n          <i className=\"fa fa-bars\" aria-hidden=\"true\"></i>\r\n        )}\r\n      </Button>\r\n\r\n      <div className={`app-nav-wrapper ${isOpened ? \"opened\" : \"\"}`}>\r\n        <div className=\"app-nav-links\">\r\n          {(config?.pages || []).map((page, idx) => (\r\n            <NavLink\r\n              to={`/${page.id || idx + 1}`}\r\n              activeClassName=\"active\"\r\n              key={`page_${idx}`}\r\n              onClick={() => setIsOpened(false)}\r\n            >\r\n              {page.name}\r\n            </NavLink>\r\n          ))}\r\n        </div>\r\n        <div className=\"logout-wrapper\">\r\n          <Button color=\"red\" onClick={() => logOut()}>\r\n            {locale.logout}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport const Navigation = withAppContext(NavigationComp);\r\n","import React from 'react';\r\nimport { ICustomStyles } from '../../common/models/config.model';\r\n\r\ninterface IProps {\r\n  styles: ICustomStyles\r\n}\r\n\r\nexport const CustomStyles = ({ styles }: IProps) => {\r\n  const cssVars = styles.vars || {};\r\n  const arr = [];\r\n  \r\n  for (const key in cssVars) {\r\n    arr.push(`--${key}: ${(cssVars as any)[key]}`);\r\n  }\r\n\r\n  return (\r\n    <style dangerouslySetInnerHTML={{ __html: `\r\n      :root {\r\n        ${arr.join(';')}\r\n      }\r\n    ` }}>\r\n    </style>\r\n  );\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport ConfigService from \"../services/config.service\";\r\nimport { IConfig, IConfigPage } from \"../common/models/config.model\";\r\nimport { Page } from \"../components/page/page.comp\";\r\nimport { AuthPage } from \"../components/authPage/authPage.comp\";\r\nimport { Navigation } from \"../components/navigation/navigation.comp\";\r\nimport { AppContext } from \"./app.context\";\r\nimport HttpService from \"../services/http.service\";\r\nimport { CustomStyles } from \"./customStyles/customStyles.comp\";\r\n\r\nimport \"./app.scss\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\ninterface ILoadedFields {\r\n  fieldName: string;\r\n  values: Array<string>;\r\n}\r\n\r\nconst httpService = new HttpService();\r\nconst defaultAppName: string = \"RESTool App\";\r\n\r\nfunction changeFavicon(src: string) {\r\n  const link = document.createElement(\"link\");\r\n  const oldLink = document.getElementById(\"favicon\");\r\n  link.id = \"favicon\";\r\n  link.rel = \"shortcut icon\";\r\n  link.href = src;\r\n  if (oldLink) {\r\n    document.head.removeChild(oldLink);\r\n  }\r\n  document.head.appendChild(link);\r\n}\r\n\r\nfunction App() {\r\n  const [loadedFields, setLoadedFields] = useState<ILoadedFields[]>(\r\n    Array<ILoadedFields>(0)\r\n  );\r\n  const [fetchedData, setFetchedData] = useState<boolean>();\r\n  const [firstLoad, setFirstLoad] = useState<boolean>(true);\r\n  const [config, setConfig] = useState<IConfig | null>(null);\r\n  const [activePage, setActivePage] = useState<IConfigPage | null>(\r\n    config?.pages?.[0] || null\r\n  );\r\n  const [error, setError] = useState<string | null>(null);\r\n  const appName: string = config?.name || defaultAppName;\r\n\r\n  async function loadConfig(url?: string): Promise<void> {\r\n    try {\r\n      const windowConfig = (window as any).RESTool?.config;\r\n      let remoteConfig: IConfig;\r\n      // Try to load config from window object first\r\n      if (!url && windowConfig) {\r\n        remoteConfig = Object.assign({}, windowConfig, {});\r\n      } else {\r\n        remoteConfig = url\r\n          ? await ConfigService.getRemoteConfig(url)\r\n          : await ConfigService.loadDefaultConfig();\r\n      }\r\n\r\n      // Setting global config for httpService\r\n      httpService.baseUrl = remoteConfig.baseUrl || \"\";\r\n      httpService.loginUrl = remoteConfig.loginUrl || \"\";\r\n      httpService.errorMessageDataPath =\r\n        remoteConfig.errorMessageDataPath || \"\";\r\n      httpService.unauthorizedRedirectUrl =\r\n        remoteConfig.unauthorizedRedirectUrl || \"\";\r\n      httpService.requestHeaders = remoteConfig.requestHeaders || {};\r\n      document.title = remoteConfig.name || defaultAppName;\r\n\r\n      if (remoteConfig?.favicon) {\r\n        changeFavicon(remoteConfig.favicon);\r\n      }\r\n\r\n      if (remoteConfig?.remoteUrl) {\r\n        return await loadConfig(remoteConfig.remoteUrl);\r\n      }\r\n\r\n      setConfig(remoteConfig);\r\n    } catch (e) {\r\n      console.error(\"Could not load config file\", e);\r\n    }\r\n\r\n    setFirstLoad(false);\r\n  }\r\n\r\n  async function preloadData() {\r\n    const resultsData = await httpService.fetch({\r\n      method: \"get\",\r\n      origUrl: httpService.baseUrl + \"/v1/types\",\r\n      headers: { \"content-type\": \"application/json\" },\r\n    });\r\n\r\n    var tempLD = Array<ILoadedFields>(12).fill({\r\n      fieldName: \"\",\r\n      values: [],\r\n    });\r\n    const keys = Object.keys(resultsData);\r\n    const values: Array<string> = Object.values(resultsData);\r\n\r\n    for (var i in tempLD) {\r\n      tempLD[i] = { fieldName: keys[i], values: Object.values(values[i]) };\r\n    }\r\n\r\n    setLoadedFields(tempLD);\r\n  }\r\n\r\n  function scrollToTop(scrollDuration: number = 250) {\r\n    var cosParameter = window.scrollY / 2,\r\n      scrollCount = 0,\r\n      oldTimestamp = performance.now();\r\n\r\n    function step(newTimestamp: number) {\r\n      scrollCount += Math.PI / (scrollDuration / (newTimestamp - oldTimestamp));\r\n\r\n      if (scrollCount >= Math.PI) {\r\n        window.scrollTo(0, 0);\r\n      }\r\n\r\n      if (window.scrollY === 0) {\r\n        return;\r\n      }\r\n\r\n      window.scrollTo(\r\n        0,\r\n        Math.round(cosParameter + cosParameter * Math.cos(scrollCount))\r\n      );\r\n      oldTimestamp = newTimestamp;\r\n      window.requestAnimationFrame(step);\r\n    }\r\n\r\n    window.requestAnimationFrame(step);\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadConfig();\r\n    setFetchedData(false);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const { isValid, errorMessage } = ConfigService.validateConfig(config);\r\n\r\n    if (!isValid) {\r\n      setError(errorMessage);\r\n      toast.error(errorMessage, {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n      return;\r\n    }\r\n  }, [config]);\r\n\r\n  const tkn = sessionStorage.getItem(\"diten-token\");\r\n\r\n  if (tkn === null)\r\n    return (\r\n      <div className=\"restool-app\">\r\n        <AppContext.Provider\r\n          value={{\r\n            config,\r\n            activePage,\r\n            setActivePage,\r\n            error,\r\n            setError,\r\n            httpService,\r\n          }}\r\n        >\r\n          <Router>\r\n            <Route exact path=\"/\" component={AuthPage} />\r\n          </Router>\r\n        </AppContext.Provider>\r\n      </div>\r\n    );\r\n\r\n  if (tkn !== null && fetchedData === false) {\r\n    preloadData();\r\n\r\n    setFetchedData(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"restool-app\">\r\n      {!config ? (\r\n        <div className=\"app-error\">\r\n          {firstLoad\r\n            ? \"Loading Configuration...\"\r\n            : \"Could not find config file.\"}\r\n        </div>\r\n      ) : (\r\n        <AppContext.Provider\r\n          value={{\r\n            config,\r\n            activePage,\r\n            setActivePage,\r\n            error,\r\n            setError,\r\n            httpService,\r\n          }}\r\n        >\r\n          {config.customStyles && <CustomStyles styles={config.customStyles} />}\r\n          <Router>\r\n            <aside>\r\n              <h1 title={appName} onClick={() => scrollToTop()}>\r\n                {appName}\r\n              </h1>\r\n              {<Navigation />}\r\n            </aside>\r\n            {config && (\r\n              <Switch>\r\n                <Route exact path=\"/login\" component={AuthPage} />\r\n                <Route\r\n                  exact\r\n                  path=\"/:page\"\r\n                  component={() => <Page loadedFields={loadedFields} />}\r\n                />\r\n                <Redirect path=\"/\" to={`/${config?.pages?.[0]?.id || \"1\"}`} />\r\n              </Switch>\r\n            )}\r\n            <ToastContainer\r\n              position={toast.POSITION.TOP_CENTER}\r\n              autoClose={4000}\r\n              draggable={false}\r\n            />\r\n          </Router>\r\n        </AppContext.Provider>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config: any) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config: any) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config: any) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport './index.scss';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nserviceWorker.unregister();\r\n","const locale = Object.freeze({\r\n    username: 'Nome utente',\r\n    password: 'Password',\r\n    tenant: 'Organizzazione',\r\n    username_suggestion: 'Inserisci il nome utente',\r\n    password_suggenstion: 'Inserisci la password',\r\n    tenant_suggenstion: 'Inserisci la tua organizzazione',\r\n    submit: 'Invio',\r\n    login_error: 'Login errata!',\r\n    login_unauthorised_user : \"Al momento solamente gli utenti con i privilegi di amministratore possono accedere\",\r\n    search: 'Cerca',\r\n    previous_page: 'Pagina precedente',\r\n    next_page: 'Prossima pagina',\r\n    showing_result: \"Risultati\",\r\n    out_of: \"di\",\r\n    items: \"totali\",\r\n    nothing_to_see: \"Nessun risultato\",\r\n    enter_text: \"Inserisci testo\",\r\n    enter_email: \"Inserisci email\",\r\n    enter_date: \"Inserisci data\",\r\n    enter_color: \"Inserisci colore\",\r\n    enter_password: \"Inserisci password\",\r\n    next : \"Successivo\",\r\n    previous : \"Precedente\",\r\n    select : \"\",\r\n    add : \"Aggiungi\",\r\n    update : \"Aggiorna\",\r\n    session_expired : \"Sessione scaduta\",\r\n    login : \"Accedi\",\r\n    logout : \"Esci\",\r\n    graph : \"Grafico\",\r\n    wrong_feature_error : \"Questa versione del software non può costruire un grafico delle feature selezionate. Possono essere mostrati i grafici solamente di feature aventi almeno una componente scalare e numerica\",\r\n    no_data_error : \"Non sono presenti dati per poter elaborare un grafico\",\r\n    add_tenant : \"Aggiungi organizzazione\",\r\n    zoomIn : \"Ingrandisci\",\r\n    zoomOut : \"Riduci\",\r\n    value : \"Valore\",\r\n    full_privileges : \"Privilegi completi\"\r\n\r\n\r\n});\r\n\r\nmodule.exports = locale;"],"sourceRoot":""}