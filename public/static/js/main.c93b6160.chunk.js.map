{"version":3,"sources":["helpers/data.helpers.ts","services/http.service.ts","services/config.service.ts","components/app.context.ts","components/withContext/withContext.comp.tsx","components/loader/loader.comp.tsx","helpers/pagination.helpers.ts","components/button/button.comp.tsx","components/infiniteLoader/infiniteLoader.comp.tsx","components/pagination/pagination.comp.tsx","components/table/table.comp.tsx","components/cards/cards.comp.tsx","components/formRow/formRow.comp.tsx","components/queryParams/queryParams.comp.tsx","components/popup/popup.comp.tsx","helpers/file.helpers.ts","components/formPopup/formPopup.comp.tsx","components/filterField/filterField.comp.tsx","common/models/states.types.helper.ts","common/models/config.types.helper.ts","components/page/page.comp.tsx","components/authPage/authPage.comp.tsx","components/navigation/navigation.comp.tsx","components/customStyles/customStyles.comp.tsx","components/app.tsx","serviceWorker.ts","index.tsx","common/locale.js"],"names":["dataHelpers","data","dataPath","attr","extractedData","digProps","split","prop","field","type","arrayType","HttpService","baseUrl","unauthorizedRedirectUrl","errorMessageDataPath","loginUrl","requestHeaders","this","url","indexOf","rawData","outputUrl","Object","keys","forEach","key","urlParamName","replace","queryParams","length","replaceParamsInUrl","params","page","param","value","name","push","join","reqUrl","urlIsAbsolute","origUrl","finalUrl","buildUrl","authorization","sessionStorage","getItem","Authorization","method","toUpperCase","headers","assign","body","undefined","res","errorMessage","json","path","dataAtPath","extractDataByDataPath","status","statusText","redirectUrl","encodeURIComponent","document","location","href","Error","getErrorMessage","responseType","fetch","ok","text","handleError","buildRequest","makeRequest","httpService","HTTPService","endsWith","import","default","getRemoteConfig","config","isValid","configSchema","require","validate","Ajv","allErrors","verbose","compile","firstError","errors","message","console","error","AppContext","React","createContext","activePage","setError","setActivePage","withAppContext","Component","props","Consumer","context","Loader","className","paginationHelpers","parseInt","_page","_itemsPerPage","_total","Button","color","children","InfiniteLoader","Pagination","callbacks","pagination","previousTitle","customLabels","locale","previous_page","nextTitle","next_page","disabled","hasPreviousPage","onClick","previousPage","title","aria-hidden","hasNextPage","nextPage","Table","items","fields","customActions","editLabel","buttons","editItem","deleteLabel","deleteItem","actionColumnHeader","tableColumnHeaders","actions","paginationCallbacks","getNextPage","getPreviousPage","renderTableRow","item","rowIdx","map","fieldIdx","truncate","origField","origItem","src","alt","label","fieldValue","target","rel","urlLabel","style","backgroundColor","html","htmlCode","dangerouslySetInnerHTML","__html","renderTableCell","put","call","action","idx","icon","delete","renderTableContent","useEffect","clientHeight","window","innerHeight","dataLength","next","hasMore","loader","Cards","renderActions","cardIdx","renderCard","onError","e","currentTarget","Fragment","renderRow","renderCardSkeleton","duration","startingIndex","Array","from","limit","renderSkeletons","FormRow","direction","showReset","onChange","useState","optionSources","setOptionSources","pageHeaders","addArrayItemLabel","addArrayItem","clearLabel","clearInput","renderArrayItems","originalField","array","itemIdx","inputField","renderFieldInput","fieldName","updatedArray","localValue","splice","removeItemToFieldArray","aria-label","preventDefault","addItemToFieldArray","changeCallback","inputProps","defaultPlaceholder","placeholder","readonly","required","checked","optionSource","a","async","actualMethod","result","optionSourceData","option","valuePath","displayPath","display","toast","loadOptionSourceFromRemote","sortBy","finalOptions","options","sortedOptions","orderBy","placeholders","object","enter_text","number","valueAsNumber","email","password","accept","file","date","QueryParams","initialParams","paginationConfig","submitCallback","setQueryParams","submit","formChanged","submitAfterChange","updatedQueryParams","filteredParams","filter","includes","search","onSubmit","queryParam","hidden","portalRoot","getElementById","createElement","setAttribute","append","PortalPopup","el","componentDidMount","appendChild","componentWillUnmount","removeChild","ReactDOM","createPortal","Popup","_handleKeyDown","show","closeCallback","keyCode","closeLabel","closeForm","ref","refCallback","addEventListener","bind","removeEventListener","fileHelpers","fieldIndex","unflatten","FormPopup","getSingleConfig","methodConfig","fieldsCopy","JSON","parse","stringify","loading","setLoading","formFields","setFormFields","finalRawData","setFinalRawData","submitForm","finalObject","includeOriginalFields","formData","FormData","containFiles","isMultipartForm","validationError","useInUrl","checkIfFieldIsObject","fileInput","querySelector","files","firstFile","success","updatedFormFields","originalName","dataPathSplit","lookupValue","objToLookIn","pathElem","lookup","initFormFields","FilterField","toLowerCase","isQueryPaginationState","obj","source","isBodyPaginationState","isQueryPagination","isBodyPagination","buildInitQueryParamsAndPaginationState","initQueryParams","initialPagination","descending","find","previous","Page","useParams","useHistory","pageMethods","methods","getAllConfig","getAll","infiniteScroll","getSingle","postConfig","post","putConfig","deleteConfig","addItemLabel","addItem","addItemFormTitle","formTitles","editItemFormTitle","openedPopup","setOpenedPopup","setPagination","setItems","setFilter","openEditPopup","updateItem","openCustomActionPopup","performAction","fetchPageData","isArray","dataTransform","orderedItems","total","newPaginationState","getUpdatedPaginationState","getAllRequest","confirm","updatedParams","remove","submitQueryParams","reset","paramsToUrl","queryState","newState","nextPath","prevPath","countPath","nextActivePage","pages","p","pIdx","id","parsedParams","QueryString","finalQueryParams","decodeURIComponent","extractQueryParams","description","fieldsToFilter","filterable","currentCountFrom","currentCountTo","showing_result","out_of","itemsCount","renderPaginationStateLabel","filteredItems","passFilter","nothing_to_see","newPage","renderItemsUI","renderPageContent","refreshData","AuthPage","user","setUser","pwd","setPwd","tenant","setTenant","credentials","username","login_error","setItem","token","state","pathname","username_suggestion","event","password_suggenstion","tenant_suggenstion","Navigation","isOpened","setIsOpened","to","activeClassName","CustomStyles","cssVars","styles","vars","arr","defaultAppName","changeFavicon","link","oldLink","head","App","firstLoad","setFirstLoad","setConfig","appName","loadConfig","windowConfig","RESTool","remoteConfig","ConfigService","loadDefaultConfig","favicon","remoteUrl","validateConfig","Provider","customStyles","scrollDuration","cosParameter","scrollY","scrollCount","oldTimestamp","performance","now","requestAnimationFrame","step","newTimestamp","Math","PI","scrollTo","round","cos","scrollToTop","exact","component","position","POSITION","TOP_CENTER","autoClose","draggable","Boolean","hostname","match","render","navigator","serviceWorker","ready","then","registration","unregister","freeze","module","exports"],"mappings":"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","file":"static/js/main.c93b6160.chunk.js","sourcesContent":["import { IConfigInputField } from \"../common/models/config.model\";\n\nclass DataHelpers {\n\n  public extractDataByDataPath(data: any, dataPath: string, attr: string | null = null) {\n    if (!data || !dataPath) {\n      if (attr) {\n        return data[attr];\n      }\n      return data;\n    }\n\t\n    let extractedData: any = data;\n    const digProps: string[] = dataPath.split('.');\n\n    for (let prop of digProps) {\n      if (typeof extractedData[prop] !== 'undefined') {\n        extractedData = extractedData[prop];\n      } else {\n        return null;\n      }\n    }\n\n    if (typeof extractedData === 'undefined') {\n      return null;\n    }\n\n    if (attr) {\n      return extractedData[attr];\n    }\n\n    return extractedData;\n  }\n\n  public checkIfFieldIsObject(field: IConfigInputField): boolean {\n    if (field.type === 'object') {\n      return true;\n    }\n\n    if (field.type === 'array') {\n      if (!field.arrayType || field.arrayType === 'object') {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n}\n\nexport const dataHelpers = new DataHelpers();","import { TConfigMethod, IQueryParam } from '../common/models/config.model';\nimport { dataHelpers } from '../helpers/data.helpers';\n\nexport type ResponseType = 'json' | 'text' | 'boolean' | 'status';\n\nexport interface IFetchParams {\n  origUrl: string\n  method?: TConfigMethod\n  headers?: any\n  queryParams?: IQueryParam[]\n  rawData?: any\n  body?: any\n  responseType?: ResponseType\n}\n\nclass HttpService {\n  public baseUrl: string;\n  public loginUrl: string;\n  public unauthorizedRedirectUrl: string;\n  public errorMessageDataPath: string | string[];\n  public requestHeaders: any;\n\n  constructor(baseUrl: string = '', unauthorizedRedirectUrl: string = '', errorMessageDataPath: string = '', loginUrl: string = '') {\n    this.baseUrl = baseUrl || '';\n    this.loginUrl = loginUrl || '';\n    this.unauthorizedRedirectUrl = unauthorizedRedirectUrl || '';\n    this.errorMessageDataPath = errorMessageDataPath || '';\n    this.requestHeaders = {};\n  }\n\n  private urlIsAbsolute(url: string) {\n    if (url.indexOf('http') === 0 || url.indexOf('https') === 0) {\n      return true;\n    }\n    return false;\n  }\n\n  private replaceParamsInUrl(url: string, rawData?: any): string {\n    if (!rawData || typeof rawData !== 'object') {\n      return url;\n    }\n\n    let outputUrl = url;\n\n    Object.keys(rawData).forEach((key) => {\n      const urlParamName = `:${key}`;\n      outputUrl = outputUrl.replace(urlParamName, rawData[key] as string);\n    });\n\n    return outputUrl;\n  }\n\n  private buildUrl(url: string, queryParams: IQueryParam[] = [], rawData?: any): string {\n    if (!queryParams || !queryParams.length) {\n      return this.replaceParamsInUrl(url, rawData);\n    }\n\n    let outputUrl = url;\n    const params = [];\n    let page = '-1'\n\n    for (let param of queryParams) {\n      let value = '';\n      if (!param.name || typeof param.value === 'undefined') { continue; } \n      if (param.name === 'page') { page = param.value; continue; }\n      if (param.name === 'info') value = '{\"$regex\":\"' + param.value + '\",\"$options\":\"i\"}';\n      else value = '\"' + param.value + '\"';\n      params.push(`\"${param.name}\":${value || ''}`);\n    }\n\n    outputUrl += '?filter={' + params.join(',') + '}';\n    if(page != '-1') outputUrl += \"&page\" + page;\n\n    return outputUrl;\n  }\n\n  private buildRequest(params: IFetchParams): { url: string, params: any } {\n    const reqUrl: string = this.urlIsAbsolute(params.origUrl) ? params.origUrl : this.baseUrl + params.origUrl;\n    const finalUrl: string = this.buildUrl(reqUrl, params.queryParams, params.rawData);\n    const authorization = sessionStorage.getItem('diten-token') ? { Authorization: sessionStorage.getItem('diten-token'), } : {};\n    const requestParams = {\n      method: params.method ? params.method.toUpperCase() : 'GET',\n      headers: Object.assign(authorization, this.requestHeaders, params.headers || {}),\n      body: params.method === 'post' || params.method === 'put' || params.method === 'patch' ? params.body : undefined\n    };\n\n    return {\n      url: finalUrl,\n      params: requestParams\n    };\n  }\n\n  private async getErrorMessage(res: Response | any): Promise<string> {\n    let errorMessage: string = '';\n\n    try {\n      const body = await res.json();\n\n      for (const path of this.errorMessageDataPath) {\n        const dataAtPath = dataHelpers.extractDataByDataPath(body, path);\n\n        if (dataAtPath) {\n          errorMessage = dataAtPath;\n        }\n      }\n    } catch { } // TODO: proper handling of errors (^.^)\n\n    return errorMessage && errorMessage.length ?\n      errorMessage :\n      `${res.status} - ${res.statusText || ''}`;\n  }\n\n  private async handleError(res: Response) {\n    // In case response status is \"Unauthorized\", redirect to relevant url\n    if (res.status === 401 && this.unauthorizedRedirectUrl) {\n      const redirectUrl: string = this.unauthorizedRedirectUrl.replace(':returnUrl', encodeURIComponent(document.location.href));\n      document.location.href = redirectUrl;\n      return;\n    }\n\n    throw new Error(await this.getErrorMessage(res));\n  }\n\n  private async makeRequest(url: string, params: any = {}, responseType: ResponseType = 'json') {\n    const res: Response = await fetch(url, Object.assign({}, params, {}));\n\n    if (res.ok) {\n      switch (responseType) {\n        case 'json':\n          return await res.json();\n        case 'text':\n          return await res.text();\n        case 'boolean':\n          return true;\n        default:\n          return true;\n      }\n    }\n\n    await this.handleError(res);\n  }\n\n  public async fetch({ method, origUrl, queryParams, rawData, body, headers, responseType }: IFetchParams) {\n    const { url, params } = this.buildRequest({ method, origUrl, queryParams, rawData, body, headers });\n    return await this.makeRequest(url, params, responseType);\n  }\n}\n\nexport default HttpService;\n","import HTTPService from './http.service';\nimport { IConfig } from '../common/models/config.model';\nimport Ajv from 'ajv';\n\nconst httpService: HTTPService = new HTTPService();\n\nclass ConfigService extends HTTPService {\n\n  public async getRemoteConfig(url: string) {\n    if (url.endsWith('.js')) {\n      return (await import(/* webpackIgnore: true */url)).default;\n    }\n    return await httpService.fetch({\n      origUrl: url,\n    });\n  }\n\n  public async loadDefaultConfig() { return (await this.getRemoteConfig('../../config.js')); }\n\n  public validateConfig(config: IConfig | null): { isValid: boolean, errorMessage: string | null } {\n    if (config === null) {\n      return {\n        isValid: true,\n        errorMessage: null,\n      }\n    }\n    const configSchema = require('../assets/schemas/config.schema.json');\n    const ajv = new Ajv({\n      allErrors: true,\n      verbose: true,\n    });\n    const validate = ajv.compile(configSchema);\n    const isValid = validate(config);\n    if (typeof isValid !== 'boolean') {\n      throw new Error('Unexpected asynchronous JSON validation');\n    }\n    if (isValid) {\n      return {\n        isValid,\n        errorMessage: null,\n      }\n    }\n    const firstError = validate.errors ? validate.errors[0] : undefined;\n    let errorMessage: string | null = null;\n    if (firstError?.message && firstError?.dataPath) {\n      errorMessage = `Error parsing configuration at \"${firstError.dataPath}\": ${firstError.message}`\n    } else if (firstError?.message) {\n      errorMessage = `Error parsing configuration: ${firstError.message}`\n    } else if (firstError?.dataPath) {\n      errorMessage = `Error parsing configuration at \"${firstError.dataPath}\"`\n    } else {\n      errorMessage = `Error parsing configuration`;\n    }\n    console.error(errorMessage);\n    console.error('All configuration errors: ', validate.errors);\n    return {\n      isValid,\n      errorMessage,\n    };\n  }\n\n}\n\nexport default new ConfigService();\n","import React from 'react';\nimport { IConfig, IConfigPage } from '../common/models/config.model';\nimport HttpService from '../services/http.service';\n\nexport interface IAppContext {\n  config: IConfig | null\n  activePage: IConfigPage | null\n  error: string | null\n  setError: (error: string | null) => void\n  setActivePage: (activePage: IConfigPage | null) => void\n  httpService: HttpService\n}\n\nexport const AppContext = React.createContext<IAppContext>({\n  config: null,\n  activePage: null,\n  error: null,\n  setError: () => {},\n  setActivePage: () => {},\n  httpService: new HttpService()\n});","import React from 'react';\nimport { AppContext } from '../app.context';\n\nexport const withAppContext = (Component: any) => {\n  return (props: any) => (\n    <AppContext.Consumer>    \n      {(context) => {\n        return <Component {...props} context={context} />\n      }}\n    </AppContext.Consumer>\n  );\n};","import React from 'react';\n\nimport './loader.scss';\n\nexport const Loader = () => {\n  return (\n    <div className=\"app-loader cp-spinner cp-balls small\"></div>\n  );\n};","class PaginationHelpers {\n  public hasPreviousPage(page: string | number | undefined): boolean {\n    if (page === undefined) {\n      return false;\n    }\n\n    if (typeof page === 'string') {\n      return parseInt(page) > 1;\n    }\n\n    return page > 1;\n  }\n\n  public hasNextPage(_page: string | number, _itemsPerPage: string | number, _total: string | number | undefined): boolean {\n    if (_total === undefined) {\n      return true;\n    }\n    const page = typeof _page === 'string' ? parseInt(_page) : _page;\n    const itemsPerPage = typeof _itemsPerPage === 'string' ? parseInt(_itemsPerPage) : _itemsPerPage;\n    const total = typeof _total === 'string' ? parseInt(_total) : _total;\n\n    return page * itemsPerPage < total;\n  }\n}\n\nexport const paginationHelpers = new PaginationHelpers();","import React from 'react';\n\nimport './button.scss';\n\ninterface IProps {\n  children: any\n  type?: 'submit' | 'button' | 'reset'\n  title?: string\n  className?: string\n  onClick?: (e: any) => void\n  color?: 'gray' | 'blue' | 'green' | 'red'\n  disabled?: boolean\n}\n\nexport const Button = (props: IProps) => {\n  return (\n    <button {...props} className={`button ${props.className || ''} ${props.color || ''}`}>{props.children}</button>\n  );\n};","import React from 'react';\n\nimport './infiniteLoader.scss';\n\nexport const InfiniteLoader = () => {\n  return (\n    <div className=\"app-infinite-loader cp-spinner cp-balls small\"></div>\n  );\n};","import React from 'react';\nimport { ICustomLabels } from '../../common/models/config.model';\nimport { IPaginationState } from '../../common/models/states.model';\nimport { Button } from '../button/button.comp';\nimport locale from '../../common/locale.js';\n\nimport './pagination.scss';\n\ninterface IProps {\n  pagination: IPaginationState\n  callbacks: {\n    previousPage: () => void,\n    nextPage: () => void,\n  }\n  customLabels?: ICustomLabels\n}\n\nexport const Pagination = ({ callbacks, pagination, customLabels }: IProps) => {\n  const previousTitle = locale.previous_page;\n  const nextTitle = locale.next_page;\n  return (\n    <div className=\"pagination-wrapper\">\n      <Button disabled={!pagination.hasPreviousPage} onClick={() => callbacks.previousPage()} title={previousTitle}>\n        <i className=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\n      </Button>\n      <Button disabled={!pagination.hasNextPage} onClick={() => callbacks.nextPage()} title={nextTitle}>\n        <i className=\"fa fa-arrow-right\" aria-hidden=\"true\" ></i>\n      </Button>\n    </div>\n  );\n};","import React, { useEffect } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nimport { IConfigDisplayField, IConfigCustomAction, ICustomLabels } from '../../common/models/config.model';\nimport { dataHelpers } from '../../helpers/data.helpers';\nimport { Button } from '../button/button.comp';\nimport { InfiniteLoader } from '../infiniteLoader/infiniteLoader.comp';\nimport { IPaginationState } from '../../common/models/states.model';\nimport { Pagination } from '../pagination/pagination.comp';\n\nimport './table.scss';\n\ninterface IProps {\n  items: any[]\n  pagination?: IPaginationState\n  callbacks: {\n    delete: ((item: any) => void) | null\n    put: ((item: any) => void) | null\n    action: (item: any, action: IConfigCustomAction) => void\n    getPreviousPage: (() => void) | null\n    getNextPage: (() => void) | null\n  }\n  fields: IConfigDisplayField[]\n  customActions?: IConfigCustomAction[]\n  customLabels?: ICustomLabels\n}\n\nexport const Table = ({ items, fields, pagination, callbacks, customActions, customLabels }: IProps) => {\n  const editLabel = customLabels?.buttons?.editItem || 'Edit';\n  const deleteLabel = customLabels?.buttons?.deleteItem || 'Delete';\n  const actionColumnHeader = customLabels?.tableColumnHeaders?.actions || 'Actions';\n  const paginationCallbacks = {\n    nextPage: callbacks.getNextPage || (() => { return; }),\n    previousPage: callbacks.getPreviousPage || (() => { return; }),\n  };\n\n  function renderTableCell(origField: IConfigDisplayField, origItem: any, value: any) {\n    if (origField.type === 'boolean') {\n      value = value ? true : false;\n    }\n\n    if (value && typeof value === 'object') {\n      return 'object';\n    }\n\n    switch (origField.type) {\n      case 'text':\n        return <span>{value}</span>;\n      case 'boolean':\n        return <div className={`bool ${value ? 'true' : 'false'}`}></div>;\n      case 'image':\n        return <img src={value || ''} alt={value || origField.label || origField.name} />;\n      case 'url':\n        let url: string = origField.url || value || '';\n\n        // Replace all url vars\n        fields.forEach((field) => {\n          const fieldValue = dataHelpers.extractDataByDataPath(origItem, field.dataPath, field.name);\n          url = url.replace(`:${field.name}`, fieldValue);\n        });\n\n        return <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{origField.urlLabel || value}</a>;\n      case 'colorbox':\n        return <div className=\"colorbox\" style={{ backgroundColor: value }}></div>;\n      case 'html':\n        const htmlCode = origField.htmlCode || '<span>{value}</span>';\n        const html =  htmlCode.replace('{value}', value);\n        return <div dangerouslySetInnerHTML={{__html: html}}></div>\n      default:\n        return value;\n    }\n  }\n\n  function renderTableRow(item: any, rowIdx: number) {\n    return (\n      <tr key={`tr_${rowIdx}`}>\n        {\n          fields.map((field, fieldIdx) => {\n            const value = dataHelpers.extractDataByDataPath(item, field.dataPath, field.name);\n            return (\n              <td className={field.truncate ? 'truncate' : ''} key={`td_${rowIdx}_${fieldIdx}`}>\n                {renderTableCell(field, item, value)}\n              </td>\n            );\n          })\n        }\n        <td>\n          <div className=\"actions-wrapper\">\n            {\n              callbacks.put &&\n              <Button onClick={() => callbacks.put?.(item)} title={editLabel}>\n                <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i>\n              </Button>\n            }\n            {\n              (customActions && customActions.length > 0) &&\n              customActions.map((action, idx) => (\n                <Button key={`action_${rowIdx}_${idx}`} onClick={() => callbacks.action(item, action)} title={action.name}>\n                  <i className={`fa fa-${action.icon || 'cogs'}`} aria-hidden=\"true\"></i>\n                </Button>\n              ))\n            }\n            {\n              callbacks.delete &&\n              <Button onClick={() => callbacks.delete?.(item)} title={deleteLabel}>\n                <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n              </Button>\n            }\n          </div>\n        </td>\n      </tr>\n    );\n  }\n\n  function renderTableContent() {\n    return (\n      <table className=\"pure-table\">\n        <thead>\n          <tr>\n            {\n              fields.map((field) => {\n                return <th key={`th_${field.name}`}>{field.label || field.name}</th>;\n              })\n            }\n            <th>{actionColumnHeader}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            items.map(renderTableRow)\n          }\n        </tbody>\n      </table>\n    );\n  }\n\n  useEffect(() => {\n    if (\n      pagination?.type === 'infinite-scroll'\n      && document.body.clientHeight <= window.innerHeight\n      && pagination?.hasNextPage\n    ) {\n      paginationCallbacks.nextPage();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (pagination?.type === 'infinite-scroll') {\n    return (\n      <InfiniteScroll\n        dataLength={items.length}\n        next={callbacks.getNextPage || (() => null)}\n        hasMore={pagination?.hasNextPage || false}\n        loader={<InfiniteLoader />}\n      >\n        {renderTableContent()}\n      </InfiniteScroll>\n    );\n  }\n\n  return (\n    <div className=\"table-wrapper\">\n      {renderTableContent()}\n      {\n        pagination &&\n        pagination.type === 'buttons' &&\n        <Pagination\n          callbacks={paginationCallbacks}\n          pagination={pagination}\n          customLabels={customLabels}\n        ></Pagination>\n      }\n    </div >\n  );\n}\n","import React, { useEffect } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Skeleton from 'react-loading-skeleton';\n\nimport { IConfigDisplayField, IConfigCustomAction, ICustomLabels } from '../../common/models/config.model';\nimport { IPaginationState } from '../../common/models/states.model';\nimport { dataHelpers } from '../../helpers/data.helpers';\nimport { Button } from '../button/button.comp';\nimport { Pagination } from '../pagination/pagination.comp';\n\nimport './cards.scss';\n\ninterface IProps {\n  items: any[]\n  pagination?: IPaginationState\n  callbacks: {\n    delete: ((item: any) => void) | null\n    put: ((item: any) => void) | null\n    action: (item: any, action: IConfigCustomAction) => void\n    getNextPage: (() => void) | null\n    getPreviousPage: (() => void) | null\n  }\n  fields: IConfigDisplayField[]\n  customActions?: IConfigCustomAction[]\n  customLabels?: ICustomLabels\n}\n\nexport const Cards = ({ items, fields, callbacks, customActions, customLabels, pagination }: IProps) => {\n  const editLabel: string = customLabels?.buttons?.editItem || 'Edit';\n  const deleteLabel: string = customLabels?.buttons?.deleteItem || 'Delete';\n  const paginationCallbacks = {\n    nextPage: callbacks.getNextPage || (() => { return; }),\n    previousPage: callbacks.getPreviousPage || (() => { return; }),\n  };\n\n  function renderRow(origField: IConfigDisplayField, origItem: any, value: any) {\n    if (origField.type === 'boolean') {\n      value = value ? true : false;\n    }\n\n    if (value && typeof value === 'object') {\n      return 'object';\n    }\n\n    switch (origField.type) {\n      case 'text':\n        return <span>{value}</span>;\n      case 'boolean':\n        return <div className={`bool ${value ? 'true' : 'false'}`}></div>;\n      case 'image':\n        if (!value) {\n          return <React.Fragment></React.Fragment>;\n        }\n        return <img src={value || ''} alt={value || origField.label || origField.name} onError={(e) => e.currentTarget.src = '/avatar.png' }/>;\n      case 'url':\n        let url: string = origField.url || value || '';\n\n        // Replace all url vars\n        fields.forEach((field) => {\n          const fieldValue = dataHelpers.extractDataByDataPath(origItem, field.dataPath, field.name);\n          url = url.replace(`:${field.name}`, fieldValue);\n        });\n\n        return <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{origField.urlLabel || value}</a>;\n      case 'colorbox':\n        return <div className=\"colorbox\" style={{ backgroundColor: value }}></div>;\n      case 'html':\n        const htmlCode = origField.htmlCode || '<span>{value}</span>';\n        const html =  htmlCode.replace('{value}', value);\n        return <div dangerouslySetInnerHTML={{__html: html}}></div>\n      default:\n        return value;\n    }\n  }\n\n  function renderActions(item: any, cardIdx: number) {\n    return (\n      <div className=\"actions-wrapper\">\n        {\n          callbacks.put &&\n          <Button onClick={() => callbacks.put?.(item)} title={editLabel}>\n            <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i>\n          </Button>\n        }\n        {\n          (customActions && customActions.length > 0) &&\n          customActions.map((action, idx) => (\n            <Button key={`action_${cardIdx}_${idx}`} onClick={() => callbacks.action(item, action)} title={action.name}>\n              <i className={`fa fa-${action.icon || 'cogs'}`} aria-hidden=\"true\"></i>\n            </Button>\n          ))\n        }\n        {\n          callbacks.delete &&\n          <Button onClick={() => callbacks.delete?.(item)} title={deleteLabel}>\n            <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n          </Button>\n        }\n      </div>\n    );\n  }\n\n  function renderCard(item: any, cardIdx: number) {\n    return (\n      <div className=\"card\" key={`card_${cardIdx}`}>\n        {\n          fields.map((field, fieldIdx) => {\n            const value = dataHelpers.extractDataByDataPath(item, field.dataPath, field.name);\n            return (\n              <div className={`card-row ${field.type}`} key={`card_${cardIdx}_${fieldIdx}`}>\n                {\n                  field.type !== 'image' &&\n                  <label>{field.label || field.name}: </label>\n                }\n                {renderRow(field, item, value)}\n              </div>\n            );\n          })\n        }\n        {renderActions(item, cardIdx)}\n      </div>\n    );\n  }\n\n  function renderCardSkeleton(cardIdx: number) {\n    return (\n      <div className=\"card\" key={`card_${cardIdx}`}>\n        {\n          fields.map((field, fieldIdx) => {\n            return (\n              <div className={`card-row ${field.type}`} key={`card_${cardIdx}_${fieldIdx}`}>\n                {\n                  field.type !== 'image' &&\n                  <label>{field.label || field.name}: </label>\n                }\n                <Skeleton duration={0.6} />\n              </div>\n            );\n          })\n        }\n        {renderActions({}, cardIdx)}\n      </div>\n    );\n  }\n\n  function renderSkeletons() {\n    const startingIndex = items.length;\n    const skeletonsIndexes = Array.from(Array(pagination?.limit).keys()).map(value => value + startingIndex);\n    return skeletonsIndexes.map(renderCardSkeleton);\n  }\n\n  useEffect(() => {\n    if (\n      pagination?.type === 'infinite-scroll'\n      && document.body.clientHeight <= window.innerHeight\n      && callbacks.getNextPage\n      && pagination?.hasNextPage\n    ) {\n      callbacks.getNextPage();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (pagination?.type === 'infinite-scroll') {\n    return (\n      <InfiniteScroll className=\"cards-wrapper\"\n        dataLength={items.length}\n        next={callbacks.getNextPage || (() => null)}\n        hasMore={pagination?.hasNextPage || false}\n        loader={renderSkeletons()}\n      >\n        {items.map(renderCard)}\n      </InfiniteScroll>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"cards-wrapper\">\n        {items.map(renderCard)}\n      </div>\n      {\n        pagination &&\n        pagination.type === 'buttons' &&\n        <Pagination\n          callbacks={paginationCallbacks}\n          pagination={pagination}\n        ></Pagination>\n      }\n    </React.Fragment>\n  )\n}\n","import React, { useState } from 'react';\nimport { orderBy } from 'natural-orderby';\nimport { toast } from 'react-toastify';\n\nimport { IConfigInputField, IConfigOptionSource, ICustomLabels } from '../../common/models/config.model';\nimport { Button } from '../button/button.comp';\nimport { withAppContext } from '../withContext/withContext.comp';\nimport { IAppContext } from '../app.context';\nimport { dataHelpers } from '../../helpers/data.helpers';\nimport locale from '../../common/locale.js';\n\nimport './formRow.scss';\n\ninterface IProps {\n  context: IAppContext\n  field: IConfigInputField\n  onChange: (fieldName: string, value: any, submitAfterChange?: boolean) => void\n  showReset?: boolean\n  direction?: 'row' | 'column'\n}\n\nexport const FormRow = withAppContext(({ context, field, direction, showReset, onChange }: IProps) => {\n  const [optionSources, setOptionSources] = useState<any>({});\n  const { httpService, activePage, config } = context;\n  const pageHeaders: any = activePage?.requestHeaders || {};\n  const customLabels: ICustomLabels | undefined = { ...config?.customLabels, ...activePage?.customLabels };\n  const addArrayItemLabel = customLabels?.buttons?.addArrayItem || 'Add Item';\n  const clearLabel = customLabels?.buttons?.clearInput || 'Clear';\n\n  async function loadOptionSourceFromRemote(fieldName: string, optionSource: IConfigOptionSource) {\n    try {\n      const { url, dataPath, actualMethod, requestHeaders } = optionSource;\n\n      if (!url) {\n        throw new Error(`URL option source (for field \"${fieldName}\") is empty.`);\n      }\n\n      const result = await httpService.fetch({\n        method: actualMethod || 'get',\n        origUrl: url,\n        queryParams: [],\n        headers: Object.assign({}, pageHeaders, requestHeaders || {}),\n      });\n\n      const extractedData = dataHelpers.extractDataByDataPath(result, dataPath);\n\n      if (!extractedData || !extractedData.length) {\n        throw new Error(`Option source data is empty (for field \"${fieldName}\")`);\n      }\n\n      // Map option source to fields\n      const optionSourceData = extractedData.map((option: any, idx: number) => {\n        const { valuePath, displayPath } = optionSource;\n\n        if (typeof option === 'string') {\n          return option;\n        }\n\n        return {\n          display: displayPath && option[displayPath] ? option[displayPath] : `Option ${idx + 1}`,\n          value: valuePath && option[valuePath] ? option[valuePath] : `${idx}`,\n        };\n      });\n\n      setOptionSources({\n        ...optionSources,\n        [fieldName]: optionSourceData\n      });\n    } catch (e) {\n      toast.error(e.message);\n    }\n  }\n\n  function addItemToFieldArray(e: any, originalField: IConfigInputField) {\n    e.preventDefault();\n\n    onChange(field.name, [\n      ...(originalField.value || []),\n      ''\n    ]);\n  }\n\n  function removeItemToFieldArray(originalField: IConfigInputField, idx: number) {\n    const updatedArray = [\n      ...(originalField.value || [])\n    ];\n\n    updatedArray.splice(idx, 1);\n\n    onChange(field.name, updatedArray);\n  }\n\n  function renderArrayItems(originalField: IConfigInputField) {\n    const array: any[] = originalField.value || [];\n\n    return (\n      <div className=\"array-form\">\n        {\n          array.map((item, itemIdx) => {\n            const inputField = renderFieldInput({\n              value: item,\n              name: `${originalField.name}.${itemIdx}`,\n            } as IConfigInputField, (fieldName, value) => {\n              const updatedArray = (originalField.value || []).map((localValue: any, idx: number) => {\n                if (idx === itemIdx) {\n                  return value;\n                }\n                return localValue;\n              });\n\n              onChange(originalField.name, updatedArray);\n            });\n\n            return (\n              <div className=\"array-form-item\" key={`array_form_${itemIdx}`}>\n                {inputField}\n                <i title={clearLabel} onClick={() => removeItemToFieldArray(originalField, itemIdx)} aria-label=\"Remove\" className=\"clear-input fa fa-times\"></i>\n              </div>\n            )\n          })\n        }\n        <Button className=\"add-array-item\" onClick={(e) => addItemToFieldArray(e, originalField)} title={addArrayItemLabel}>\n          <i className=\"fa fa-plus\" aria-hidden=\"true\"></i>\n        </Button>\n      </div>\n    );\n  }\n\n  function renderFieldInput(field: IConfigInputField, changeCallback: (fieldName: string, value: any, submitAfterChange?: boolean) => void) {\n    const inputProps = (defaultPlaceholder: string = '') => {\n      return {\n        value: field.value,\n        placeholder: field.placeholder || defaultPlaceholder,\n        disabled: field.readonly,\n        required: field.required,\n        onChange: (e: any) => changeCallback(field.name, e.target.value),\n      };\n    };\n\n    switch (field.type) {\n      case 'boolean':\n        return <input type=\"checkbox\" {...inputProps()} checked={field.value} onChange={(e) => changeCallback(field.name, e.target.checked, true)} />;\n      case 'select':\n        {\n          const { optionSource } = field;\n\n          if (optionSource && !optionSources[field.name]) {\n            loadOptionSourceFromRemote(field.name, optionSource);\n            return <select {...inputProps()}><option>-- Loading Options... --</option></select>\n          }\n\n          const sortBy = field.optionSource?.sortBy;\n          const finalOptions: { value: string, display: string }[] = optionSources[field.name] || field.options || [];\n          const sortedOptions = orderBy(finalOptions, typeof sortBy === 'string' ? [sortBy] : (sortBy || []));\n\n          return (\n            <select {...inputProps()}>\n              <option>-- Select --</option>\n              {\n                sortedOptions.map((option, idx) => {\n                  const key = `option_${idx}_`;\n                  if (typeof option !== 'object') {\n                    return <option key={`${key}_${option}`} value={option}>{option}</option>\n                  }\n                  return <option key={`${key}_${option.value}`} value={option.value}>{option.display || option.value}</option>\n                })\n              }\n            </select>\n          );\n        };\n      case 'object':\n        return <textarea {...inputProps(customLabels?.placeholders?.object || 'Enter JSON...')}></textarea>;\n      case 'array': {\n        const { arrayType, value } = field;\n        if (!value || !arrayType || arrayType === 'object') {\n          return <textarea {...inputProps(customLabels?.placeholders?.array || 'Enter JSON array...')}></textarea>;\n        }\n        return renderArrayItems(field);\n      }\n      case 'long-text':\n        return <textarea {...inputProps(customLabels?.placeholders?.text || locale.enter_text)}></textarea>;\n      case 'number':\n      case 'integer':\n        return <input type=\"number\" {...inputProps(customLabels?.placeholders?.number || '0')} onChange={(e) => changeCallback(field.name, e.target.valueAsNumber)} />;\n      case 'color':\n        return <input type=\"color\" {...inputProps(customLabels?.placeholders?.color || 'Enter color...')} />;\n      case 'email':\n        return <input type=\"email\" {...inputProps(customLabels?.placeholders?.email || 'Enter email...')} />;\n      case 'password':\n        return <input type=\"password\" {...inputProps(customLabels?.placeholders?.password || 'Enter password...')} />;\n      case 'hidden':\n        return <input type=\"hidden\" value={field.value} />;\n      case 'file':\n        return <input type=\"file\" accept={field.accept || '*'} placeholder={field.placeholder || customLabels?.placeholders?.file || 'Select file...'} name={field.name || 'file'} disabled={field.readonly} required={field.required} />;\n      case 'note':\n        return <p className=\"note\">{field.value}</p>;\n      case 'date':\n        return <input type=\"date\" {...inputProps(customLabels?.placeholders?.date || 'Enter date...')} />;\n      case 'text':\n      default:\n        return <input type=\"text\" {...inputProps(customLabels?.placeholders?.text || locale.enter_text)} />;\n    }\n  }\n\n  return (\n    <div className={`form-row ${direction || 'row'}`}>\n      {\n        field.type !== 'hidden'\n      }\n      {renderFieldInput(field, onChange)}\n      {\n        (showReset && !field.readonly && field.value && field.value.length > 0) &&\n        <i title={clearLabel} onClick={() => onChange(field.name, '', true)} aria-label=\"Clear\" className=\"clear-input fa fa-times\"></i>\n      }\n    </div>\n  );\n});\n","import React, { useState, useEffect } from 'react';\n\nimport { IConfigInputField, IConfigPagination } from '../../common/models/config.model';\nimport { FormRow } from '../formRow/formRow.comp';\nimport { Button } from '../button/button.comp';\nimport locale from '../../common/locale.js';\n\nimport './queryParams.scss';\n\ninterface IProps {\n  initialParams: IConfigInputField[]\n  paginationConfig?: IConfigPagination\n  submitCallback: (queryParams: IConfigInputField[], reset?: boolean) => void\n}\n\nexport const QueryParams = ({ initialParams, paginationConfig, submitCallback }: IProps) => {\n  const [queryParams, setQueryParams] = useState<IConfigInputField[]>(initialParams);\n\n  function submit(e?: any) {\n    if (e) { e.preventDefault(); }\n    if (paginationConfig && paginationConfig.type === 'infinite-scroll') { submitCallback(queryParams, true); } \n    else { submitCallback(queryParams); }\n  }\n\n  function formChanged(fieldName: string, value: any, submitAfterChange?: boolean) {\n    const updatedQueryParams: IConfigInputField[] = [...queryParams].map((field) => {\n      if (field.name === fieldName) { field.value = value; }\n      return field;\n    });\n    setQueryParams(updatedQueryParams);\n    if (submitAfterChange) { submit(); }\n  }\n\n  useEffect(() => {\n    if (paginationConfig && paginationConfig.type === 'infinite-scroll') {\n      const filteredParams = initialParams.filter(param => !['page', 'limit'].includes(param.name));\n      setQueryParams(filteredParams);\n    } else { setQueryParams(initialParams); }\n  }, [paginationConfig, initialParams]);\n  if (!queryParams.length) { return <React.Fragment></React.Fragment>; }\n\n  return (\n    <section className=\"query-params-form\">\n      <h5>{locale.search}</h5>\n      <form onSubmit={submit}>\n        {\n          queryParams.map((queryParam, idx) => {\n            if(queryParam.name == 'page') return \"\";\n            if(queryParam.hidden) return \"\";\n            return (\n              <FormRow\n                key={`query_param_${idx}`}\n                field={queryParam}\n                onChange={formChanged}\n                showReset={!queryParam.type || queryParam.type === 'text'}\n              />\n            );\n          })\n        }\n        <Button type=\"submit\" onClick={submit}>{locale.submit}</Button>\n      </form>\n    </section>\n  );\n};","import React, { Component, RefObject, ReactChild } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './popup.scss';\nimport { ICustomLabels } from '../../common/models/config.model';\n\ninterface IPopupProps {\n  className?: string\n  style?: any\n  show: boolean\n  closeCallback: any\n  children: ReactChild\n  refCallback?: string | ((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null | undefined\n  customLabels?: ICustomLabels\n}\n\nlet portalRoot: HTMLDivElement = document.getElementById('popup-portal') as HTMLDivElement;\nif (!portalRoot) {\n  portalRoot = document.createElement('div');\n  portalRoot.setAttribute('id', 'popup-portal');\n  document.body.append(portalRoot);\n}\n\nclass PortalPopup extends Component {\n  private el: HTMLElement;\n\n  constructor(props: any) {\n    super(props);\n\n    this.el = document.createElement('div');\n  }\n\n  componentDidMount = () => {\n    portalRoot.appendChild(this.el);\n  }\n\n  componentWillUnmount = () => {\n    portalRoot.removeChild(this.el);\n  }\n\n  render() {\n    return ReactDOM.createPortal(this.props.children, this.el);\n  }\n}\n\nexport class Popup extends Component<IPopupProps> {\n  render() {\n    const style: any = Object.assign({}, { display: this.props.show ? 'block' : 'none' }, this.props.style || {});\n    const closeLabel = this.props.customLabels?.buttons?.closeForm || 'Close';\n\n    return (\n      <PortalPopup>\n        {\n          this.props.show ?\n            <div className={`popup ${this.props.className || ''}`} style={style}>\n              <div className=\"overlay\" onClick={(e: any) => this.props.closeCallback(e)}></div>\n              <div className=\"popup-content\" ref={this.props.refCallback}>\n                {this.props.children}\n                <button title={closeLabel} className=\"close-popup\" onClick={(e: any) => this.props.closeCallback(e)}>\n                  <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div> :\n            null\n        }\n      </PortalPopup>\n    );\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this._handleKeyDown.bind(this));\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this._handleKeyDown.bind(this));\n  }\n\n  _handleKeyDown = (e: KeyboardEvent) => {\n    const { show, closeCallback } = this.props;\n\n    if (show && e.keyCode === 27) {\n      closeCallback(e);\n    }\n  }\n};","import { IConfigInputField } from '../common/models/config.model';\n\nclass FileHelpers {\n\n  public isMultipartForm(fields: IConfigInputField[]): boolean {\n    for (const fieldIndex in fields) {\n      let field = fields[fieldIndex];\n\n      if (field.type === 'file') {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  \n}\n\nexport const fileHelpers = new FileHelpers();","import React, { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\n\nimport { Popup } from '../popup/popup.comp';\nimport {\n  IConfigInputField,\n  IConfigGetSingleMethod,\n  IConfigPostMethod,\n  IConfigPutMethod,\n  ICustomLabels,\n  IQueryParam\n} from '../../common/models/config.model';\nimport { FormRow } from '../formRow/formRow.comp';\nimport { Button } from '../button/button.comp';\nimport { Loader } from '../loader/loader.comp';\nimport { dataHelpers } from '../../helpers/data.helpers';\nimport { fileHelpers } from '../../helpers/file.helpers';\nimport { IAppContext } from '../app.context';\nimport { withAppContext } from '../withContext/withContext.comp';\n\nimport './formPopup.scss';\n\nconst unflatten = require('flat').unflatten;\n\ninterface IProps {\n  context: IAppContext\n  title: string\n  fields: IConfigInputField[]\n  rawData?: any\n  getSingleConfig?: IConfigGetSingleMethod\n  methodConfig: IConfigPostMethod | IConfigPutMethod\n  closeCallback: (reloadData: boolean) => void\n  submitCallback: (body: any, containFiles: boolean, queryParams: IQueryParam[]) => void\n}\n\nexport const FormPopup = withAppContext(({ context, title, fields, rawData, getSingleConfig, methodConfig, submitCallback, closeCallback }: IProps) => {\n  const fieldsCopy: IConfigInputField[] = JSON.parse(JSON.stringify(fields));\n  const { httpService, activePage, config } = context;\n  const [loading, setLoading] = useState<boolean>(true);\n  const [formFields, setFormFields] = useState<IConfigInputField[]>([]);\n  const [finalRawData, setFinalRawData] = useState<any>(null);\n  const pageHeaders: any = activePage?.requestHeaders || {};\n  const customLabels: ICustomLabels | undefined = { ...config?.customLabels, ...activePage?.customLabels };\n\n  async function initFormFields() {\n    let finalRawData: any = rawData || {};\n\n    if (getSingleConfig && getSingleConfig.url) {\n      try {\n        const { url, requestHeaders, actualMethod, dataPath, queryParams, responseType } = getSingleConfig;\n        const result = await httpService.fetch({\n          method: actualMethod || 'get',\n          origUrl: url,\n          queryParams,\n          headers: Object.assign({}, pageHeaders,  requestHeaders || {}),\n          rawData,\n          responseType\n        });\n\n        const extractedData = dataHelpers.extractDataByDataPath(result, dataPath);\n\n        if (extractedData && (typeof extractedData === 'object' || typeof extractedData === 'string')) {\n          finalRawData = extractedData;\n        }\n      } catch (e) {\n        console.error('Could not load single item\\'s data.', e);\n        toast.error('Could not load single item\\'s data.');\n      }\n    }\n\n    setFinalRawData(finalRawData); // Store the raw data for later.\n\n    setFormFields(fieldsCopy.map((field) => {\n      let key = field.name;\n\n      field.originalName = field.name;\n\n      let dataPathSplit: string[] = [];\n\n      if (field.dataPath) {\n        dataPathSplit = field.dataPath.split('.');\n        key = `${field.dataPath}.${field.name}`;\n      }\n\n      const lookup = () => {\n        let objToLookIn = finalRawData;\n        for(const pathElem of dataPathSplit) {\n          if(objToLookIn[pathElem] !== undefined && objToLookIn[pathElem] !== null) {\n            objToLookIn = objToLookIn[pathElem];\n          } else {\n            return undefined;\n          }\n        }\n        return objToLookIn[field.name];\n      }\n\n      const lookupValue = lookup();\n\n      // Changing field name to include datapath\n      // This will use us later for unflatten the final object\n      field.name = key;\n\n      if (dataHelpers.checkIfFieldIsObject(field)) {\n        if (lookupValue || field.value) {\n          field.value = JSON.stringify(lookupValue || field.value, null, '  ') || '';\n        }\n        return field;\n      }\n\n      if (field.type === 'array') {\n        field.value = lookupValue || field.value || [];\n        return field;\n      }\n\n      if (typeof lookupValue !== 'undefined') {\n        field.value = lookupValue;\n      } else {\n        // important in order to prevent controlled / uncontrolled components error\n        field.value = typeof field.value === 'undefined' ? '' : field.value;\n      }\n\n      if ((field.type === 'long-text' || field.type === 'text') && typeof finalRawData === 'string') {\n        field.value = finalRawData;\n      }\n\n      return field;\n    }));\n\n    setLoading(false);\n  }\n\n  async function submitForm(e: any) {\n    e.preventDefault();\n\n    const finalObject: any = (methodConfig as IConfigPutMethod).includeOriginalFields ? Object.assign({}, finalRawData) : {};\n    const formData = new FormData();\n    const containFiles: boolean = fileHelpers.isMultipartForm(formFields);\n    let validationError = null;\n\n    var queryParams: IQueryParam[] = [];\n\n    formFields.forEach((field) => {\n      if (field.type === 'file') {\n        const fileInput: any = document.querySelector(`input[name=\"${field.name || 'file'}\"]`) as HTMLInputElement;\n\n        if (fileInput.files.length > 0) {\n          const firstFile = fileInput.files[0];\n          formData.append(field.name || 'file', firstFile, firstFile.name);\n        }\n        return;\n      }\n\n      finalObject[field.name] = field.value;\n\n      if (containFiles && !field.useInUrl) {\n        formData.append(field.name, field.value);\n      }\n\n      // eslint-disable-next-line eqeqeq\n      if (field.required && field.type !== 'boolean' && !field.value && field.value != 0) {\n        validationError = 'Please fill up all required fields.';\n      }\n\n      if (dataHelpers.checkIfFieldIsObject(field) && field.value) {\n        try {\n          finalObject[field.name] = JSON.parse(field.value);\n        } catch (e) {\n          validationError = `Invalid JSON for field \"${field.name}\".`;\n        }\n      }\n\n      if (field.type === 'boolean') {\n        finalObject[field.name] = field.value || false;\n      }\n\n      if (field.type === 'encode') {\n        finalObject[field.name] = encodeURIComponent(field.value);\n      }\n\n      if (field.useInUrl) {\n        queryParams.push({ name: field.name, value: field.value });\n      }\n\n    });\n\n    if (validationError) {\n      toast.error(validationError);\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      const body = containFiles ? formData : unflatten(finalObject);\n      await submitCallback(body, containFiles, queryParams);\n\n      toast.success('Great Success!');\n\n      closeCallback(true);\n    } catch (e) {\n      toast.error(e.message);\n    }\n\n    setLoading(false);\n  }\n\n  function formChanged(fieldName: string, value: any) {\n    let updatedFormFields: IConfigInputField[] = JSON.parse(JSON.stringify(formFields));\n\n    updatedFormFields = updatedFormFields.map((field: IConfigInputField) => {\n      if (field.name === fieldName) {\n        field.value = value;\n      }\n\n      return field;\n    });\n\n    setFormFields(updatedFormFields);\n  }\n\n  useEffect(() => {\n    initFormFields();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Popup\n      show={true}\n      className=\"form-popup\"\n      closeCallback={() => closeCallback(false)}\n      customLabels={customLabels}\n    >\n      <React.Fragment>\n        <h2>{title}</h2>\n        <section>\n          {\n            loading ?\n            <Loader /> :\n            <form onSubmit={submitForm}>\n              {\n                formFields.map((field, idx) => {\n                  return (\n                    <FormRow\n                      key={`field_${idx}`}\n                      field={field}\n                      onChange={formChanged}\n                      showReset={!field.type || field.type === 'text'}\n                    />\n                  );\n                })\n              }\n              <div className=\"buttons-wrapper center\">\n                <Button type=\"submit\" onClick={submitForm} color=\"green\">Submit</Button>\n              </div>\n            </form>\n          }\n        </section>\n      </React.Fragment>\n    </Popup>\n  );\n});","import React from 'react';\n\nimport './filterField.scss';\n\ninterface IProps {\n  onChange: (filter: string) => void\n}\n\nexport const FilterField = ({ onChange }: IProps) => {\n  return (\n    <section className=\"filter-wrapper\">\n      <h5>Filter:</h5>\n      <div className=\"form-row\">\n        <input type=\"text\" placeholder=\"Search...\" onChange={(e) => onChange(e.target.value.toLowerCase())} />\n      </div>\n    </section>\n  );\n};","import { IPaginationState, IQueryPaginationState, IBodyPaginationState } from \"./states.model\";\n\nexport const isQueryPaginationState = (obj: IPaginationState): obj is IQueryPaginationState => {\n    return obj.source === 'query';\n}\n\nexport const isBodyPaginationState = (obj: IPaginationState): obj is IBodyPaginationState => {\n    return obj.source === 'body';\n}","import { IConfigPagination, IConfigBodyPagination, IConfigQueryPagination } from \"./config.model\";\n\nexport const isQueryPagination = (obj: IConfigPagination): obj is IConfigQueryPagination => {\n    return obj.source === 'query';\n}\n\nexport const isBodyPagination = (obj: IConfigPagination): obj is IConfigBodyPagination => {\n    return obj.source === 'body';\n}\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport * as QueryString from 'query-string';\nimport { toast } from 'react-toastify';\nimport { orderBy } from 'natural-orderby';\nimport { find, remove } from 'lodash';\n\nimport { IAppContext } from '../app.context';\nimport { IConfigPage, IConfigMethods, IConfigGetAllMethod, IConfigPostMethod, IConfigPutMethod, IConfigDeleteMethod, IConfigInputField, IConfigCustomAction, IConfigGetSingleMethod, ICustomLabels, IConfigPagination } from '../../common/models/config.model';\nimport { IPaginationState, IQueryPaginationState, IBodyPaginationState } from '../../common/models/states.model';\nimport { withAppContext } from '../withContext/withContext.comp';\nimport { Loader } from '../loader/loader.comp';\nimport { dataHelpers } from '../../helpers/data.helpers';\nimport { paginationHelpers } from '../../helpers/pagination.helpers';\nimport { Table } from '../table/table.comp';\nimport { Cards } from '../cards/cards.comp';\nimport { QueryParams } from '../queryParams/queryParams.comp';\nimport { Button } from '../button/button.comp';\nimport { FormPopup } from '../formPopup/formPopup.comp';\nimport { FilterField } from '../filterField/filterField.comp';\nimport { isQueryPaginationState, isBodyPaginationState } from '../../common/models/states.types.helper';\nimport { isQueryPagination, isBodyPagination } from '../../common/models/config.types.helper';\nimport locale from '../../common/locale.js';\n\nimport './page.scss';\n\ninterface IProps {\n  context: IAppContext\n}\n\ninterface IPopupProps {\n  type: 'add' | 'update' | 'action'\n  title: string\n  config: IConfigPostMethod | IConfigPutMethod\n  submitCallback: (body: any, containFiles: boolean) => void\n  getSingleConfig?: IConfigGetSingleMethod\n  rawData?: {}\n}\n\nconst buildInitQueryParamsAndPaginationState = (\n  initQueryParams: IConfigInputField[],\n  paginationConfig?: IConfigPagination,\n): {\n  initQueryParams: IConfigInputField[],\n  initialPagination?: IPaginationState,\n} => {\n    let initialPagination: IPaginationState | undefined = undefined;\n\n    if (paginationConfig) {\n      if(isQueryPagination(paginationConfig)) {\n        initialPagination = {\n          source: paginationConfig.source,\n          type: paginationConfig.type,\n          page: parseInt(paginationConfig.params?.page?.value || '1'),\n          limit: parseInt(paginationConfig.params?.limit?.value || '10'),\n          descending: paginationConfig.params?.descending?.value === 'true' || false,\n          hasPreviousPage: false,\n          hasNextPage: false,\n          sortBy: paginationConfig.params?.sortBy?.value,\n        };\n\n        if (!find(initQueryParams, { name: 'page' })) {\n          initQueryParams.push({\n            name: paginationConfig?.params?.page?.name,\n            label: paginationConfig?.params?.page?.label || 'Page',\n            value: initialPagination?.page\n          });\n        }\n\n        if (paginationConfig?.params?.limit && !find(initQueryParams, { name: 'limit' })) {\n          initQueryParams.push({\n            name: paginationConfig.params.limit.name,\n            label: paginationConfig.params.limit.label || 'Limit',\n            value: initialPagination?.limit\n          });\n        }\n\n        if (paginationConfig?.params?.descending && !find(initQueryParams, { name: 'descending' })) {\n          initQueryParams.push({\n            name: paginationConfig.params.descending.name,\n            label: paginationConfig.params.descending.label || 'Descending',\n            value: initialPagination?.descending\n          });\n        }\n\n        if (paginationConfig?.params?.sortBy && !find(initQueryParams, { name: 'sortBy' })) {\n          initQueryParams.push({\n            name: paginationConfig.params.sortBy.name,\n            label: 'Sort by',\n            value: initialPagination?.sortBy\n          });\n        }\n      } else if(isBodyPagination(paginationConfig)) {\n        initialPagination = {\n          source: 'body',\n          type: paginationConfig.type,\n          hasNextPage: false,\n          hasPreviousPage: false,\n          next: null,\n          previous: null,\n          limit: parseInt(paginationConfig.params?.limit?.value || '10')\n        }\n\n        if (paginationConfig?.params?.limit && !find(initQueryParams, { name: 'limit' })) {\n          initQueryParams.push({\n            name: paginationConfig.params.limit.name,\n            label: paginationConfig.params.limit.label || 'Limit',\n            value: initialPagination?.limit\n          });\n        }\n\n      } else {\n        throw new Error('unrecognized pagination');\n      }\n    }\n\n    return {\n      initQueryParams,\n      initialPagination\n    };\n};\n\nconst PageComp = ({ context }: IProps) => {\n  const { page } = useParams();\n  const { push, location } = useHistory();\n  const { activePage, error, setError, httpService, config } = context;\n  const pageHeaders: any = activePage?.requestHeaders || {};\n  const pageMethods: IConfigMethods | undefined = activePage?.methods;\n  const customActions: IConfigCustomAction[] = activePage?.customActions || [];\n  const getAllConfig: IConfigGetAllMethod | undefined = pageMethods?.getAll;\n  const paginationConfig = getAllConfig?.pagination;\n  const infiniteScroll = paginationConfig?.type === 'infinite-scroll';\n  const getSingleConfig: IConfigGetSingleMethod | undefined = pageMethods?.getSingle;\n  const postConfig: IConfigPostMethod | undefined = pageMethods?.post;\n  const putConfig: IConfigPutMethod | undefined = pageMethods?.put;\n  const deleteConfig: IConfigDeleteMethod | undefined = pageMethods?.delete;\n  const customLabels: ICustomLabels | undefined = { ...config?.customLabels, ...activePage?.customLabels };\n  const addItemLabel = customLabels?.buttons?.addItem || '+ Add Item';\n  const addItemFormTitle = customLabels?.formTitles?.addItem || 'Add Item';\n  const editItemFormTitle = customLabels?.formTitles?.editItem || 'Update Item';\n  const { initQueryParams, initialPagination } = buildInitQueryParamsAndPaginationState(getAllConfig?.queryParams || [], paginationConfig);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [openedPopup, setOpenedPopup] = useState<null | IPopupProps>(null);\n  const [queryParams, setQueryParams] = useState<IConfigInputField[]>(initQueryParams);\n  const [pagination, setPagination] = useState<IPaginationState | undefined>(initialPagination);\n  const [items, setItems] = useState<any[]>([]);\n  const [filter, setFilter] = useState<string>('');\n\n  function closeFormPopup(refreshData: boolean = false) {\n    setOpenedPopup(null);\n\n    if (refreshData === true) {\n      if (pagination?.type === 'infinite-scroll') {\n        setItems([]);\n        const updatedParams = [...queryParams];\n        remove(updatedParams, param => ['page', 'limit'].includes(param.name));\n        setQueryParams(buildInitQueryParamsAndPaginationState(updatedParams, paginationConfig).initQueryParams);\n      } else {\n        getAllRequest();\n      }\n    }\n  }\n\n  async function openEditPopup(rawData: any) {\n    const params: IPopupProps = {\n      rawData,\n      type: 'update',\n      title: editItemFormTitle,\n      config: putConfig as IConfigPutMethod,\n      getSingleConfig,\n      submitCallback: async (body: any, containFiles: boolean) => {\n        return await updateItem(body, rawData, containFiles);\n      }\n    };\n\n    setOpenedPopup(params);\n  }\n\n  function openCustomActionPopup(rawData: any, action: IConfigCustomAction) {\n    const params: IPopupProps = {\n      rawData,\n      type: 'action',\n      title: action.name || 'Custom Action',\n      config: action as IConfigCustomAction,\n      submitCallback: async (body: any, containFiles: boolean) => {\n        return await performAction(body, rawData, action, containFiles);\n      }\n    };\n\n    setOpenedPopup(params);\n  }\n\n  async function performAction(body: any, rawData: any, action: IConfigCustomAction, containFiles: boolean) {\n    const { url, requestHeaders, actualMethod } = action;\n\n    return await httpService.fetch({\n      method: actualMethod || 'put',\n      origUrl: url,\n      rawData,\n      body: containFiles ? body : JSON.stringify(body),\n      headers: {\n        ...pageHeaders,\n        ...(requestHeaders || {}),\n        ...(containFiles ? {} : { 'content-type': 'application/json' })\n      },\n      responseType: 'boolean'\n    });\n  }\n\n  function extractQueryParams(params: IConfigInputField[]): IConfigInputField[] {\n    if(!paginationConfig || isQueryPagination(paginationConfig)) {\n      const parsedParams = QueryString.parse(location.search);\n      const finalQueryParams = params.map((queryParam) => {\n        if (typeof parsedParams[queryParam.name] !== 'undefined') {\n          queryParam.value = queryParam.type === 'boolean' ? (parsedParams[queryParam.name] === 'true') : decodeURIComponent(parsedParams[queryParam.name] as any);\n        } else {\n          queryParam.value = queryParam.value || '';\n        }\n        return queryParam;\n      });\n\n      setPagination(getUpdatedPaginationState(finalQueryParams, null))\n\n      return finalQueryParams;\n    } else {\n      return params;\n    }\n  }\n\n  async function fetchPageData(params: {\n    actualMethod: 'get' | 'put' | 'post' | 'patch' | 'delete', \n    url: string,\n    requestHeaders?: any,\n    dataPath: string,\n    dataTransform: any,\n    sortBy: any\n  }) {\n    const result = await httpService.fetch({\n      method: params.actualMethod || 'get',\n      origUrl: params.url,\n      queryParams,\n      headers: Object.assign({}, pageHeaders, params.requestHeaders || {})\n    });\n    let extractedData = dataHelpers.extractDataByDataPath(result, params.dataPath);\n\n    if (!extractedData) {\n      throw new Error('Could not extract data from response.');\n    }\n\n    if (!Array.isArray(extractedData)) {\n      throw new Error('Extracted data is invalid.');\n    }\n\n    if (typeof params.dataTransform === 'function') {\n      extractedData = await params.dataTransform(extractedData);\n    }\n\n    const orderedItems = orderBy(extractedData, typeof params.sortBy === 'string' ? [params.sortBy] : (params.sortBy || []));\n\n    if (paginationConfig) {\n      const total = paginationConfig.fields?.total ? dataHelpers.extractDataByDataPath(result, paginationConfig.fields.total.dataPath) : undefined;\n      const newPaginationState = getUpdatedPaginationState(queryParams, result, total);\n      if (newPaginationState) {\n        setPagination(newPaginationState);\n      }\n    }\n\n    if (infiniteScroll) {\n      setItems([...items, ...orderedItems]);\n    } else {\n      setItems(orderedItems);\n    }\n  }\n\n  async function getAllRequest() {\n    if (infiniteScroll) {\n      if(pagination) {\n        if(isQueryPaginationState(pagination)) {\n          if(pagination?.page !== 1) {\n            setLoading(false);\n          }\n        } else if( isBodyPaginationState(pagination)) {\n          if(pagination.previous) {\n            setLoading(false);\n          }\n        } else {\n          throw new Error('unrecognized pagination source');\n        }\n      }\n    } else {\n      setLoading(true);\n    }\n\n    setError(null);\n\n    try {\n      if (!getAllConfig) {\n        throw new Error('Get all method is not defined.');\n      }\n\n      if (paginationConfig && !pagination) {\n        throw new Error('Pagination not initialized.');\n      }\n\n      const { url, requestHeaders, actualMethod, dataPath, sortBy, dataTransform } = getAllConfig;\n      await fetchPageData({\n        actualMethod: actualMethod,\n        url: url,\n        requestHeaders: requestHeaders,\n        dataPath: dataPath,\n        dataTransform: dataTransform,\n        sortBy: sortBy\n      });\n    } catch (e) {\n      setError(e.message);\n    }\n\n    setLoading(false);\n  }\n\n  async function addItem(body: any, containFiles?: boolean, queryParams?: []) {\n    if (!postConfig) {\n      throw new Error('Post method is not defined.');\n    }\n\n    const { url, requestHeaders, actualMethod } = postConfig;\n\n    return await httpService.fetch({\n      method: actualMethod || 'post',\n      origUrl: url,\n      queryParams,\n      body: containFiles ? body : JSON.stringify(body),\n      headers: {\n        ...pageHeaders,\n        ...(requestHeaders || {}),\n        ...(containFiles ? {} : { 'content-type': 'application/json' })\n      },\n      responseType: 'boolean'\n    });\n  }\n\n  async function updateItem(body: any, rawData: any, containFiles?: boolean) {\n    if (!putConfig) {\n      throw new Error('Put method is not defined.');\n    }\n\n    const { url, requestHeaders, actualMethod } = putConfig;\n\n    return await httpService.fetch({\n      method: actualMethod || 'put',\n      origUrl: url,\n      rawData,\n      body: containFiles ? body : JSON.stringify(body),\n      headers: {\n        ...pageHeaders,\n        ...(requestHeaders || {}),\n        ...(containFiles ? {} : { 'content-type': 'application/json' })\n      },\n      responseType: 'boolean'\n    });\n  }\n\n  async function deleteItem(item: any) {\n    const approved: boolean = window.confirm('Are you sure you want to delete this item?');\n\n    if (!approved) {\n      return;\n    }\n\n    try {\n      if (!deleteConfig) {\n        throw new Error('Delete method is not defined.');\n      }\n\n      const { url, requestHeaders, actualMethod } = deleteConfig;\n      const success = await httpService.fetch({\n        method: actualMethod || 'delete',\n        origUrl: url,\n        rawData: item,\n        headers: Object.assign({}, pageHeaders, requestHeaders || {}),\n        responseType: 'boolean'\n      });\n\n      if (success) {\n        if (pagination?.type === 'infinite-scroll') {\n          setItems([]);\n          const updatedParams = [...queryParams];\n          remove(updatedParams, param => ['page', 'limit'].includes(param.name));\n          setQueryParams(buildInitQueryParamsAndPaginationState(updatedParams, paginationConfig).initQueryParams);\n        } else {\n          getAllRequest();\n        }\n      }\n    } catch (e) {\n      toast.error(e.message);\n    }\n  }\n\n  function submitQueryParams(updatedParams: IConfigInputField[], reset?: boolean) {\n    if (loading) {\n      return;\n    }\n    \n    if (reset) {\n      setItems([]);\n      remove(updatedParams, param => ['page', 'limit'].includes(param.name));\n      updatedParams = buildInitQueryParamsAndPaginationState(updatedParams, paginationConfig).initQueryParams;\n    }\n\n    updatedParams.map((queryParam, idx) => {\n        if (queryParam.type === 'select' && queryParam.value === '-- Select --') {\n            // default value means nothing was selected and thus we explicitly\n            // empty out the value in this case; otherwise the string '-- Select --'\n            // is used as the value for the given queryParams\n            queryParam.value = '';\n        }\n    });\n\n    setQueryParams(updatedParams);\n    setPagination(getUpdatedPaginationState(updatedParams, null));\n\n    let paramsToUrl = [...updatedParams];\n\n    if (paginationConfig?.type === 'infinite-scroll') {\n      paramsToUrl = paramsToUrl.filter(param => !['page', 'limit'].includes(param.name));\n    }\n\n    // Building query string\n    const queryState: string = paramsToUrl.map((queryParam, idx) => {\n      return `${idx === 0 ? '?' : ''}${queryParam.name}=${encodeURIComponent(queryParam.value || '')}`;\n    }).join('&');\n\n    // Pushing query state to url\n    if (page && queryState) {\n      push(queryState);\n    }\n  }\n\n  function getUpdatedPaginationState(updatedParams: IConfigInputField[], result: any, total?: number): IPaginationState | undefined {\n    if (!paginationConfig) {\n      return;\n    }\n\n    if(isQueryPagination(paginationConfig)) {\n      if(pagination && !isQueryPaginationState(pagination)) {\n        throw new Error('unexpected pagination source ' + pagination.source)\n      }\n      const newState: IQueryPaginationState = pagination ? pagination : {\n        source: 'query',\n        type: paginationConfig.type,\n        page: parseInt(paginationConfig.params?.page?.value || '1'),\n        limit: parseInt(paginationConfig.params?.limit?.value || '10'),\n        descending: paginationConfig.params?.descending?.value === 'true' || false,\n        hasPreviousPage: false,\n        hasNextPage: false,\n        sortBy: paginationConfig.params?.sortBy?.value,\n      };\n\n      newState.total = total || pagination?.total;\n      newState.page = parseInt(updatedParams.find(param => param.name === paginationConfig?.params?.page?.name)?.value) || newState.page;\n      newState.limit = parseInt(updatedParams.find(param => param.name === paginationConfig?.params?.limit?.name)?.value) || newState.limit;\n      newState.descending = updatedParams.find(param => param.name === paginationConfig?.params?.descending?.name)?.value === 'true' || newState.descending;\n      newState.sortBy = updatedParams.find(param => param.name === paginationConfig?.params?.sortBy?.name)?.value || newState.sortBy;\n      newState.hasPreviousPage = paginationHelpers.hasPreviousPage(newState.page);\n      newState.hasNextPage = paginationHelpers.hasNextPage(newState.page, newState.limit, newState.total);\n      return newState;\n    } else if(isBodyPagination(paginationConfig)) {\n      if(pagination && !isBodyPaginationState(pagination)) {\n        throw new Error('unexpected pagination source ' + pagination.source)\n      }\n      const newState: IBodyPaginationState = pagination ? pagination : {\n        source: 'body',\n        type: paginationConfig.type,\n        next: result[paginationConfig.params.nextPath || 'next'],\n        previous: result[paginationConfig.params.prevPath || 'previous'],\n        hasNextPage: !!result[paginationConfig.params.nextPath || 'next'],\n        hasPreviousPage: !!result[paginationConfig.params.prevPath || 'previous'],\n        limit: parseInt(paginationConfig.params?.limit?.value || '10'),\n        total: result[paginationConfig.params.countPath || 'count']\n      };\n      if(result) {\n        newState.next = result[paginationConfig.params.nextPath || 'next'];\n        newState.previous = result[paginationConfig.params.prevPath || 'previous'];\n        newState.hasNextPage = !!result[paginationConfig.params.nextPath || 'next'];\n        newState.hasPreviousPage = !!result[paginationConfig.params.prevPath || 'previous'];\n        newState.total = result[paginationConfig.params.countPath || 'count'];\n      }\n      newState.limit = parseInt(updatedParams.find(param => param.name === paginationConfig?.params?.limit?.name)?.value) || newState.limit;\n      return newState;\n    } else {\n      throw new Error('unrecognized pagination source');\n    }\n  }\n\n  function renderItemsUI() {\n    if (loading) {\n      return <Loader />;\n    }\n\n    const fields = getAllConfig?.fields || getAllConfig?.display?.fields || [];\n    const fieldsToFilter = fields.filter((field) => (field.filterable)).map((field) => field.name);\n    let filteredItems = items;\n\n    if (filter && fieldsToFilter.length) {\n      filteredItems = items.filter((item) => {\n        let passFilter = false;\n        fieldsToFilter.forEach((fieldName) => {\n          const value = item[fieldName];\n          if (typeof value === 'string' && value.toLowerCase().indexOf(filter) >= 0) {\n            passFilter = true;\n          }\n        })\n        return passFilter;\n      });\n    }\n\n    if (!filteredItems.length) {\n      return <div className=\"app-error\">{locale.nothing_to_see}</div>;\n    }\n\n    const getNextPage = paginationConfig ? () => {\n      if(isQueryPagination(paginationConfig)) {\n        if(pagination && !isQueryPaginationState(pagination)) {\n          throw new Error('unexpected pagination source ' + pagination.source)\n        }\n        if (pagination?.page && queryParams.length > 0) {\n          const newPage = pagination?.page + 1;\n          const updatedParams = queryParams.map((param) => {\n            if (param.name === paginationConfig.params?.page?.name) {\n              return {\n                ...param,\n                value: newPage\n              }\n            }\n            return param;\n          });\n          submitQueryParams(updatedParams);\n        }\n      } else if(isBodyPagination(paginationConfig)) {\n        if(pagination && !isBodyPaginationState(pagination)) {\n          throw new Error('unexpected pagination source ' + pagination.source)\n        }\n        if(!getAllConfig || !pagination?.next) {\n          return;\n        }\n        const { requestHeaders, actualMethod, dataPath, sortBy, dataTransform } = getAllConfig;\n        fetchPageData(\n          {\n            actualMethod: actualMethod,\n            url: pagination.next,\n            requestHeaders: requestHeaders,\n            dataPath: dataPath,\n            dataTransform: dataTransform,\n            sortBy: sortBy\n          }\n        )\n      } else {\n        throw new Error('unrecognized pagination source');\n      }\n    } : null;\n\n    const getPreviousPage = paginationConfig ? () => {\n      if(isQueryPagination(paginationConfig)) {\n        if(pagination && !isQueryPaginationState(pagination)) {\n          throw new Error('unexpected pagination source ' + pagination.source)\n        }\n        if (pagination?.page && pagination.page > 1 && queryParams.length > 0) {\n          const newPage = pagination?.page - 1;\n          const updatedParams = queryParams.map((param) => {\n            if (param.name === paginationConfig.params?.page?.name) {\n              return {\n                ...param,\n                value: newPage\n              }\n            }\n            return param;\n          });\n          submitQueryParams(updatedParams);\n        }\n      } else if(isBodyPagination(paginationConfig)) {\n        if(pagination && !isBodyPaginationState(pagination)) {\n          throw new Error('unexpected pagination source ' + pagination.source)\n        }\n        if(!getAllConfig || !pagination?.previous) {\n          return;\n        }\n        const { requestHeaders, actualMethod, dataPath, sortBy, dataTransform } = getAllConfig;\n        fetchPageData(\n          {\n            actualMethod: actualMethod,\n            url: pagination.previous,\n            requestHeaders: requestHeaders,\n            dataPath: dataPath,\n            dataTransform: dataTransform,\n            sortBy: sortBy\n          }\n        )\n      } else {\n        throw new Error('unrecognized pagination source');\n      }\n    } : null;\n\n    const callbacks = {\n      delete: deleteConfig ? deleteItem : null,\n      put: putConfig ? openEditPopup : null,\n      action: customActions.length ? openCustomActionPopup : () => { },\n      getNextPage,\n      getPreviousPage,\n    };\n\n    if (getAllConfig?.display.type === 'cards') {\n      return (\n        <Cards\n          pagination={pagination}\n          callbacks={callbacks}\n          fields={fields}\n          items={filteredItems}\n          customActions={customActions}\n          customLabels={customLabels}\n        />\n      );\n    }\n\n    return (\n      <Table\n        pagination={pagination}\n        callbacks={callbacks}\n        fields={fields}\n        items={filteredItems}\n        customActions={customActions}\n        customLabels={customLabels}\n      />\n    );\n  }\n\n  function renderPaginationStateLabel() {\n    if (loading || !items.length) {\n      return;\n    }\n    \n    if(!pagination || isQueryPaginationState(pagination)) {\n      const currentCountFrom = (((pagination?.page || 1) - 1) * (pagination?.limit || 10)) + 1;\n      const currentCountTo = currentCountFrom + items.length - 1;\n      let label: string = `${locale.showing_result} ${currentCountFrom}-${currentCountTo} ${locale.out_of} ${pagination?.total} ${locale.items}`;\n\n      if (pagination?.type === 'infinite-scroll') {\n        label = `Showing ${pagination?.total} items`;\n      }\n\n      if (customLabels?.pagination?.itemsCount) {\n        label = customLabels?.pagination?.itemsCount\n                .replace(':currentCountFrom', currentCountFrom as any)\n                .replace(':currentCountTo', currentCountFrom as any)\n                .replace(':totalCount', pagination?.total as any);\n      }\n\n      return (\n        <p className=\"center pagination-state\">\n          {label}\n        </p>\n      );\n    }\n    if(isBodyPaginationState(pagination)) {\n      // TODO: extract start end end in a meaningful manner from the API\n      // this is not something that id based pagination APIs support generally\n      let label: string = `Total Results: ${pagination?.total}`;\n      if (pagination?.type === 'infinite-scroll') {\n        label = `Showing ${pagination?.total} items`;\n      }\n\n      if (customLabels?.pagination?.itemsCount) {\n        label = customLabels?.pagination?.itemsCount\n                .replace(':totalCount', pagination?.total as any);\n      }\n\n      return (\n        <p className=\"center pagination-state\">\n          {label}\n        </p>\n      );\n    }\n  }\n\n  function renderPageContent() {\n    const fields = getAllConfig?.fields || getAllConfig?.display?.fields || [];\n    const fieldsToFilter = fields.filter((field) => (field.filterable)).map((field) => field.name);\n\n    return (\n      <React.Fragment>\n        <QueryParams\n          initialParams={queryParams}\n          paginationConfig={paginationConfig}\n          submitCallback={submitQueryParams}\n        />\n        {\n          fieldsToFilter.length > 0 &&\n          <FilterField onChange={setFilter} />\n        }\n        {\n          pagination?.total &&\n          renderPaginationStateLabel()\n        }\n        {\n          error ?\n          <div className=\"app-error\">{error}</div> :\n          renderItemsUI()\n        }\n      </React.Fragment>\n    )\n  }\n\n  useEffect(() => {\n    const nextActivePage: IConfigPage | null = context?.config?.pages?.filter((p, pIdx) => p.id === page || (pIdx + 1) === parseInt(page || ''))[0] || null;\n    context.setActivePage(nextActivePage);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [page]);\n\n  useEffect(() => {\n    const { initQueryParams, initialPagination } = buildInitQueryParamsAndPaginationState(getAllConfig?.queryParams || [], paginationConfig);\n\n    setItems([]);\n    setQueryParams(extractQueryParams(initQueryParams));\n    setPagination(initialPagination);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activePage]);\n\n  useEffect(() => {\n    // Load data when query params \n    getAllRequest();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [queryParams]);\n\n  return (\n    <div className=\"app-page\">\n      <header className=\"app-page-header\">\n        <hgroup>\n          <h2>{activePage?.name}</h2>\n          {\n            activePage?.description &&\n            <h4>{activePage?.description}</h4>\n          }\n        </hgroup>\n        {\n          postConfig &&\n          <Button className=\"add-item\" color=\"green\" onClick={() => setOpenedPopup({ type: 'add', title: addItemFormTitle, config: postConfig, submitCallback: addItem })}>{addItemLabel}</Button>\n        }\n      </header>\n      <main className=\"app-page-content\">\n        {renderPageContent()}\n      </main>\n      {\n        openedPopup &&\n        <FormPopup\n          title={openedPopup.title}\n          closeCallback={closeFormPopup}\n          submitCallback={openedPopup.submitCallback}\n          fields={openedPopup.config?.fields || []}\n          rawData={openedPopup.rawData}\n          getSingleConfig={openedPopup.getSingleConfig}\n          methodConfig={openedPopup.config}\n        />\n      }\n    </div>\n  );\n}\n\nexport const Page = withAppContext(PageComp);\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button } from '../button/button.comp';\nimport { toast } from 'react-toastify';\nimport { withAppContext } from '../withContext/withContext.comp';\nimport locale from '../../common/locale.js';\nimport { IAppContext } from '../app.context';\n\nimport './authPage.scss';\n\ninterface IProps { context: IAppContext }\n\nconst AuthPageComp = ({ context }: IProps) => {\n  const { location, replace } = useHistory();\n  const [user, setUser] = useState<string>('');\n  const [pwd, setPwd] = useState<string>('');\n  const [tenant, setTenant] = useState<string>('');\n  const { activePage, error, setError, httpService, config } = context;\n\n  async function submitForm(e: any) {\n    e.preventDefault();\n    try {\n        const credentials = { username: `${user}`, password: `${pwd}`, tenant: `${tenant}`}\n        const result = await httpService.fetch({\n            method: 'post',\n            origUrl: httpService.loginUrl,\n            body: JSON.stringify(credentials),\n            headers: { 'content-type': 'application/json' }\n        });\n        if (!result) { throw new Error(locale.login_error) };\n        sessionStorage.setItem('diten-token', result.token);\n        const { from } = location.state || { from: { pathname: '/' } };\n        replace(from);\n    } \n    catch (e) { \n        setError(e.message); \n        toast.error(e.message);\n    }\n  }\n\n  function handleUserChange(event: any) {\n    setUser(event.target.value);\n  }\n\n  function handlePwdChange(event: any) {\n    setPwd(event.target.value);\n  }\n\n  function handleTenantChange(event: any) {\n    setTenant(event.target.value);\n  }\n\n  return (\n    <div className=\"auth-page\">\n      <form className='form-content' onSubmit={submitForm}>\n        <div className='form-row row'>\n          <label>{locale.username}</label>\n          <input type=\"text\" placeholder={locale.username_suggestion} onChange={handleUserChange} />\n        </div>\n        <div className='form-row row'>\n          <label>{locale.password}</label>\n          <input type=\"password\" placeholder={locale.password_suggenstion} onChange={handlePwdChange} />\n        </div>\n        <div className='form-row row'>\n          <label>{locale.tenant}</label>\n          <input type=\"text\" placeholder={locale.tenant_suggenstion} onChange={handleTenantChange} />\n        </div>\n        <div className=\"buttons-wrapper center\">\n          <Button type=\"submit\" onClick={submitForm} color=\"green\">{locale.submit}</Button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport const AuthPage = withAppContext(AuthPageComp);","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { IAppContext } from '../app.context';\nimport { withAppContext } from '../withContext/withContext.comp';\nimport { Button } from '../button/button.comp';\n\nimport './navigation.scss';\n\ninterface IProps {\n  context: IAppContext\n}\n\nconst NavigationComp = ({ context: { config } }: IProps) => {\n  const [isOpened, setIsOpened] = useState<boolean>(false);\n\n  return (\n    <nav className=\"app-nav\">\n      <Button className=\"app-nav-opener\" onClick={() => setIsOpened(!isOpened)}>\n        {\n          isOpened ? \n          <i className=\"fa fa-times\" aria-hidden=\"true\"></i> : \n          <i className=\"fa fa-bars\" aria-hidden=\"true\"></i>\n        }\n      </Button>\n      <div className={`app-nav-wrapper ${isOpened ? 'opened' : ''}`}>\n        <div className=\"app-nav-links\">\n          {\n            (config?.pages || []).map((page, idx) => (\n              <NavLink to={`/${page.id || idx + 1}`} activeClassName=\"active\" key={`page_${idx}`} onClick={() => setIsOpened(false)}>{page.name}</NavLink>\n            ))\n          }\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport const Navigation = withAppContext(NavigationComp);","import React from 'react';\nimport { ICustomStyles } from '../../common/models/config.model';\n\ninterface IProps {\n  styles: ICustomStyles\n}\n\nexport const CustomStyles = ({ styles }: IProps) => {\n  const cssVars = styles.vars || {};\n  const arr = [];\n  \n  for (const key in cssVars) {\n    arr.push(`--${key}: ${(cssVars as any)[key]}`);\n  }\n\n  return (\n    <style dangerouslySetInnerHTML={{ __html: `\n      :root {\n        ${arr.join(';')}\n      }\n    ` }}>\n    </style>\n  );\n};","import React, { useEffect, useState } from 'react';\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport ConfigService from '../services/config.service';\nimport { IConfig, IConfigPage } from '../common/models/config.model';\nimport { Page } from '../components/page/page.comp';\nimport { AuthPage } from '../components/authPage/authPage.comp';\nimport { Navigation } from '../components/navigation/navigation.comp';\nimport { AppContext } from './app.context';\nimport HttpService from '../services/http.service';\nimport { CustomStyles } from './customStyles/customStyles.comp';\n\nimport './app.scss';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst httpService = new HttpService();\nconst defaultAppName: string = 'RESTool App';\n\nfunction changeFavicon(src: string) {\n  const link = document.createElement('link');\n  const oldLink = document.getElementById('favicon');\n  link.id = 'favicon';\n  link.rel = 'shortcut icon';\n  link.href = src;\n  if (oldLink) {\n   document.head.removeChild(oldLink);\n  }\n  document.head.appendChild(link);\n }\n\nfunction App() {\n  const [firstLoad, setFirstLoad] = useState<boolean>(true);\n  const [config, setConfig] = useState<IConfig | null>(null);\n  const [activePage, setActivePage] = useState<IConfigPage | null>(config?.pages?.[0] || null);\n  const [error, setError] = useState<string | null>(null);\n  const appName: string = config?.name || defaultAppName;\n  \n  async function loadConfig(url?: string): Promise<void> {\n    try {\n      const windowConfig = (window as any).RESTool?.config;\n      let remoteConfig: IConfig; \n      // Try to load config from window object first\n      if (!url && windowConfig) {\n        remoteConfig = Object.assign({}, windowConfig, {});\n      } else {\n        remoteConfig = url ? await ConfigService.getRemoteConfig(url) : await ConfigService.loadDefaultConfig();\n      }\n\n      // Setting global config for httpService\n      httpService.baseUrl = remoteConfig.baseUrl || '';\n      httpService.loginUrl = remoteConfig.loginUrl || '';\n      httpService.errorMessageDataPath = remoteConfig.errorMessageDataPath || '';\n      httpService.unauthorizedRedirectUrl = remoteConfig.unauthorizedRedirectUrl || '';\n      httpService.requestHeaders = remoteConfig.requestHeaders || {};\n      document.title = remoteConfig.name || defaultAppName;\n\n      if (remoteConfig?.favicon) {\n        changeFavicon(remoteConfig.favicon);\n      }\n\n      if (remoteConfig?.remoteUrl) {\n        return await loadConfig(remoteConfig.remoteUrl);\n      }\n\n      setConfig(remoteConfig);\n    } catch (e) {\n      console.error('Could not load config file', e);\n    }\n\n    setFirstLoad(false);\n  }\n\n  function scrollToTop(scrollDuration: number = 250) {\n    var cosParameter = window.scrollY / 2,\n    scrollCount = 0,\n    oldTimestamp = performance.now();\n\n    function step (newTimestamp: number) {\n      scrollCount += Math.PI / (scrollDuration / (newTimestamp - oldTimestamp));\n\n      if (scrollCount >= Math.PI) {\n        window.scrollTo(0, 0);\n      }\n\n      if (window.scrollY === 0) {\n        return;\n      }\n\n      window.scrollTo(0, Math.round(cosParameter + cosParameter * Math.cos(scrollCount)));\n      oldTimestamp = newTimestamp;\n      window.requestAnimationFrame(step);\n    }\n\n    window.requestAnimationFrame(step);\n  }\n\n  useEffect(() => {\n    loadConfig();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const { isValid, errorMessage } = ConfigService.validateConfig(config);\n\n    if (!isValid) {\n      setError(errorMessage);\n      toast.error(errorMessage);\n      return;\n    }\n  }, [config]);\n\n  return (\n    <div className=\"restool-app\">\n      {\n        !config ?\n        <div className=\"app-error\">\n          {firstLoad ? 'Loading Configuration...' : 'Could not find config file.'}\n        </div> :\n        <AppContext.Provider value={{ config, activePage, setActivePage, error, setError, httpService }}>\n          {\n            config.customStyles &&\n            <CustomStyles\n              styles={config.customStyles}\n            />\n          }\n          <Router>\n            <aside>\n              <h1 title={appName} onClick={() => scrollToTop()}>{appName}</h1>\n              {\n                <Navigation />\n              }\n            </aside>\n            {\n              config &&\n              <Switch>\n                <Route exact path='/login' component={AuthPage} />\n                <Route exact path=\"/:page\" component={Page} />\n                <Redirect path=\"/\" to={`/${config?.pages?.[0]?.id || '1'}`} />\n              </Switch>\n            }\n            <ToastContainer\n              position={toast.POSITION.TOP_CENTER}\n              autoClose={4000}\n              draggable={false}\n            />\n          </Router>\n        </AppContext.Provider>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config: any) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config: any) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config: any) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n","const locale = Object.freeze({\n    username: 'Nome utente',\n    password: 'Password',\n    tenant: 'Organizzazione',\n    username_suggestion: 'Inserisci il nome utente',\n    password_suggenstion: 'Inserisci la password',\n    tenant_suggenstion: 'Inserisci la tua organizzazione',\n    submit: 'Submit',\n    login_error: 'Login errata!',\n    search: 'Cerca',\n    previous_page: 'Pagina precedente',\n    next_page: 'Prossima pagina',\n    showing_result: \"Risultati\",\n    out_of: \"di\",\n    items: \"totali\",\n    nothing_to_see: \"Nessun risultato\",\n    enter_text: \"inserisci testo\"\n});\n\nmodule.exports = locale;"],"sourceRoot":""}